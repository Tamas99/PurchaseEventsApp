apiVersion: apps/v1 #version of the API to use
kind: Deployment #what kind of object we're deploying
metadata: #information about our object we're deploying
  name: purchase-deployment #name of the deployment
  labels: #a labels on the deployments created
    app: purchase
spec: #specifications for our object
  replicas: 1 #the number of pods that should always be running
  selector: #which pods the replica set should be responsible for
    matchLabels:
      app: purchase #any pods with labels matching this I'm responsible for
  template: #the pod template that gets deployed
    metadata:
      labels: #labels on the replica set and pods created
        app: purchase
    spec:
      containers:
      - name: purchase-container #the name of the container within the pod
        image: {{ .Values.purchase.image }}:{{ .Values.purchase.tag }} #which container image should be pulled
        envFrom:
        - configMapRef:
            name: purchase-configmap
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8010 #the port of the container within the pod
        resources:
          requests:  # The resources the Pod will request upon startup
            cpu: "2.0"
            memory: "2Gi"
          limits:  # The maximum resources the Pod can use
            cpu: "2.0"
            memory: "2Gi"
      restartPolicy: Always
      
---
apiVersion: v1 #version of the API to use
kind: Service #what kind of object we're deploying
metadata: #information about our object we're deploying
  name: purchase-service #name of the service
  labels:
    app: purchase
spec: #specifications for our object
#  type: NodePort #Ignore for now
  type: LoadBalancer #Ignore for now
  ports: #Ignore for now
  - protocol: TCP
    port: 8010
    targetPort: 8010
  selector: #label selector used to identify pods
    app: purchase
