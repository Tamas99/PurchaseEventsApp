/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1182353.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 112.0], [0.7, 161.0], [0.8, 167.0], [0.9, 170.0], [1.0, 172.0], [1.1, 174.0], [1.2, 177.0], [1.3, 179.0], [1.4, 181.0], [1.5, 183.0], [1.6, 186.0], [1.7, 189.0], [1.8, 191.0], [1.9, 193.0], [2.0, 195.0], [2.1, 196.0], [2.2, 197.0], [2.3, 199.0], [2.4, 200.0], [2.5, 201.0], [2.6, 203.0], [2.7, 204.0], [2.8, 205.0], [2.9, 206.0], [3.0, 207.0], [3.1, 208.0], [3.2, 209.0], [3.3, 211.0], [3.4, 212.0], [3.5, 213.0], [3.6, 214.0], [3.7, 214.0], [3.8, 215.0], [3.9, 216.0], [4.0, 217.0], [4.1, 218.0], [4.2, 219.0], [4.3, 220.0], [4.4, 221.0], [4.5, 221.0], [4.6, 222.0], [4.7, 224.0], [4.8, 225.0], [4.9, 225.0], [5.0, 226.0], [5.1, 227.0], [5.2, 228.0], [5.3, 229.0], [5.4, 230.0], [5.5, 231.0], [5.6, 232.0], [5.7, 233.0], [5.8, 234.0], [5.9, 235.0], [6.0, 236.0], [6.1, 237.0], [6.2, 238.0], [6.3, 239.0], [6.4, 240.0], [6.5, 240.0], [6.6, 242.0], [6.7, 243.0], [6.8, 244.0], [6.9, 245.0], [7.0, 246.0], [7.1, 247.0], [7.2, 248.0], [7.3, 249.0], [7.4, 250.0], [7.5, 251.0], [7.6, 253.0], [7.7, 253.0], [7.8, 254.0], [7.9, 255.0], [8.0, 257.0], [8.1, 258.0], [8.2, 259.0], [8.3, 260.0], [8.4, 261.0], [8.5, 262.0], [8.6, 263.0], [8.7, 264.0], [8.8, 266.0], [8.9, 267.0], [9.0, 268.0], [9.1, 269.0], [9.2, 270.0], [9.3, 271.0], [9.4, 272.0], [9.5, 273.0], [9.6, 274.0], [9.7, 276.0], [9.8, 277.0], [9.9, 278.0], [10.0, 280.0], [10.1, 281.0], [10.2, 282.0], [10.3, 283.0], [10.4, 284.0], [10.5, 285.0], [10.6, 287.0], [10.7, 289.0], [10.8, 290.0], [10.9, 292.0], [11.0, 294.0], [11.1, 295.0], [11.2, 297.0], [11.3, 298.0], [11.4, 300.0], [11.5, 301.0], [11.6, 302.0], [11.7, 304.0], [11.8, 305.0], [11.9, 306.0], [12.0, 307.0], [12.1, 309.0], [12.2, 310.0], [12.3, 311.0], [12.4, 313.0], [12.5, 314.0], [12.6, 316.0], [12.7, 317.0], [12.8, 319.0], [12.9, 320.0], [13.0, 322.0], [13.1, 323.0], [13.2, 325.0], [13.3, 327.0], [13.4, 328.0], [13.5, 331.0], [13.6, 333.0], [13.7, 337.0], [13.8, 339.0], [13.9, 342.0], [14.0, 346.0], [14.1, 348.0], [14.2, 351.0], [14.3, 355.0], [14.4, 359.0], [14.5, 362.0], [14.6, 366.0], [14.7, 370.0], [14.8, 375.0], [14.9, 381.0], [15.0, 385.0], [15.1, 388.0], [15.2, 392.0], [15.3, 396.0], [15.4, 402.0], [15.5, 409.0], [15.6, 417.0], [15.7, 427.0], [15.8, 433.0], [15.9, 439.0], [16.0, 447.0], [16.1, 456.0], [16.2, 466.0], [16.3, 473.0], [16.4, 482.0], [16.5, 488.0], [16.6, 494.0], [16.7, 498.0], [16.8, 504.0], [16.9, 510.0], [17.0, 518.0], [17.1, 526.0], [17.2, 533.0], [17.3, 540.0], [17.4, 545.0], [17.5, 553.0], [17.6, 557.0], [17.7, 562.0], [17.8, 567.0], [17.9, 573.0], [18.0, 579.0], [18.1, 582.0], [18.2, 589.0], [18.3, 593.0], [18.4, 600.0], [18.5, 607.0], [18.6, 612.0], [18.7, 619.0], [18.8, 623.0], [18.9, 628.0], [19.0, 635.0], [19.1, 641.0], [19.2, 648.0], [19.3, 659.0], [19.4, 667.0], [19.5, 676.0], [19.6, 683.0], [19.7, 692.0], [19.8, 705.0], [19.9, 720.0], [20.0, 733.0], [20.1, 751.0], [20.2, 762.0], [20.3, 779.0], [20.4, 797.0], [20.5, 820.0], [20.6, 838.0], [20.7, 852.0], [20.8, 863.0], [20.9, 875.0], [21.0, 898.0], [21.1, 918.0], [21.2, 938.0], [21.3, 962.0], [21.4, 991.0], [21.5, 1011.0], [21.6, 1042.0], [21.7, 1092.0], [21.8, 1128.0], [21.9, 1150.0], [22.0, 1164.0], [22.1, 1168.0], [22.2, 1174.0], [22.3, 1182.0], [22.4, 1187.0], [22.5, 1192.0], [22.6, 1197.0], [22.7, 1201.0], [22.8, 1204.0], [22.9, 1207.0], [23.0, 1209.0], [23.1, 1212.0], [23.2, 1213.0], [23.3, 1216.0], [23.4, 1220.0], [23.5, 1223.0], [23.6, 1227.0], [23.7, 1231.0], [23.8, 1234.0], [23.9, 1238.0], [24.0, 1241.0], [24.1, 1248.0], [24.2, 1255.0], [24.3, 1260.0], [24.4, 1265.0], [24.5, 1271.0], [24.6, 1275.0], [24.7, 1278.0], [24.8, 1283.0], [24.9, 1287.0], [25.0, 1292.0], [25.1, 1296.0], [25.2, 1300.0], [25.3, 1304.0], [25.4, 1307.0], [25.5, 1314.0], [25.6, 1318.0], [25.7, 1323.0], [25.8, 1335.0], [25.9, 1342.0], [26.0, 1352.0], [26.1, 1364.0], [26.2, 1377.0], [26.3, 1392.0], [26.4, 1423.0], [26.5, 1470.0], [26.6, 1553.0], [26.7, 1585.0], [26.8, 1629.0], [26.9, 1672.0], [27.0, 1697.0], [27.1, 1739.0], [27.2, 1774.0], [27.3, 1802.0], [27.4, 1845.0], [27.5, 1872.0], [27.6, 1928.0], [27.7, 1981.0], [27.8, 2045.0], [27.9, 2085.0], [28.0, 2138.0], [28.1, 2204.0], [28.2, 2235.0], [28.3, 2258.0], [28.4, 2279.0], [28.5, 2297.0], [28.6, 2318.0], [28.7, 2367.0], [28.8, 2407.0], [28.9, 2488.0], [29.0, 2560.0], [29.1, 2656.0], [29.2, 2730.0], [29.3, 2777.0], [29.4, 2831.0], [29.5, 2927.0], [29.6, 3077.0], [29.7, 3170.0], [29.8, 3180.0], [29.9, 3189.0], [30.0, 3196.0], [30.1, 3200.0], [30.2, 3205.0], [30.3, 3208.0], [30.4, 3213.0], [30.5, 3216.0], [30.6, 3220.0], [30.7, 3223.0], [30.8, 3226.0], [30.9, 3228.0], [31.0, 3231.0], [31.1, 3233.0], [31.2, 3236.0], [31.3, 3239.0], [31.4, 3242.0], [31.5, 3247.0], [31.6, 3253.0], [31.7, 3260.0], [31.8, 3267.0], [31.9, 3274.0], [32.0, 3278.0], [32.1, 3284.0], [32.2, 3291.0], [32.3, 3297.0], [32.4, 3303.0], [32.5, 3315.0], [32.6, 3333.0], [32.7, 3362.0], [32.8, 3451.0], [32.9, 3531.0], [33.0, 3646.0], [33.1, 3920.0], [33.2, 4161.0], [33.3, 4241.0], [33.4, 4289.0], [33.5, 4337.0], [33.6, 4433.0], [33.7, 4552.0], [33.8, 4856.0], [33.9, 5185.0], [34.0, 5594.0], [34.1, 6049.0], [34.2, 6243.0], [34.3, 6296.0], [34.4, 6457.0], [34.5, 6798.0], [34.6, 7130.0], [34.7, 7205.0], [34.8, 7222.0], [34.9, 7233.0], [35.0, 7245.0], [35.1, 7292.0], [35.2, 8174.0], [35.3, 9358.0], [35.4, 9478.0], [35.5, 9578.0], [35.6, 10271.0], [35.7, 10650.0], [35.8, 11004.0], [35.9, 11196.0], [36.0, 11514.0], [36.1, 12146.0], [36.2, 12589.0], [36.3, 12969.0], [36.4, 13031.0], [36.5, 13764.0], [36.6, 14071.0], [36.7, 14921.0], [36.8, 15091.0], [36.9, 15343.0], [37.0, 15758.0], [37.1, 15878.0], [37.2, 16208.0], [37.3, 17652.0], [37.4, 17907.0], [37.5, 18012.0], [37.6, 18546.0], [37.7, 18601.0], [37.8, 18720.0], [37.9, 18849.0], [38.0, 19005.0], [38.1, 19266.0], [38.2, 19287.0], [38.3, 19384.0], [38.4, 20584.0], [38.5, 20740.0], [38.6, 20857.0], [38.7, 21047.0], [38.8, 21166.0], [38.9, 21235.0], [39.0, 21723.0], [39.1, 21764.0], [39.2, 21995.0], [39.3, 22650.0], [39.4, 23341.0], [39.5, 23639.0], [39.6, 24235.0], [39.7, 25756.0], [39.8, 26093.0], [39.9, 26173.0], [40.0, 26361.0], [40.1, 27640.0], [40.2, 27685.0], [40.3, 27772.0], [40.4, 29180.0], [40.5, 29523.0], [40.6, 29814.0], [40.7, 30009.0], [40.8, 30126.0], [40.9, 31323.0], [41.0, 32168.0], [41.1, 32667.0], [41.2, 33252.0], [41.3, 33530.0], [41.4, 34180.0], [41.5, 34247.0], [41.6, 34479.0], [41.7, 34653.0], [41.8, 34933.0], [41.9, 35115.0], [42.0, 35211.0], [42.1, 35260.0], [42.2, 35400.0], [42.3, 35541.0], [42.4, 36032.0], [42.5, 36131.0], [42.6, 36411.0], [42.7, 37178.0], [42.8, 37326.0], [42.9, 37431.0], [43.0, 37692.0], [43.1, 38736.0], [43.2, 39046.0], [43.3, 39096.0], [43.4, 39107.0], [43.5, 39227.0], [43.6, 39782.0], [43.7, 39880.0], [43.8, 40210.0], [43.9, 40358.0], [44.0, 40526.0], [44.1, 40874.0], [44.2, 41089.0], [44.3, 41323.0], [44.4, 41986.0], [44.5, 42677.0], [44.6, 43408.0], [44.7, 43846.0], [44.8, 45157.0], [44.9, 45248.0], [45.0, 45832.0], [45.1, 46531.0], [45.2, 46870.0], [45.3, 47234.0], [45.4, 47457.0], [45.5, 47615.0], [45.6, 47820.0], [45.7, 48025.0], [45.8, 48338.0], [45.9, 48562.0], [46.0, 48605.0], [46.1, 48622.0], [46.2, 48632.0], [46.3, 48642.0], [46.4, 48647.0], [46.5, 48652.0], [46.6, 48660.0], [46.7, 48669.0], [46.8, 48677.0], [46.9, 48683.0], [47.0, 48695.0], [47.1, 48713.0], [47.2, 48725.0], [47.3, 48745.0], [47.4, 48768.0], [47.5, 49770.0], [47.6, 49823.0], [47.7, 49895.0], [47.8, 50298.0], [47.9, 50563.0], [48.0, 50808.0], [48.1, 51097.0], [48.2, 51490.0], [48.3, 51617.0], [48.4, 51717.0], [48.5, 51982.0], [48.6, 52267.0], [48.7, 53127.0], [48.8, 53272.0], [48.9, 53497.0], [49.0, 54655.0], [49.1, 54934.0], [49.2, 55191.0], [49.3, 55300.0], [49.4, 55419.0], [49.5, 55470.0], [49.6, 56405.0], [49.7, 57069.0], [49.8, 57984.0], [49.9, 58174.0], [50.0, 58242.0], [50.1, 58302.0], [50.2, 58373.0], [50.3, 58427.0], [50.4, 58455.0], [50.5, 58479.0], [50.6, 58506.0], [50.7, 58517.0], [50.8, 58525.0], [50.9, 58532.0], [51.0, 58538.0], [51.1, 58550.0], [51.2, 58559.0], [51.3, 58567.0], [51.4, 58573.0], [51.5, 58579.0], [51.6, 58586.0], [51.7, 58601.0], [51.8, 58625.0], [51.9, 58639.0], [52.0, 58646.0], [52.1, 58654.0], [52.2, 58666.0], [52.3, 58699.0], [52.4, 58812.0], [52.5, 58944.0], [52.6, 59088.0], [52.7, 59186.0], [52.8, 59275.0], [52.9, 59324.0], [53.0, 59335.0], [53.1, 59448.0], [53.2, 59656.0], [53.3, 59717.0], [53.4, 59739.0], [53.5, 60033.0], [53.6, 61667.0], [53.7, 62082.0], [53.8, 62154.0], [53.9, 62482.0], [54.0, 62560.0], [54.1, 62668.0], [54.2, 62819.0], [54.3, 63315.0], [54.4, 63551.0], [54.5, 63649.0], [54.6, 63745.0], [54.7, 63876.0], [54.8, 63926.0], [54.9, 63961.0], [55.0, 64008.0], [55.1, 64161.0], [55.2, 64268.0], [55.3, 64318.0], [55.4, 64418.0], [55.5, 64627.0], [55.6, 64936.0], [55.7, 65524.0], [55.8, 66046.0], [55.9, 66202.0], [56.0, 66390.0], [56.1, 66768.0], [56.2, 66919.0], [56.3, 67056.0], [56.4, 67166.0], [56.5, 67335.0], [56.6, 67554.0], [56.7, 67701.0], [56.8, 67805.0], [56.9, 67958.0], [57.0, 68061.0], [57.1, 68270.0], [57.2, 68354.0], [57.3, 68549.0], [57.4, 68851.0], [57.5, 70148.0], [57.6, 70617.0], [57.7, 70699.0], [57.8, 70927.0], [57.9, 70989.0], [58.0, 71149.0], [58.1, 71414.0], [58.2, 71559.0], [58.3, 71711.0], [58.4, 71839.0], [58.5, 71929.0], [58.6, 72039.0], [58.7, 72106.0], [58.8, 72175.0], [58.9, 72304.0], [59.0, 72421.0], [59.1, 72485.0], [59.2, 72532.0], [59.3, 72636.0], [59.4, 72699.0], [59.5, 72749.0], [59.6, 72797.0], [59.7, 72869.0], [59.8, 72958.0], [59.9, 73063.0], [60.0, 73114.0], [60.1, 73257.0], [60.2, 73330.0], [60.3, 73389.0], [60.4, 73495.0], [60.5, 73627.0], [60.6, 73708.0], [60.7, 73804.0], [60.8, 73963.0], [60.9, 74160.0], [61.0, 74284.0], [61.1, 74413.0], [61.2, 74592.0], [61.3, 74707.0], [61.4, 74799.0], [61.5, 74897.0], [61.6, 75009.0], [61.7, 75142.0], [61.8, 75282.0], [61.9, 75417.0], [62.0, 75500.0], [62.1, 75543.0], [62.2, 75624.0], [62.3, 75708.0], [62.4, 75795.0], [62.5, 75879.0], [62.6, 76046.0], [62.7, 76166.0], [62.8, 76263.0], [62.9, 76606.0], [63.0, 76760.0], [63.1, 76875.0], [63.2, 77026.0], [63.3, 77061.0], [63.4, 77140.0], [63.5, 77231.0], [63.6, 77303.0], [63.7, 77337.0], [63.8, 77367.0], [63.9, 77416.0], [64.0, 77451.0], [64.1, 77491.0], [64.2, 77521.0], [64.3, 77540.0], [64.4, 77573.0], [64.5, 77630.0], [64.6, 77691.0], [64.7, 77737.0], [64.8, 77802.0], [64.9, 77857.0], [65.0, 77895.0], [65.1, 77935.0], [65.2, 77988.0], [65.3, 78095.0], [65.4, 78227.0], [65.5, 78671.0], [65.6, 79154.0], [65.7, 79268.0], [65.8, 79404.0], [65.9, 79546.0], [66.0, 79679.0], [66.1, 79853.0], [66.2, 79959.0], [66.3, 80277.0], [66.4, 80361.0], [66.5, 80515.0], [66.6, 80638.0], [66.7, 80859.0], [66.8, 81411.0], [66.9, 81483.0], [67.0, 82566.0], [67.1, 83068.0], [67.2, 83141.0], [67.3, 83194.0], [67.4, 83383.0], [67.5, 83496.0], [67.6, 83545.0], [67.7, 83585.0], [67.8, 83708.0], [67.9, 83779.0], [68.0, 83847.0], [68.1, 84026.0], [68.2, 84447.0], [68.3, 86590.0], [68.4, 86619.0], [68.5, 86720.0], [68.6, 86905.0], [68.7, 87828.0], [68.8, 89462.0], [68.9, 89770.0], [69.0, 89942.0], [69.1, 90071.0], [69.2, 90199.0], [69.3, 90308.0], [69.4, 90454.0], [69.5, 90577.0], [69.6, 90677.0], [69.7, 90746.0], [69.8, 90852.0], [69.9, 90926.0], [70.0, 91054.0], [70.1, 91167.0], [70.2, 91289.0], [70.3, 91335.0], [70.4, 91425.0], [70.5, 91516.0], [70.6, 91598.0], [70.7, 91671.0], [70.8, 91917.0], [70.9, 92244.0], [71.0, 92469.0], [71.1, 92622.0], [71.2, 93075.0], [71.3, 93224.0], [71.4, 93543.0], [71.5, 93675.0], [71.6, 93829.0], [71.7, 93983.0], [71.8, 94196.0], [71.9, 94230.0], [72.0, 94382.0], [72.1, 94609.0], [72.2, 94732.0], [72.3, 94877.0], [72.4, 95184.0], [72.5, 95576.0], [72.6, 95789.0], [72.7, 95887.0], [72.8, 95971.0], [72.9, 96535.0], [73.0, 96902.0], [73.1, 97314.0], [73.2, 97750.0], [73.3, 98106.0], [73.4, 98287.0], [73.5, 98391.0], [73.6, 98482.0], [73.7, 98573.0], [73.8, 98651.0], [73.9, 98748.0], [74.0, 98821.0], [74.1, 98895.0], [74.2, 98986.0], [74.3, 99057.0], [74.4, 99115.0], [74.5, 99184.0], [74.6, 99318.0], [74.7, 99417.0], [74.8, 99453.0], [74.9, 99505.0], [75.0, 99573.0], [75.1, 99672.0], [75.2, 99771.0], [75.3, 99848.0], [75.4, 99953.0], [75.5, 100183.0], [75.6, 100399.0], [75.7, 102316.0], [75.8, 102971.0], [75.9, 104110.0], [76.0, 105351.0], [76.1, 105510.0], [76.2, 105634.0], [76.3, 105672.0], [76.4, 105705.0], [76.5, 105778.0], [76.6, 105874.0], [76.7, 105918.0], [76.8, 105966.0], [76.9, 105992.0], [77.0, 106028.0], [77.1, 106093.0], [77.2, 106161.0], [77.3, 106207.0], [77.4, 106248.0], [77.5, 106313.0], [77.6, 106367.0], [77.7, 106452.0], [77.8, 106551.0], [77.9, 106702.0], [78.0, 106865.0], [78.1, 107210.0], [78.2, 107767.0], [78.3, 107950.0], [78.4, 108285.0], [78.5, 108620.0], [78.6, 108846.0], [78.7, 108943.0], [78.8, 109042.0], [78.9, 109100.0], [79.0, 109172.0], [79.1, 109234.0], [79.2, 109309.0], [79.3, 109348.0], [79.4, 109387.0], [79.5, 109436.0], [79.6, 109475.0], [79.7, 109507.0], [79.8, 109540.0], [79.9, 109578.0], [80.0, 109610.0], [80.1, 109640.0], [80.2, 109687.0], [80.3, 109715.0], [80.4, 109757.0], [80.5, 109787.0], [80.6, 109814.0], [80.7, 109844.0], [80.8, 109878.0], [80.9, 109925.0], [81.0, 109960.0], [81.1, 109984.0], [81.2, 110029.0], [81.3, 110099.0], [81.4, 110142.0], [81.5, 110197.0], [81.6, 110232.0], [81.7, 110267.0], [81.8, 110300.0], [81.9, 110365.0], [82.0, 110462.0], [82.1, 110613.0], [82.2, 111146.0], [82.3, 111212.0], [82.4, 111281.0], [82.5, 112076.0], [82.6, 112175.0], [82.7, 112236.0], [82.8, 112801.0], [82.9, 112859.0], [83.0, 112996.0], [83.1, 113242.0], [83.2, 113427.0], [83.3, 113552.0], [83.4, 113742.0], [83.5, 113904.0], [83.6, 114016.0], [83.7, 114355.0], [83.8, 114492.0], [83.9, 114504.0], [84.0, 114518.0], [84.1, 114549.0], [84.2, 114568.0], [84.3, 114614.0], [84.4, 114758.0], [84.5, 115151.0], [84.6, 115437.0], [84.7, 115589.0], [84.8, 115704.0], [84.9, 115832.0], [85.0, 115870.0], [85.1, 115932.0], [85.2, 115997.0], [85.3, 116064.0], [85.4, 116101.0], [85.5, 116156.0], [85.6, 116216.0], [85.7, 116247.0], [85.8, 116294.0], [85.9, 116325.0], [86.0, 116361.0], [86.1, 116419.0], [86.2, 116453.0], [86.3, 116500.0], [86.4, 116545.0], [86.5, 116594.0], [86.6, 116639.0], [86.7, 116683.0], [86.8, 116746.0], [86.9, 116799.0], [87.0, 116857.0], [87.1, 116900.0], [87.2, 116946.0], [87.3, 116980.0], [87.4, 117023.0], [87.5, 117062.0], [87.6, 117109.0], [87.7, 117162.0], [87.8, 117214.0], [87.9, 117283.0], [88.0, 117367.0], [88.1, 117438.0], [88.2, 117473.0], [88.3, 117559.0], [88.4, 117620.0], [88.5, 117691.0], [88.6, 117784.0], [88.7, 117862.0], [88.8, 117936.0], [88.9, 118023.0], [89.0, 118130.0], [89.1, 118233.0], [89.2, 118312.0], [89.3, 118405.0], [89.4, 118487.0], [89.5, 118589.0], [89.6, 118665.0], [89.7, 118735.0], [89.8, 118786.0], [89.9, 118832.0], [90.0, 118918.0], [90.1, 118980.0], [90.2, 119027.0], [90.3, 119088.0], [90.4, 119167.0], [90.5, 119230.0], [90.6, 119306.0], [90.7, 119378.0], [90.8, 119449.0], [90.9, 119548.0], [91.0, 119650.0], [91.1, 119734.0], [91.2, 119780.0], [91.3, 119844.0], [91.4, 119899.0], [91.5, 119981.0], [91.6, 120013.0], [91.7, 120041.0], [91.8, 120062.0], [91.9, 120097.0], [92.0, 120134.0], [92.1, 120180.0], [92.2, 120244.0], [92.3, 120294.0], [92.4, 120338.0], [92.5, 120389.0], [92.6, 120423.0], [92.7, 120482.0], [92.8, 120519.0], [92.9, 120573.0], [93.0, 120600.0], [93.1, 120640.0], [93.2, 120670.0], [93.3, 120710.0], [93.4, 120756.0], [93.5, 120785.0], [93.6, 120819.0], [93.7, 120862.0], [93.8, 120915.0], [93.9, 120956.0], [94.0, 121002.0], [94.1, 121051.0], [94.2, 121097.0], [94.3, 121157.0], [94.4, 121218.0], [94.5, 121325.0], [94.6, 121471.0], [94.7, 121656.0], [94.8, 122146.0], [94.9, 122295.0], [95.0, 122398.0], [95.1, 122515.0], [95.2, 122612.0], [95.3, 122647.0], [95.4, 122691.0], [95.5, 122747.0], [95.6, 122794.0], [95.7, 122861.0], [95.8, 123004.0], [95.9, 123098.0], [96.0, 123205.0], [96.1, 123331.0], [96.2, 123483.0], [96.3, 123726.0], [96.4, 124648.0], [96.5, 126372.0], [96.6, 126520.0], [96.7, 128212.0], [96.8, 128282.0], [96.9, 128433.0], [97.0, 128610.0], [97.1, 129097.0], [97.2, 129145.0], [97.3, 129239.0], [97.4, 129340.0], [97.5, 129436.0], [97.6, 129511.0], [97.7, 129591.0], [97.8, 129681.0], [97.9, 129742.0], [98.0, 129919.0], [98.1, 130059.0], [98.2, 130161.0], [98.3, 130245.0], [98.4, 130433.0], [98.5, 130753.0], [98.6, 131990.0], [98.7, 133981.0], [98.8, 134215.0], [98.9, 134245.0], [99.0, 135235.0], [99.1, 135688.0], [99.2, 140805.0], [99.3, 140878.0], [99.4, 146417.0], [99.5, 147246.0], [99.6, 150335.0], [99.7, 157477.0], [99.8, 158126.0], [99.9, 171698.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1937.0, "series": [{"data": [[0.0, 127.0], [135200.0, 12.0], [66700.0, 13.0], [69900.0, 1.0], [73100.0, 15.0], [76300.0, 3.0], [79500.0, 19.0], [82700.0, 1.0], [92300.0, 11.0], [95500.0, 4.0], [98700.0, 23.0], [105100.0, 1.0], [108300.0, 8.0], [117900.0, 23.0], [114700.0, 6.0], [121100.0, 30.0], [130700.0, 2.0], [162600.0, 1.0], [100.0, 379.0], [32900.0, 7.0], [34500.0, 9.0], [36100.0, 19.0], [37700.0, 4.0], [40900.0, 9.0], [39300.0, 1.0], [42500.0, 1.0], [45700.0, 11.0], [47300.0, 1.0], [50500.0, 11.0], [200.0, 1937.0], [52100.0, 8.0], [53700.0, 2.0], [56900.0, 6.0], [55300.0, 22.0], [58500.0, 242.0], [60100.0, 2.0], [63300.0, 2.0], [61700.0, 6.0], [64900.0, 4.0], [72200.0, 14.0], [300.0, 854.0], [75400.0, 23.0], [78600.0, 3.0], [81800.0, 2.0], [91400.0, 14.0], [97800.0, 7.0], [94600.0, 16.0], [400.0, 291.0], [104200.0, 2.0], [107400.0, 3.0], [113800.0, 13.0], [110600.0, 6.0], [117000.0, 53.0], [120200.0, 39.0], [123400.0, 13.0], [500.0, 354.0], [129800.0, 15.0], [132400.0, 1.0], [600.0, 296.0], [700.0, 141.0], [800.0, 128.0], [900.0, 92.0], [1000.0, 58.0], [1100.0, 199.0], [1200.0, 546.0], [1300.0, 247.0], [1400.0, 46.0], [1500.0, 41.0], [1600.0, 55.0], [1700.0, 63.0], [1800.0, 57.0], [1900.0, 36.0], [2000.0, 46.0], [2100.0, 32.0], [2200.0, 91.0], [2300.0, 59.0], [2400.0, 25.0], [149300.0, 1.0], [2500.0, 36.0], [162100.0, 1.0], [2600.0, 20.0], [2700.0, 37.0], [2800.0, 28.0], [2900.0, 18.0], [3000.0, 13.0], [3100.0, 96.0], [3200.0, 490.0], [3300.0, 86.0], [3400.0, 20.0], [3500.0, 32.0], [3600.0, 8.0], [3700.0, 7.0], [3800.0, 7.0], [3900.0, 2.0], [4000.0, 10.0], [4200.0, 40.0], [68100.0, 8.0], [4400.0, 15.0], [4600.0, 9.0], [71300.0, 1.0], [4800.0, 8.0], [74500.0, 9.0], [77700.0, 40.0], [5000.0, 4.0], [80900.0, 7.0], [5200.0, 8.0], [84100.0, 4.0], [5600.0, 6.0], [5400.0, 2.0], [5800.0, 1.0], [93700.0, 16.0], [90500.0, 19.0], [6000.0, 14.0], [96900.0, 4.0], [6200.0, 31.0], [100100.0, 3.0], [6400.0, 9.0], [6600.0, 6.0], [6800.0, 20.0], [106500.0, 22.0], [109700.0, 59.0], [112900.0, 5.0], [116100.0, 38.0], [7200.0, 92.0], [119300.0, 31.0], [122500.0, 16.0], [973000.0, 1.0], [125700.0, 1.0], [8000.0, 3.0], [128900.0, 1.0], [134200.0, 33.0], [8400.0, 1.0], [9200.0, 2.0], [147000.0, 2.0], [9600.0, 9.0], [10400.0, 3.0], [11200.0, 7.0], [10800.0, 3.0], [11600.0, 4.0], [12400.0, 6.0], [12800.0, 1.0], [1182200.0, 1.0], [14000.0, 7.0], [14800.0, 2.0], [14400.0, 1.0], [15200.0, 12.0], [16000.0, 11.0], [17600.0, 7.0], [19200.0, 44.0], [20800.0, 5.0], [22400.0, 1.0], [21600.0, 2.0], [23200.0, 1.0], [24000.0, 1.0], [24800.0, 3.0], [25600.0, 5.0], [29600.0, 7.0], [31200.0, 6.0], [32000.0, 3.0], [33600.0, 1.0], [131900.0, 10.0], [35200.0, 37.0], [36800.0, 2.0], [38400.0, 3.0], [40000.0, 5.0], [157500.0, 1.0], [41600.0, 3.0], [46400.0, 2.0], [48000.0, 10.0], [49600.0, 3.0], [52800.0, 2.0], [51200.0, 2.0], [57600.0, 1.0], [59200.0, 26.0], [62400.0, 3.0], [64000.0, 13.0], [67200.0, 7.0], [73600.0, 20.0], [70400.0, 2.0], [76800.0, 20.0], [80000.0, 3.0], [83200.0, 12.0], [89600.0, 11.0], [86400.0, 1.0], [92800.0, 2.0], [96000.0, 2.0], [99200.0, 17.0], [105600.0, 47.0], [108800.0, 21.0], [112000.0, 4.0], [115200.0, 7.0], [118400.0, 24.0], [121600.0, 9.0], [140800.0, 34.0], [147200.0, 8.0], [132100.0, 2.0], [157700.0, 12.0], [972800.0, 2.0], [67100.0, 20.0], [73500.0, 20.0], [70300.0, 2.0], [76700.0, 17.0], [79900.0, 21.0], [83100.0, 42.0], [89500.0, 1.0], [92700.0, 7.0], [95900.0, 26.0], [102300.0, 3.0], [99100.0, 31.0], [105500.0, 14.0], [108700.0, 6.0], [111900.0, 6.0], [115100.0, 4.0], [118300.0, 22.0], [121500.0, 14.0], [127900.0, 1.0], [34700.0, 7.0], [133900.0, 6.0], [140300.0, 1.0], [36300.0, 4.0], [42700.0, 4.0], [41100.0, 6.0], [47500.0, 14.0], [50700.0, 12.0], [52300.0, 3.0], [53900.0, 5.0], [55500.0, 4.0], [57100.0, 5.0], [58700.0, 18.0], [60300.0, 1.0], [65100.0, 6.0], [63500.0, 19.0], [66200.0, 9.0], [72600.0, 27.0], [75800.0, 25.0], [79000.0, 7.0], [88600.0, 1.0], [91800.0, 2.0], [98200.0, 9.0], [95000.0, 3.0], [107800.0, 8.0], [114200.0, 4.0], [111000.0, 1.0], [117400.0, 43.0], [120600.0, 61.0], [130200.0, 13.0], [131600.0, 1.0], [150800.0, 2.0], [1149100.0, 1.0], [135700.0, 2.0], [142100.0, 1.0], [148500.0, 1.0], [161300.0, 1.0], [68500.0, 7.0], [71700.0, 14.0], [74900.0, 20.0], [78100.0, 6.0], [81300.0, 5.0], [84500.0, 2.0], [87700.0, 12.0], [94100.0, 20.0], [90900.0, 23.0], [97300.0, 6.0], [100500.0, 4.0], [106900.0, 5.0], [110100.0, 52.0], [113300.0, 12.0], [116500.0, 46.0], [119700.0, 42.0], [122900.0, 18.0], [129300.0, 26.0], [17700.0, 6.0], [19300.0, 20.0], [18500.0, 23.0], [20900.0, 5.0], [22500.0, 3.0], [21700.0, 39.0], [23300.0, 20.0], [24100.0, 5.0], [25700.0, 6.0], [27300.0, 3.0], [29700.0, 4.0], [31300.0, 5.0], [32100.0, 9.0], [33800.0, 2.0], [131100.0, 1.0], [35400.0, 14.0], [150300.0, 6.0], [37000.0, 5.0], [40200.0, 17.0], [41800.0, 6.0], [43400.0, 2.0], [45000.0, 11.0], [972900.0, 1.0], [46600.0, 7.0], [48200.0, 5.0], [49800.0, 29.0], [53000.0, 7.0], [51400.0, 8.0], [54600.0, 6.0], [56200.0, 3.0], [57800.0, 5.0], [59400.0, 14.0], [62600.0, 15.0], [64200.0, 34.0], [67600.0, 16.0], [70800.0, 3.0], [74000.0, 9.0], [77200.0, 28.0], [80400.0, 8.0], [83600.0, 19.0], [86800.0, 13.0], [90000.0, 15.0], [93200.0, 4.0], [96400.0, 1.0], [99600.0, 20.0], [106000.0, 38.0], [109200.0, 26.0], [115600.0, 19.0], [118800.0, 34.0], [122000.0, 1.0], [125200.0, 4.0], [128400.0, 14.0], [136800.0, 1.0], [973200.0, 1.0], [140900.0, 4.0], [147300.0, 3.0], [67500.0, 15.0], [70700.0, 12.0], [73900.0, 11.0], [77100.0, 20.0], [80300.0, 22.0], [83500.0, 41.0], [86700.0, 10.0], [89900.0, 11.0], [93100.0, 16.0], [99500.0, 29.0], [105900.0, 50.0], [109100.0, 34.0], [112300.0, 11.0], [115500.0, 12.0], [118700.0, 35.0], [121900.0, 4.0], [128300.0, 18.0], [132200.0, 2.0], [33300.0, 10.0], [34900.0, 4.0], [161900.0, 1.0], [39700.0, 18.0], [41300.0, 5.0], [46100.0, 1.0], [47700.0, 5.0], [50900.0, 9.0], [58900.0, 19.0], [60500.0, 1.0], [62100.0, 18.0], [63700.0, 19.0], [65300.0, 1.0], [66600.0, 7.0], [73000.0, 29.0], [76200.0, 16.0], [79400.0, 12.0], [82600.0, 2.0], [89000.0, 1.0], [92200.0, 14.0], [95400.0, 6.0], [98600.0, 23.0], [105000.0, 1.0], [108200.0, 14.0], [114600.0, 29.0], [111400.0, 2.0], [117800.0, 29.0], [121000.0, 47.0], [130600.0, 7.0], [134000.0, 6.0], [146800.0, 1.0], [131700.0, 3.0], [68900.0, 1.0], [72100.0, 31.0], [75300.0, 17.0], [78500.0, 1.0], [81700.0, 1.0], [91300.0, 36.0], [97700.0, 11.0], [94500.0, 6.0], [100900.0, 1.0], [104100.0, 5.0], [107300.0, 3.0], [110500.0, 8.0], [113700.0, 10.0], [116900.0, 50.0], [120100.0, 49.0], [123300.0, 21.0], [126500.0, 5.0], [129700.0, 14.0], [8500.0, 5.0], [135800.0, 3.0], [9300.0, 22.0], [9700.0, 6.0], [10100.0, 2.0], [10500.0, 5.0], [10900.0, 2.0], [973300.0, 1.0], [11300.0, 6.0], [11700.0, 4.0], [12100.0, 2.0], [12500.0, 3.0], [12900.0, 12.0], [13700.0, 4.0], [14100.0, 2.0], [14500.0, 1.0], [14900.0, 18.0], [15300.0, 11.0], [15700.0, 9.0], [16100.0, 2.0], [17800.0, 11.0], [19400.0, 2.0], [18600.0, 21.0], [21000.0, 30.0], [21800.0, 4.0], [22600.0, 5.0], [23400.0, 4.0], [24200.0, 5.0], [25800.0, 10.0], [26600.0, 1.0], [27400.0, 7.0], [29800.0, 3.0], [31400.0, 3.0], [32200.0, 5.0], [35600.0, 4.0], [146300.0, 3.0], [37200.0, 11.0], [38800.0, 6.0], [40400.0, 10.0], [42000.0, 4.0], [46800.0, 3.0], [45200.0, 11.0], [50000.0, 4.0], [51600.0, 22.0], [53200.0, 10.0], [54800.0, 9.0], [56400.0, 1.0], [58000.0, 11.0], [59600.0, 20.0], [62800.0, 5.0], [64400.0, 16.0], [68000.0, 20.0], [71200.0, 11.0], [77600.0, 31.0], [74400.0, 14.0], [80800.0, 7.0], [84000.0, 14.0], [93600.0, 15.0], [90400.0, 16.0], [96800.0, 4.0], [100000.0, 7.0], [106400.0, 21.0], [109600.0, 60.0], [112800.0, 39.0], [116000.0, 42.0], [119200.0, 27.0], [122400.0, 18.0], [142400.0, 1.0], [172100.0, 1.0], [67900.0, 23.0], [71100.0, 18.0], [74300.0, 17.0], [77500.0, 74.0], [80700.0, 12.0], [83900.0, 8.0], [93500.0, 20.0], [90300.0, 18.0], [96700.0, 7.0], [99900.0, 27.0], [106300.0, 35.0], [103100.0, 10.0], [109500.0, 62.0], [112700.0, 3.0], [115900.0, 37.0], [119100.0, 27.0], [122300.0, 20.0], [128700.0, 6.0], [131400.0, 1.0], [33500.0, 12.0], [135500.0, 6.0], [35100.0, 23.0], [36700.0, 1.0], [38300.0, 6.0], [39900.0, 3.0], [41500.0, 1.0], [43100.0, 1.0], [46300.0, 1.0], [47900.0, 16.0], [51100.0, 6.0], [59100.0, 20.0], [62300.0, 2.0], [1182300.0, 1.0], [65500.0, 3.0], [63900.0, 55.0], [67000.0, 25.0], [73400.0, 16.0], [76600.0, 12.0], [79800.0, 12.0], [83000.0, 11.0], [89400.0, 1.0], [86200.0, 3.0], [973100.0, 1.0], [92600.0, 5.0], [95800.0, 20.0], [99000.0, 33.0], [105400.0, 14.0], [108600.0, 8.0], [111800.0, 4.0], [115000.0, 5.0], [118200.0, 24.0], [121400.0, 15.0], [124600.0, 8.0], [127800.0, 5.0], [171600.0, 2.0], [137300.0, 1.0], [150100.0, 2.0], [66100.0, 11.0], [72500.0, 30.0], [75700.0, 23.0], [78900.0, 7.0], [91700.0, 3.0], [98100.0, 15.0], [94900.0, 10.0], [107700.0, 12.0], [110900.0, 7.0], [114100.0, 4.0], [117300.0, 24.0], [120500.0, 56.0], [123700.0, 4.0], [130100.0, 29.0], [17900.0, 19.0], [18700.0, 13.0], [21100.0, 8.0], [21900.0, 9.0], [23500.0, 4.0], [22700.0, 2.0], [24300.0, 1.0], [25900.0, 4.0], [27500.0, 3.0], [26700.0, 1.0], [28300.0, 4.0], [29100.0, 1.0], [29900.0, 16.0], [31500.0, 2.0], [32300.0, 1.0], [34200.0, 14.0], [35800.0, 2.0], [37400.0, 16.0], [39000.0, 29.0], [40600.0, 1.0], [158300.0, 2.0], [42200.0, 1.0], [43800.0, 8.0], [47000.0, 4.0], [48600.0, 221.0], [50200.0, 1.0], [51800.0, 14.0], [53400.0, 3.0], [55000.0, 4.0], [56600.0, 7.0], [58200.0, 34.0], [59800.0, 6.0], [63000.0, 7.0], [64600.0, 15.0], [68400.0, 16.0], [71600.0, 11.0], [74800.0, 21.0], [78000.0, 18.0], [81200.0, 1.0], [84400.0, 5.0], [87600.0, 2.0], [90800.0, 22.0], [94000.0, 6.0], [97200.0, 10.0], [100400.0, 10.0], [106800.0, 18.0], [110000.0, 37.0], [113200.0, 12.0], [116400.0, 47.0], [119600.0, 18.0], [122800.0, 21.0], [129200.0, 19.0], [132000.0, 7.0], [157600.0, 2.0], [136100.0, 1.0], [68300.0, 15.0], [71500.0, 19.0], [74700.0, 24.0], [77900.0, 44.0], [81100.0, 3.0], [90700.0, 29.0], [93900.0, 9.0], [97100.0, 5.0], [100300.0, 17.0], [103500.0, 1.0], [106700.0, 10.0], [109900.0, 63.0], [113100.0, 10.0], [116300.0, 50.0], [119500.0, 22.0], [122700.0, 44.0], [129100.0, 34.0], [133800.0, 1.0], [140200.0, 2.0], [131500.0, 3.0], [33700.0, 2.0], [35300.0, 10.0], [38500.0, 1.0], [40100.0, 10.0], [46500.0, 19.0], [48100.0, 1.0], [49700.0, 20.0], [51300.0, 4.0], [52900.0, 1.0], [59300.0, 49.0], [60900.0, 1.0], [62500.0, 36.0], [64100.0, 14.0], [67400.0, 8.0], [70600.0, 26.0], [73800.0, 18.0], [77000.0, 45.0], [80200.0, 12.0], [83400.0, 24.0], [86600.0, 36.0], [89800.0, 18.0], [93000.0, 8.0], [99400.0, 47.0], [105800.0, 39.0], [102600.0, 9.0], [109000.0, 31.0], [112200.0, 14.0], [115400.0, 17.0], [118600.0, 29.0], [121800.0, 3.0], [128200.0, 33.0], [135600.0, 4.0], [139700.0, 1.0], [171700.0, 5.0], [4300.0, 28.0], [66500.0, 4.0], [4100.0, 19.0], [72900.0, 18.0], [4500.0, 19.0], [4700.0, 3.0], [76100.0, 23.0], [5100.0, 9.0], [4900.0, 8.0], [79300.0, 17.0], [5300.0, 6.0], [82500.0, 5.0], [5500.0, 4.0], [88900.0, 12.0], [5700.0, 8.0], [92100.0, 2.0], [6100.0, 4.0], [5900.0, 3.0], [95300.0, 4.0], [98500.0, 21.0], [6300.0, 12.0], [104900.0, 1.0], [6500.0, 1.0], [6700.0, 13.0], [108100.0, 8.0], [114500.0, 84.0], [7100.0, 17.0], [117700.0, 20.0], [7300.0, 1.0], [120900.0, 44.0], [8100.0, 18.0], [130500.0, 8.0], [8600.0, 2.0], [8200.0, 1.0], [9000.0, 1.0], [9400.0, 14.0], [150200.0, 2.0], [10200.0, 5.0], [10600.0, 14.0], [11000.0, 11.0], [11400.0, 6.0], [11800.0, 1.0], [12600.0, 9.0], [13000.0, 37.0], [13800.0, 7.0], [13400.0, 1.0], [15000.0, 5.0], [15800.0, 20.0], [15400.0, 2.0], [16200.0, 2.0], [18000.0, 17.0], [18800.0, 15.0], [19600.0, 3.0], [20400.0, 3.0], [21200.0, 26.0], [22000.0, 5.0], [22800.0, 1.0], [23600.0, 3.0], [26000.0, 9.0], [27600.0, 36.0], [28400.0, 5.0], [30000.0, 25.0], [32400.0, 2.0], [32800.0, 3.0], [135100.0, 6.0], [34400.0, 26.0], [36000.0, 14.0], [37600.0, 4.0], [40800.0, 2.0], [39200.0, 7.0], [45600.0, 3.0], [48800.0, 1.0], [47200.0, 24.0], [50400.0, 14.0], [52000.0, 4.0], [55200.0, 19.0], [58400.0, 71.0], [60000.0, 7.0], [61600.0, 22.0], [68800.0, 4.0], [65600.0, 1.0], [72000.0, 31.0], [75200.0, 16.0], [81600.0, 1.0], [78400.0, 6.0], [91200.0, 19.0], [94400.0, 14.0], [100800.0, 3.0], [107200.0, 6.0], [110400.0, 24.0], [113600.0, 11.0], [116800.0, 42.0], [120000.0, 73.0], [123200.0, 15.0], [126400.0, 11.0], [129600.0, 31.0], [150400.0, 11.0], [135300.0, 4.0], [148100.0, 1.0], [68700.0, 6.0], [71900.0, 18.0], [75100.0, 14.0], [81500.0, 13.0], [78300.0, 3.0], [87900.0, 1.0], [91100.0, 18.0], [97500.0, 7.0], [94300.0, 5.0], [107100.0, 5.0], [110300.0, 32.0], [113500.0, 15.0], [116700.0, 33.0], [119900.0, 33.0], [123100.0, 19.0], [126300.0, 16.0], [129500.0, 25.0], [33900.0, 3.0], [35500.0, 18.0], [37100.0, 11.0], [38700.0, 11.0], [162700.0, 1.0], [40300.0, 11.0], [41900.0, 7.0], [46700.0, 2.0], [45100.0, 24.0], [48300.0, 19.0], [49900.0, 7.0], [53100.0, 19.0], [51500.0, 14.0], [54700.0, 8.0], [56300.0, 10.0], [57900.0, 8.0], [59500.0, 10.0], [62700.0, 12.0], [64300.0, 23.0], [67800.0, 10.0], [71000.0, 10.0], [77400.0, 52.0], [74200.0, 16.0], [80600.0, 9.0], [83800.0, 28.0], [87000.0, 1.0], [93400.0, 9.0], [90200.0, 18.0], [96600.0, 1.0], [99800.0, 19.0], [106200.0, 45.0], [103000.0, 6.0], [109400.0, 59.0], [112600.0, 2.0], [115800.0, 34.0], [122200.0, 15.0], [119000.0, 44.0], [749100.0, 1.0], [128600.0, 7.0], [747100.0, 1.0], [158100.0, 11.0], [66900.0, 12.0], [73300.0, 40.0], [70100.0, 11.0], [76500.0, 4.0], [79700.0, 15.0], [82900.0, 3.0], [89300.0, 2.0], [92500.0, 13.0], [95700.0, 18.0], [98900.0, 23.0], [105300.0, 13.0], [108500.0, 4.0], [111700.0, 1.0], [114900.0, 3.0], [118100.0, 23.0], [121300.0, 14.0], [124500.0, 8.0], [130900.0, 1.0], [127700.0, 2.0], [16500.0, 1.0], [18100.0, 6.0], [18900.0, 12.0], [19700.0, 1.0], [21300.0, 3.0], [20500.0, 8.0], [22100.0, 2.0], [22900.0, 5.0], [23700.0, 2.0], [24500.0, 1.0], [25300.0, 1.0], [26100.0, 22.0], [26900.0, 1.0], [27700.0, 20.0], [28500.0, 3.0], [30100.0, 4.0], [31700.0, 3.0], [32500.0, 4.0], [34600.0, 10.0], [147100.0, 12.0], [140700.0, 7.0], [36200.0, 7.0], [37800.0, 4.0], [39400.0, 1.0], [42600.0, 9.0], [41000.0, 13.0], [45800.0, 8.0], [47400.0, 6.0], [50600.0, 3.0], [52200.0, 12.0], [53800.0, 3.0], [55400.0, 26.0], [57000.0, 10.0], [58600.0, 129.0], [60200.0, 1.0], [63400.0, 10.0], [65000.0, 6.0], [66000.0, 25.0], [72400.0, 36.0], [75600.0, 23.0], [78800.0, 4.0], [91600.0, 25.0], [98000.0, 5.0], [94800.0, 16.0], [107600.0, 3.0], [110800.0, 2.0], [114000.0, 12.0], [117200.0, 31.0], [120400.0, 43.0], [123600.0, 7.0], [130000.0, 15.0], [146400.0, 5.0], [131300.0, 1.0], [1148700.0, 1.0], [65900.0, 4.0], [72300.0, 15.0], [75500.0, 40.0], [81900.0, 1.0], [78700.0, 2.0], [91500.0, 34.0], [97900.0, 6.0], [94700.0, 17.0], [107500.0, 6.0], [113900.0, 21.0], [110700.0, 7.0], [117100.0, 44.0], [120300.0, 48.0], [123500.0, 9.0], [129900.0, 15.0], [135400.0, 4.0], [148200.0, 1.0], [34100.0, 16.0], [37300.0, 20.0], [38900.0, 3.0], [40500.0, 28.0], [42100.0, 5.0], [43700.0, 13.0], [46900.0, 3.0], [48500.0, 29.0], [50100.0, 8.0], [51700.0, 9.0], [53300.0, 15.0], [54900.0, 6.0], [56500.0, 1.0], [58100.0, 17.0], [59700.0, 37.0], [62900.0, 7.0], [64500.0, 7.0], [68200.0, 16.0], [71400.0, 13.0], [74600.0, 19.0], [77800.0, 47.0], [81000.0, 2.0], [84200.0, 7.0], [93800.0, 15.0], [90600.0, 21.0], [97000.0, 1.0], [100200.0, 3.0], [103400.0, 3.0], [106600.0, 15.0], [109800.0, 65.0], [113000.0, 4.0], [116200.0, 58.0], [119400.0, 26.0], [122600.0, 54.0], [129000.0, 10.0], [137200.0, 1.0], [150000.0, 2.0], [147700.0, 1.0], [67300.0, 9.0], [73700.0, 22.0], [70500.0, 8.0], [76900.0, 9.0], [80100.0, 4.0], [83300.0, 8.0], [86500.0, 15.0], [89700.0, 11.0], [92900.0, 5.0], [99300.0, 18.0], [105700.0, 28.0], [102500.0, 8.0], [108900.0, 21.0], [112100.0, 33.0], [115300.0, 7.0], [118500.0, 24.0], [121700.0, 3.0], [128100.0, 2.0], [132600.0, 1.0], [8700.0, 1.0], [9100.0, 1.0], [9500.0, 14.0], [158200.0, 6.0], [10700.0, 11.0], [10300.0, 3.0], [11100.0, 11.0], [11500.0, 14.0], [12300.0, 12.0], [13100.0, 1.0], [13900.0, 8.0], [14300.0, 1.0], [14700.0, 11.0], [15100.0, 8.0], [15500.0, 6.0], [15900.0, 4.0], [16300.0, 1.0], [16600.0, 5.0], [17400.0, 4.0], [18200.0, 1.0], [19000.0, 7.0], [21400.0, 1.0], [20600.0, 16.0], [22200.0, 4.0], [23000.0, 2.0], [23800.0, 8.0], [24600.0, 3.0], [26200.0, 12.0], [27000.0, 1.0], [29400.0, 17.0], [30200.0, 2.0], [31000.0, 5.0], [32600.0, 5.0], [31800.0, 1.0], [34800.0, 8.0], [33200.0, 14.0], [36400.0, 7.0], [39600.0, 1.0], [42800.0, 10.0], [41200.0, 13.0], [46000.0, 1.0], [47600.0, 18.0], [50800.0, 6.0], [54000.0, 3.0], [58800.0, 14.0], [62000.0, 7.0], [63600.0, 24.0], [66400.0, 1.0], [72800.0, 31.0], [76000.0, 20.0], [79200.0, 21.0], [88800.0, 2.0], [92000.0, 2.0], [95200.0, 8.0], [98400.0, 28.0], [108000.0, 2.0], [114400.0, 28.0], [111200.0, 38.0], [117600.0, 37.0], [120800.0, 51.0], [124000.0, 1.0], [130400.0, 14.0], [66300.0, 16.0], [72700.0, 44.0], [75900.0, 6.0], [79100.0, 6.0], [91900.0, 19.0], [98300.0, 22.0], [95100.0, 3.0], [107900.0, 6.0], [114300.0, 10.0], [111100.0, 10.0], [117500.0, 24.0], [120700.0, 57.0], [123900.0, 1.0], [130300.0, 9.0], [972600.0, 1.0], [132300.0, 1.0], [34300.0, 1.0], [35900.0, 2.0], [37500.0, 11.0], [39100.0, 37.0], [47100.0, 8.0], [48700.0, 95.0], [50300.0, 2.0], [51900.0, 6.0], [53500.0, 6.0], [55100.0, 13.0], [58300.0, 32.0], [59900.0, 6.0], [63100.0, 3.0], [64700.0, 7.0], [68600.0, 8.0], [71800.0, 21.0], [75000.0, 17.0], [81400.0, 26.0], [78200.0, 24.0], [84600.0, 1.0], [87800.0, 4.0], [94200.0, 34.0], [91000.0, 15.0], [97400.0, 2.0], [100600.0, 3.0], [107000.0, 4.0], [110200.0, 53.0], [113400.0, 16.0], [116600.0, 51.0], [119800.0, 38.0], [123000.0, 22.0], [126200.0, 5.0], [129400.0, 24.0], [749400.0, 1.0], [134100.0, 10.0], [67700.0, 19.0], [70900.0, 30.0], [74100.0, 16.0], [77300.0, 60.0], [80500.0, 23.0], [83700.0, 25.0], [86900.0, 5.0], [90100.0, 19.0], [96500.0, 20.0], [99700.0, 27.0], [106100.0, 32.0], [102900.0, 3.0], [109300.0, 51.0], [115700.0, 15.0], [118900.0, 32.0], [122100.0, 13.0], [125300.0, 1.0], [128500.0, 9.0], [157400.0, 7.0], [16700.0, 2.0], [17500.0, 2.0], [19100.0, 3.0], [20700.0, 22.0], [21500.0, 1.0], [22300.0, 3.0], [23900.0, 1.0], [25500.0, 3.0], [26300.0, 4.0], [29500.0, 13.0], [31100.0, 3.0], [32700.0, 2.0], [31900.0, 2.0], [33400.0, 2.0], [35000.0, 12.0], [36600.0, 1.0], [39800.0, 18.0], [43000.0, 6.0], [41400.0, 1.0], [46200.0, 3.0], [47800.0, 5.0], [51000.0, 9.0], [52600.0, 1.0], [59000.0, 18.0], [62200.0, 15.0], [63800.0, 21.0], [65400.0, 2.0], [66800.0, 11.0], [73200.0, 21.0], [70000.0, 12.0], [76400.0, 8.0], [79600.0, 16.0], [82800.0, 3.0], [92400.0, 12.0], [95600.0, 7.0], [98800.0, 32.0], [105200.0, 6.0], [108400.0, 2.0], [111600.0, 1.0], [114800.0, 10.0], [118000.0, 24.0], [121200.0, 29.0], [124400.0, 1.0], [127600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1182300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 396.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15582.0, "series": [{"data": [[0.0, 3437.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2032.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15582.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 396.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.733333333333334, "minX": 1.6869069E12, "maxY": 1200.0, "series": [{"data": [[1.6869072E12, 1199.8882224645592], [1.68690702E12, 1200.0], [1.68690786E12, 860.4999999999999], [1.68690756E12, 1185.4343807763403], [1.68690726E12, 1199.0], [1.68690696E12, 1200.0], [1.68690792E12, 614.5285171102661], [1.68690762E12, 1167.4500000000007], [1.68690732E12, 1199.0], [1.6869069E12, 1200.0], [1.68690798E12, 126.98861047835979], [1.68690768E12, 1136.521299254526], [1.68690738E12, 1198.3993311036793], [1.68690774E12, 1086.2460732984298], [1.68690744E12, 1197.0], [1.68690714E12, 1200.0], [1.6869081E12, 8.733333333333334], [1.68690708E12, 1200.0], [1.6869078E12, 984.6914772727287], [1.6869075E12, 1195.360890302067]], "isOverall": false, "label": "RestApi", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869081E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 159.0, "minX": 1.0, "maxY": 1182353.0, "series": [{"data": [[3.0, 1149121.0], [4.0, 972920.0], [5.0, 973020.0], [6.0, 972945.0], [8.0, 1060796.0], [9.0, 973322.0], [10.0, 972862.0], [11.0, 1182353.0], [15.0, 912960.0], [16.0, 1215.0], [17.0, 1173.0], [18.0, 211.0], [19.0, 184.0], [21.0, 171.5], [22.0, 214.0], [23.0, 234.0], [24.0, 171.0], [26.0, 227.0], [27.0, 224.0], [28.0, 9716.5], [30.0, 214.0], [31.0, 253.0], [32.0, 206.0], [35.0, 222.0], [34.0, 234.0], [37.0, 220.0], [39.0, 9684.0], [38.0, 12810.0], [40.0, 255.0], [43.0, 213.0], [42.0, 224.5], [45.0, 235.0], [44.0, 242.0], [47.0, 6506.666666666666], [51.0, 4038.0], [53.0, 231.0], [52.0, 16316.0], [55.0, 217.0], [54.0, 214.0], [56.0, 223.0], [58.0, 15527.545454545456], [61.0, 254.0], [60.0, 9549.0], [63.0, 9537.0], [62.0, 9553.0], [65.0, 226.0], [69.0, 9518.5], [68.0, 4895.75], [79.0, 9524.0], [78.0, 2109.4], [82.0, 193.0], [81.0, 6425.333333333333], [86.0, 255.5], [84.0, 254.0], [95.0, 18264.5], [94.0, 9488.5], [93.0, 252.0], [92.0, 220.0], [99.0, 207.0], [98.0, 205.0], [97.0, 1200.0], [96.0, 4368.5], [103.0, 11139.0], [102.0, 11162.0], [101.0, 11180.0], [100.0, 216.0], [107.0, 263.0], [106.0, 11124.5], [105.0, 183.0], [104.0, 201.0], [109.0, 170.0], [108.0, 250.0], [114.0, 250.0], [118.0, 11139.5], [117.0, 230.0], [116.0, 226.5], [123.0, 275.8], [135.0, 211.75], [131.0, 210.0], [130.0, 277.33333333333337], [128.0, 285.0], [141.0, 223.0], [140.0, 11094.0], [139.0, 200.0], [138.0, 274.5], [136.0, 266.0], [151.0, 187.0], [150.0, 206.0], [149.0, 206.0], [148.0, 224.0], [147.0, 21268.44444444445], [146.0, 11046.5], [145.0, 207.0], [144.0, 211.66666666666666], [157.0, 182.25], [154.0, 173.0], [152.0, 183.0], [167.0, 226.33333333333334], [166.0, 228.0], [163.0, 233.0], [162.0, 236.0], [161.0, 199.25], [175.0, 229.0], [174.0, 173.0], [173.0, 192.0], [172.0, 192.0], [171.0, 184.0], [170.0, 214.0], [169.0, 221.0], [183.0, 206.0], [182.0, 175.0], [181.0, 207.0], [180.0, 205.0], [179.0, 22584.0], [178.0, 212.0], [177.0, 46024.40178571427], [176.0, 223.0], [191.0, 203.0], [190.0, 207.0], [189.0, 207.0], [188.0, 207.0], [187.0, 202.0], [184.0, 204.0], [199.0, 32077.190476190473], [198.0, 178.66666666666666], [195.0, 180.0], [194.0, 201.0], [192.0, 203.0], [207.0, 211.0], [206.0, 214.0], [205.0, 17562.0], [204.0, 166.0], [203.0, 194.0], [202.0, 204.0], [201.0, 159.0], [200.0, 205.0], [214.0, 229.0], [213.0, 26133.5], [212.0, 17511.0], [211.0, 17531.0], [210.0, 166.0], [209.0, 183.0], [208.0, 185.0], [223.0, 241.0], [222.0, 248.0], [220.0, 253.66666666666666], [219.0, 246.0], [216.0, 247.5], [231.0, 245.0], [230.0, 244.0], [229.0, 23199.333333333336], [228.0, 26113.25], [227.0, 244.0], [226.0, 251.0], [225.0, 248.5], [238.0, 244.66666666666666], [235.0, 183.0], [234.0, 185.0], [233.0, 251.0], [246.0, 11688.0], [244.0, 17426.5], [242.0, 186.0], [240.0, 233.5], [255.0, 1207.0], [254.0, 1217.0], [253.0, 1191.0], [252.0, 1210.0], [250.0, 1210.0], [249.0, 31843.025641025644], [270.0, 197.0], [271.0, 552.0], [269.0, 221.0], [268.0, 237.0], [267.0, 1150.0], [266.0, 1184.0], [265.0, 1203.0], [264.0, 1204.0], [263.0, 1207.0], [257.0, 1166.0], [256.0, 1161.0], [259.0, 1224.0], [258.0, 1225.0], [262.0, 1207.0], [261.0, 1223.0], [275.0, 192.0], [286.0, 252.0], [284.0, 242.66666666666666], [281.0, 311.5], [279.0, 194.0], [278.0, 285.0], [277.0, 188.0], [276.0, 214.0], [274.0, 213.0], [273.0, 525.0], [272.0, 526.0], [303.0, 438.0], [301.0, 266.16666666666663], [295.0, 234.0], [294.0, 409.5], [292.0, 26847.666666666664], [291.0, 20310.5], [290.0, 272.0], [288.0, 257.0], [318.0, 287.0], [319.0, 240.0], [317.0, 288.0], [316.0, 281.5], [314.0, 231.0], [313.0, 263.0], [312.0, 264.0], [311.0, 264.0], [305.0, 419.5], [307.0, 269.0], [306.0, 299.0], [310.0, 259.0], [309.0, 258.0], [308.0, 281.0], [333.0, 30087.0], [334.0, 242.0], [332.0, 26999.0], [322.0, 323.0], [321.0, 228.0], [320.0, 260.0], [331.0, 302.0], [330.0, 255.0], [329.0, 246.0], [328.0, 272.0], [327.0, 280.0], [326.0, 261.0], [325.0, 247.0], [349.0, 359.0], [348.0, 20292.5], [339.0, 26616.333333333336], [338.0, 35517.555555555555], [337.0, 317.0], [336.0, 13631.666666666668], [347.0, 358.0], [346.0, 352.0], [345.0, 33388.0], [344.0, 29616.5], [343.0, 376.0], [342.0, 35712.0], [341.0, 34879.75], [340.0, 327.0], [365.0, 373.0], [367.0, 361.0], [364.0, 377.0], [363.0, 360.0], [362.0, 33816.857142857145], [361.0, 350.5], [357.0, 20235.5], [356.0, 33834.57142857143], [355.0, 362.0], [354.0, 315.0], [352.0, 355.0], [381.0, 19713.5], [383.0, 19942.75], [380.0, 385.0], [379.0, 386.0], [378.0, 26519.333333333336], [377.0, 391.0], [376.0, 9920.0], [373.0, 10261.25], [369.0, 19732.0], [368.0, 368.0], [370.0, 29918.25], [387.0, 194.0], [399.0, 221.0], [397.0, 195.0], [395.0, 10538.5], [393.0, 227.0], [392.0, 209.0], [391.0, 203.0], [389.0, 29154.0], [388.0, 171.0], [386.0, 37871.733333333315], [385.0, 13225.0], [412.0, 231.0], [411.0, 187.0], [407.0, 190.0], [406.0, 203.0], [405.0, 222.0], [404.0, 5363.5], [402.0, 221.0], [400.0, 219.5], [431.0, 211.0], [430.0, 199.66666666666666], [419.0, 10461.0], [418.0, 10473.0], [417.0, 211.0], [416.0, 218.5], [427.0, 19655.378048780487], [426.0, 13824.0], [425.0, 188.0], [424.0, 280.0], [423.0, 172.0], [422.0, 176.0], [421.0, 180.0], [420.0, 10469.0], [446.0, 229.0], [447.0, 225.0], [445.0, 170.0], [444.0, 193.0], [443.0, 58104.5], [442.0, 28461.714285714286], [440.0, 178.0], [439.0, 249.0], [433.0, 201.0], [432.0, 173.0], [435.0, 197.0], [434.0, 197.0], [438.0, 191.0], [437.0, 198.0], [436.0, 219.0], [460.0, 240.0], [459.0, 245.0], [458.0, 262.0], [457.0, 251.5], [455.0, 277.0], [449.0, 223.0], [448.0, 213.0], [453.0, 208.0], [452.0, 58038.0], [451.0, 243.0], [450.0, 187.0], [479.0, 219.0], [477.0, 241.0], [476.0, 253.0], [475.0, 255.0], [474.0, 238.2], [469.0, 244.5], [465.0, 233.0], [464.0, 252.75], [494.0, 53236.0], [495.0, 4960.0], [493.0, 202.0], [492.0, 43358.5], [491.0, 82503.28571428571], [489.0, 273.0], [488.0, 214.5], [486.0, 57936.16666666667], [483.0, 43520.0], [482.0, 229.0], [481.0, 221.0], [480.0, 234.0], [484.0, 251.0], [510.0, 3202.5], [511.0, 1665.5], [509.0, 3208.0], [508.0, 3147.166666666667], [507.0, 3200.0], [506.0, 3217.0], [505.0, 3179.0], [504.0, 29539.333333333332], [503.0, 3234.0], [497.0, 7228.0], [496.0, 4928.0], [499.0, 1145.0], [498.0, 7206.0], [502.0, 39470.66666666667], [500.0, 4015.3333333333335], [537.0, 3193.0], [542.0, 2678.4], [543.0, 1596.6666666666667], [529.0, 3350.6666666666665], [528.0, 2241.0], [531.0, 3190.0], [530.0, 3214.0], [533.0, 3241.3333333333335], [532.0, 3242.0], [540.0, 3268.0], [539.0, 2284.0], [538.0, 3659.0], [536.0, 3245.0], [519.0, 3180.4], [518.0, 3032.0], [517.0, 203.0], [516.0, 41735.0], [515.0, 57204.0], [514.0, 3207.0], [513.0, 3207.0], [512.0, 2211.3333333333335], [527.0, 3207.0], [526.0, 2539.0], [523.0, 59786.5], [522.0, 3242.6], [520.0, 2973.8], [535.0, 3199.0], [534.0, 3239.0], [569.0, 2542.75], [574.0, 1516.0], [575.0, 59709.5], [561.0, 1259.0], [560.0, 2884.0], [563.0, 3238.0], [562.0, 2921.0], [573.0, 1363.0], [571.0, 3240.0], [570.0, 2282.0], [559.0, 2640.6], [544.0, 3250.0], [546.0, 3227.0], [545.0, 3153.5], [548.0, 2369.0], [547.0, 3220.0], [550.0, 3273.0], [549.0, 2724.0], [557.0, 3084.0], [556.0, 3242.0], [555.0, 2241.3333333333335], [553.0, 3260.6666666666665], [567.0, 3276.0], [566.0, 1407.5], [565.0, 3275.0], [564.0, 2613.0], [601.0, 3081.0], [606.0, 1915.3333333333333], [607.0, 3301.0], [592.0, 1285.5], [595.0, 2661.5], [593.0, 1680.0], [597.0, 1231.0], [596.0, 1811.0], [604.0, 1691.0], [603.0, 991.0], [602.0, 1223.0], [600.0, 2281.5], [583.0, 1238.3333333333333], [582.0, 2876.0], [581.0, 61050.5], [580.0, 1353.0], [579.0, 2296.0], [578.0, 60547.0], [577.0, 1650.3333333333335], [576.0, 2432.6666666666665], [591.0, 2089.0], [590.0, 803.8000000000001], [586.0, 25838.800000000003], [599.0, 1691.0], [598.0, 2235.0], [636.0, 1976.5], [639.0, 259.0], [624.0, 40440.33333333333], [626.0, 1820.5], [625.0, 1300.0], [629.0, 2072.5], [627.0, 2848.0], [638.0, 1402.5], [637.0, 1596.0], [635.0, 1980.0], [634.0, 1995.5], [633.0, 60475.5], [632.0, 1733.0], [623.0, 95004.0], [609.0, 1502.0], [608.0, 60169.25], [611.0, 1750.0], [610.0, 1283.5], [613.0, 562.0], [612.0, 1276.0], [615.0, 1263.0], [614.0, 1268.0], [622.0, 2720.0], [621.0, 1274.0], [620.0, 60117.0], [619.0, 2361.0], [618.0, 1739.0], [617.0, 1721.0], [616.0, 79978.0], [631.0, 1261.0], [630.0, 3032.0], [668.0, 302.0], [671.0, 40622.66666666667], [657.0, 1390.3333333333333], [656.0, 1303.0], [659.0, 40480.33333333333], [658.0, 1551.0], [661.0, 606.0], [660.0, 808.4], [670.0, 1255.0], [669.0, 40760.0], [667.0, 2318.0], [666.0, 59906.99999999999], [665.0, 1553.0], [664.0, 1301.0], [655.0, 1435.5], [640.0, 1272.0], [642.0, 1335.0], [641.0, 1797.5], [645.0, 1073.5], [644.0, 1286.0], [647.0, 2378.0], [646.0, 1438.0], [654.0, 733.5], [653.0, 1796.0], [652.0, 606.0], [651.0, 1294.0], [650.0, 1287.0], [649.0, 1978.5], [648.0, 2577.0], [663.0, 1298.5], [662.0, 615.0], [698.0, 1864.0], [691.0, 989.0], [702.0, 39752.33333333333], [703.0, 1282.0], [689.0, 1214.0], [688.0, 60139.5], [701.0, 1239.8571428571427], [697.0, 1347.6666666666667], [679.0, 1811.5], [677.0, 2075.0], [676.0, 2045.0], [675.0, 48508.0], [673.0, 1882.6666666666667], [672.0, 1182.4], [687.0, 1257.0], [686.0, 292.0], [685.0, 24691.2], [684.0, 31128.5], [682.0, 2048.0], [681.0, 2048.5], [680.0, 2010.5], [695.0, 79570.0], [694.0, 470.0], [692.0, 1991.0], [728.0, 94507.0], [733.0, 605.5], [734.0, 59511.5], [721.0, 931.0], [720.0, 59486.5], [723.0, 79007.66666666666], [722.0, 2109.0], [731.0, 1015.0], [730.0, 1714.0], [729.0, 920.0], [719.0, 59399.75], [704.0, 1361.0], [706.0, 54326.0], [705.0, 565.0], [708.0, 1106.3333333333333], [707.0, 30602.0], [711.0, 1267.0], [710.0, 47835.8], [718.0, 24380.4], [717.0, 321.5], [716.0, 674.6666666666666], [714.0, 2069.0], [713.0, 2067.0], [712.0, 876.0], [727.0, 1815.0], [726.0, 670.5], [725.0, 303.0], [724.0, 798.0], [761.0, 71269.6], [766.0, 701.5], [767.0, 439.0], [752.0, 71094.2], [754.0, 96571.45454545453], [753.0, 1334.5], [757.0, 959.0], [756.0, 71227.4], [764.0, 59616.5], [763.0, 78721.66666666666], [762.0, 382.0], [760.0, 1617.0], [743.0, 889.0], [742.0, 1073.0], [741.0, 974.0], [740.0, 59919.5], [739.0, 94589.6], [738.0, 954.5], [737.0, 1431.3333333333333], [736.0, 624.0], [751.0, 47926.700000000004], [750.0, 79209.44444444444], [749.0, 946.0], [748.0, 84492.0], [747.0, 59425.5], [746.0, 267.0], [745.0, 2455.0], [744.0, 830.0], [759.0, 100769.0], [758.0, 383.0], [792.0, 620.0], [797.0, 75122.09090909091], [799.0, 39542.33333333333], [784.0, 39686.66666666667], [787.0, 24412.6], [786.0, 1283.5], [796.0, 581.0], [795.0, 88546.5], [794.0, 59306.75], [782.0, 39919.666666666664], [768.0, 59205.5], [770.0, 424.0], [769.0, 78709.33333333334], [772.0, 78675.0], [771.0, 479.0], [774.0, 1458.5], [773.0, 78602.66666666666], [780.0, 49491.57142857143], [779.0, 78701.16666666667], [778.0, 73748.625], [777.0, 59262.5], [776.0, 59088.24999999999], [791.0, 78506.66666666666], [790.0, 34433.142857142855], [789.0, 568.0], [788.0, 53902.5], [824.0, 88233.5], [828.0, 106203.38461538462], [831.0, 97650.35483870968], [818.0, 1359.0], [816.0, 58792.5], [821.0, 88253.5], [820.0, 67405.0], [830.0, 97999.15384615386], [829.0, 58772.5], [827.0, 111241.03448275864], [826.0, 96393.16666666667], [825.0, 69866.6], [815.0, 99512.15], [802.0, 660.0], [801.0, 90170.15384615384], [804.0, 101229.625], [803.0, 90388.66666666667], [806.0, 1324.0], [805.0, 93899.4], [814.0, 78367.33333333333], [813.0, 100374.28571428571], [812.0, 1249.0], [811.0, 84081.42857142858], [810.0, 1176.0], [809.0, 39879.33333333334], [823.0, 106580.09090909091], [822.0, 100390.85714285713], [856.0, 376.8], [860.0, 348.0], [863.0, 334.0], [849.0, 373.0], [848.0, 369.0], [862.0, 337.0], [861.0, 380.0], [859.0, 355.0], [858.0, 361.0], [857.0, 391.0], [847.0, 114539.74918566771], [833.0, 763.0], [835.0, 104398.19230769228], [834.0, 722.0], [837.0, 98877.41176470589], [836.0, 103438.16666666667], [839.0, 58770.5], [838.0, 75793.33333333334], [846.0, 109809.27777777777], [845.0, 58594.00000000001], [844.0, 105294.57142857142], [843.0, 112378.0294117647], [842.0, 774.0], [841.0, 88542.11111111112], [851.0, 419.0], [850.0, 370.0], [890.0, 10923.142857142859], [883.0, 215.0], [891.0, 264.0], [880.0, 12743.0], [888.0, 18474.5], [871.0, 210.0], [870.0, 206.5], [869.0, 219.0], [868.0, 213.0], [867.0, 194.0], [866.0, 186.66666666666666], [865.0, 4253.437500000001], [864.0, 37125.24999999999], [879.0, 210.0], [878.0, 18967.5], [877.0, 21663.85714285714], [876.0, 224.0], [873.0, 19023.5], [872.0, 218.0], [887.0, 211.33333333333334], [885.0, 198.66666666666666], [884.0, 7518.2], [882.0, 221.0], [881.0, 182.66666666666666], [920.0, 267.5], [925.0, 241.0], [926.0, 210.5], [913.0, 7492.666666666667], [912.0, 213.0], [923.0, 242.0], [922.0, 243.0], [921.0, 246.0], [911.0, 199.0], [896.0, 249.44444444444446], [898.0, 256.0], [897.0, 252.0], [901.0, 18924.0], [899.0, 252.5], [903.0, 25131.0], [902.0, 22609.4], [910.0, 202.0], [908.0, 7239.0], [907.0, 38945.55102040815], [906.0, 26242.3], [905.0, 218.0], [904.0, 207.0], [919.0, 271.4], [917.0, 280.0], [916.0, 285.0], [915.0, 288.14285714285717], [956.0, 3328.75], [959.0, 3290.0], [945.0, 4224.5], [944.0, 4257.666666666667], [947.0, 3304.6666666666665], [946.0, 3200.0], [949.0, 3515.0], [948.0, 3551.0], [958.0, 3204.0], [957.0, 3201.0], [955.0, 3221.0], [954.0, 3287.0], [953.0, 3239.0], [952.0, 3244.0], [943.0, 4434.0], [929.0, 207.5], [928.0, 227.0], [931.0, 236.0], [930.0, 204.0], [935.0, 274.0], [932.0, 289.0], [942.0, 7220.0], [941.0, 7201.0], [940.0, 36195.25714285713], [939.0, 243.0], [938.0, 191.5], [937.0, 200.0], [936.0, 245.0], [951.0, 3212.0], [950.0, 3232.0], [985.0, 1190.0], [990.0, 1203.6666666666667], [991.0, 664.0], [977.0, 1213.0], [976.0, 85430.3541666667], [979.0, 1361.5], [978.0, 1233.0], [981.0, 1229.0], [980.0, 1439.3333333333333], [989.0, 1641.5], [988.0, 1198.3333333333333], [987.0, 1203.6666666666667], [984.0, 1193.0], [967.0, 2836.5], [966.0, 3221.0], [965.0, 3247.5], [964.0, 3281.5], [963.0, 3307.0], [962.0, 3263.0], [961.0, 3271.5], [960.0, 3333.0], [975.0, 223.0], [974.0, 46628.28571428572], [973.0, 52605.02222222223], [972.0, 1904.0], [971.0, 1235.0], [970.0, 1233.0], [969.0, 1231.0], [968.0, 2850.5], [983.0, 1186.0], [982.0, 1212.6666666666665], [1017.0, 443.0], [1021.0, 33507.272727272735], [1022.0, 522.4], [1009.0, 304.6666666666667], [1008.0, 320.0], [1011.0, 1287.5], [1010.0, 551.5], [1013.0, 315.6666666666667], [1012.0, 670.6666666666667], [1020.0, 954.6666666666666], [1019.0, 666.0], [1018.0, 436.0], [1016.0, 816.25], [999.0, 987.7272727272727], [997.0, 782.5], [996.0, 1043.0], [995.0, 1302.0], [994.0, 1257.0], [993.0, 899.0], [992.0, 282.0], [1007.0, 319.0], [1006.0, 7499.923076923077], [1005.0, 769.0], [1004.0, 61391.66666666667], [1003.0, 1237.0], [1002.0, 612.2500000000001], [1001.0, 896.0], [1015.0, 54977.6], [1014.0, 46397.5], [1082.0, 40412.66666666667], [1086.0, 271.0], [1056.0, 36684.0], [1058.0, 32811.92857142857], [1060.0, 36696.6], [1062.0, 536.5], [1064.0, 83977.57142857142], [1068.0, 596.25], [1070.0, 51905.28571428572], [1084.0, 206.33333333333334], [1080.0, 917.0], [1078.0, 987.5], [1076.0, 948.1], [1074.0, 84897.7264150943], [1054.0, 82847.5294117647], [1024.0, 410.0], [1026.0, 417.0], [1028.0, 45741.0], [1030.0, 443.0], [1034.0, 41292.549999999996], [1036.0, 45820.25], [1038.0, 482.25], [1050.0, 60790.44444444443], [1048.0, 52264.428571428565], [1046.0, 690.0], [1044.0, 70895.8888888889], [1042.0, 45920.3], [1040.0, 11797.375], [1148.0, 3225.8333333333335], [1120.0, 4774.5], [1122.0, 3114.8], [1124.0, 1749.0476190476193], [1126.0, 1305.75], [1128.0, 940.6666666666666], [1130.0, 1842.8], [1132.0, 34078.0], [1150.0, 3215.7000000000003], [1146.0, 100488.80419580414], [1144.0, 67731.5909090909], [1142.0, 73234.58536585367], [1140.0, 25365.249999999996], [1138.0, 3436.5], [1136.0, 730.3333333333334], [1102.0, 304.0], [1100.0, 7417.783783783783], [1098.0, 1197.0], [1096.0, 61687.59793814434], [1094.0, 180.33333333333334], [1092.0, 215.41666666666666], [1090.0, 206.0], [1088.0, 223.6], [1118.0, 5563.411764705882], [1116.0, 4505.260869565217], [1114.0, 6785.37037037037], [1112.0, 7222.25], [1110.0, 59783.485714285736], [1108.0, 65956.11764705885], [1106.0, 40653.333333333336], [1104.0, 70200.78571428571], [1158.0, 714.0], [1184.0, 28303.903508771928], [1192.0, 34121.60869565217], [1196.0, 68337.78857142854], [1200.0, 47431.54874041631], [1164.0, 191.0], [1162.0, 47652.273809523824], [1160.0, 81364.2344827586], [1156.0, 50863.59756097563], [1154.0, 2706.0], [1152.0, 3205.5454545454545], [1182.0, 232.46666666666667], [1180.0, 64149.21232876715], [1178.0, 17379.666666666664], [1176.0, 10230.122807017544], [1174.0, 15752.333333333332], [1172.0, 11162.875000000002], [1170.0, 33325.87499999999], [1168.0, 202.0], [1186.0, 14157.277777777772], [1188.0, 38157.22950819673], [1198.0, 51392.62089201882], [1194.0, 40641.658646616524], [1190.0, 32327.499999999996], [1085.0, 92014.53846153847], [1063.0, 76900.36363636365], [1057.0, 82082.28571428572], [1059.0, 78646.46666666667], [1061.0, 626.6], [1067.0, 622.5], [1065.0, 30495.166666666668], [1069.0, 619.5], [1071.0, 45416.5], [1081.0, 45088.87500000001], [1077.0, 1010.0], [1075.0, 969.0], [1073.0, 26217.85714285714], [1025.0, 39469.357142857145], [1027.0, 468.25], [1029.0, 529.0], [1031.0, 425.5], [1035.0, 398.5], [1037.0, 878.0], [1039.0, 16898.272727272724], [1051.0, 693.0], [1049.0, 45792.0], [1043.0, 470.0], [1041.0, 60909.666666666664], [1147.0, 89183.96296296296], [1139.0, 2634.833333333333], [1151.0, 3219.666666666667], [1121.0, 3774.944444444445], [1123.0, 1481.0], [1125.0, 1557.9999999999998], [1127.0, 1748.0], [1129.0, 1470.1153846153848], [1131.0, 30684.36363636363], [1135.0, 768.3333333333334], [1133.0, 17612.0], [1149.0, 3245.0], [1143.0, 87286.08943089432], [1141.0, 68948.53333333335], [1137.0, 782.0], [1103.0, 10430.416666666668], [1101.0, 374.77777777777777], [1099.0, 9133.470588235296], [1097.0, 1309.1666666666665], [1095.0, 198.5], [1093.0, 211.33333333333334], [1089.0, 208.2], [1119.0, 3831.8], [1117.0, 5593.681818181819], [1115.0, 5984.307692307692], [1113.0, 6943.319999999999], [1111.0, 96743.26056338032], [1109.0, 24508.4], [1107.0, 76340.76923076923], [1161.0, 721.5], [1167.0, 170.33333333333334], [1165.0, 202.0], [1163.0, 248.33333333333334], [1159.0, 95923.57777777781], [1157.0, 107755.9350649351], [1155.0, 2136.6], [1153.0, 2574.3529411764707], [1183.0, 1630.0000000000002], [1181.0, 46748.181818181816], [1179.0, 59278.333333333336], [1177.0, 39736.37931034483], [1175.0, 3521.294117647059], [1173.0, 12187.5], [1171.0, 14116.75], [1169.0, 203.0], [1185.0, 6499.91304347826], [1187.0, 71155.42134213417], [1189.0, 32343.25], [1199.0, 64534.31783216789], [1197.0, 82401.8981854839], [1195.0, 1773.5333333333333], [1193.0, 70894.99999999999], [1191.0, 103010.40740740739], [1.0, 749428.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1092.888515876346, 54852.68098102286]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6869069E12, "maxY": 4169096.35, "series": [{"data": [[1.6869072E12, 2250182.5833333335], [1.68690702E12, 1837964.2333333334], [1.68690786E12, 79501.53333333334], [1.68690756E12, 1874255.9833333334], [1.68690726E12, 364001.15], [1.68690696E12, 934127.8333333334], [1.68690792E12, 4169096.35], [1.68690762E12, 239821.85], [1.68690732E12, 3604326.9166666665], [1.6869069E12, 778884.2], [1.68690798E12, 813467.2], [1.68690768E12, 3464214.4166666665], [1.68690738E12, 1460516.1], [1.68690774E12, 327352.7166666667], [1.68690744E12, 407625.2166666667], [1.68690714E12, 2181550.9166666665], [1.6869081E12, 675.25], [1.68690708E12, 2275667.7], [1.6869078E12, 2369418.0833333335], [1.6869075E12, 3702256.216666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6869072E12, 8939.866666666667], [1.68690702E12, 4061.9166666666665], [1.68690786E12, 89.53333333333333], [1.68690756E12, 8545.733333333334], [1.68690726E12, 293.8], [1.68690696E12, 7435.45], [1.68690792E12, 7272.566666666667], [1.68690762E12, 729.45], [1.68690732E12, 6829.2], [1.6869069E12, 3572.516666666667], [1.68690798E12, 1578.5666666666666], [1.68690768E12, 7022.283333333334], [1.68690738E12, 8117.433333333333], [1.68690774E12, 770.6666666666666], [1.68690744E12, 1143.8666666666666], [1.68690714E12, 6253.766666666666], [1.6869081E12, 0.0], [1.68690708E12, 3367.9], [1.6869078E12, 8442.433333333332], [1.6869075E12, 6507.533333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869081E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 10765.51237623763, "minX": 1.6869069E12, "maxY": 979489.8666666667, "series": [{"data": [[1.6869072E12, 51651.07197382778], [1.68690702E12, 49470.47373447941], [1.68690786E12, 20789.611111111106], [1.68690756E12, 59361.90942698695], [1.68690726E12, 78082.16216216217], [1.68690696E12, 37286.4306625578], [1.68690792E12, 50879.78944866943], [1.68690762E12, 27142.789999999994], [1.68690732E12, 68059.01507276508], [1.6869069E12, 10765.51237623763], [1.68690798E12, 18740.79498861044], [1.68690768E12, 65662.02715654936], [1.68690738E12, 54815.18929765887], [1.68690774E12, 47633.214659685866], [1.68690744E12, 36994.51272727271], [1.68690714E12, 55925.11618257247], [1.6869081E12, 979489.8666666667], [1.68690708E12, 64308.59944237929], [1.6869078E12, 55124.335795454506], [1.6869075E12, 68407.40964493918]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869081E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6869069E12, "maxY": 59296.50831600833, "series": [{"data": [[1.6869072E12, 49016.26444929124], [1.68690702E12, 38851.006685768836], [1.68690786E12, 13499.000000000004], [1.68690756E12, 56575.8995686999], [1.68690726E12, 43774.6846846847], [1.68690696E12, 36007.94915254238], [1.68690792E12, 39123.86549429658], [1.68690762E12, 22617.770000000008], [1.68690732E12, 59296.50831600833], [1.6869069E12, 9265.641089108922], [1.68690798E12, 17059.410022779055], [1.68690768E12, 53575.50000000002], [1.68690738E12, 52514.181939799324], [1.68690774E12, 46110.65968586387], [1.68690744E12, 34379.66909090907], [1.68690714E12, 51185.70816044265], [1.6869081E12, 0.0], [1.68690708E12, 49916.197026022266], [1.6869078E12, 50478.58749999998], [1.6869075E12, 54009.162692103884]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869081E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6869069E12, "maxY": 2683.349999999999, "series": [{"data": [[1.6869072E12, 938.5954198473287], [1.68690702E12, 1807.911174785099], [1.68690786E12, 107.0], [1.68690756E12, 769.9525569932214], [1.68690726E12, 372.873873873874], [1.68690696E12, 2279.1902927580913], [1.68690792E12, 1547.2889733840282], [1.68690762E12, 2683.349999999999], [1.68690732E12, 662.9381496881502], [1.6869069E12, 1195.2784653465349], [1.68690798E12, 120.96583143507965], [1.68690768E12, 2469.339723109696], [1.68690738E12, 602.0020066889634], [1.68690774E12, 465.9633507853404], [1.68690744E12, 185.20000000000002], [1.68690714E12, 316.60926694329186], [1.6869081E12, 0.0], [1.68690708E12, 670.3057620817847], [1.6869078E12, 918.0738636363645], [1.6869075E12, 1366.1176470588218]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869081E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 127.0, "minX": 1.6869069E12, "maxY": 172196.0, "series": [{"data": [[1.6869072E12, 103065.0], [1.68690702E12, 114880.0], [1.68690786E12, 42031.0], [1.68690756E12, 158342.0], [1.68690726E12, 116998.0], [1.68690696E12, 58699.0], [1.68690792E12, 126497.0], [1.68690762E12, 63989.0], [1.68690732E12, 148293.0], [1.6869069E12, 35283.0], [1.68690798E12, 54000.0], [1.68690768E12, 136892.0], [1.68690738E12, 149381.0], [1.68690774E12, 120876.0], [1.68690744E12, 81539.0], [1.68690714E12, 162717.0], [1.68690708E12, 137311.0], [1.6869078E12, 172196.0], [1.6869075E12, 150869.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6869072E12, 160.0], [1.68690702E12, 127.0], [1.68690786E12, 334.0], [1.68690756E12, 160.0], [1.68690726E12, 197.0], [1.68690696E12, 162.0], [1.68690792E12, 158.0], [1.68690762E12, 163.0], [1.68690732E12, 159.0], [1.6869069E12, 153.0], [1.68690798E12, 167.0], [1.68690768E12, 201.0], [1.68690738E12, 170.0], [1.68690774E12, 158.0], [1.68690744E12, 179.0], [1.68690714E12, 158.0], [1.68690708E12, 160.0], [1.6869078E12, 156.0], [1.6869075E12, 170.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6869072E12, 99183.5], [1.68690702E12, 114484.0], [1.68690786E12, 42002.5], [1.68690756E12, 79947.6], [1.68690726E12, 116467.8], [1.68690696E12, 58600.4], [1.68690792E12, 117614.5], [1.68690762E12, 63884.6], [1.68690732E12, 130044.5], [1.6869069E12, 27693.0], [1.68690798E12, 50864.0], [1.68690768E12, 113966.9], [1.68690738E12, 83560.4], [1.68690774E12, 112872.8], [1.68690744E12, 81471.0], [1.68690714E12, 109309.6], [1.68690708E12, 123406.5], [1.6869078E12, 94272.5], [1.6869075E12, 124293.20000000016]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6869072E12, 102600.5], [1.68690702E12, 114615.2], [1.68690786E12, 42031.0], [1.68690756E12, 158125.52], [1.68690726E12, 116975.2], [1.68690696E12, 58681.89], [1.68690792E12, 120087.6], [1.68690762E12, 63987.46], [1.68690732E12, 140878.0], [1.6869069E12, 35268.97], [1.68690798E12, 53029.6], [1.68690768E12, 135443.35], [1.68690738E12, 147210.6], [1.68690774E12, 120197.95999999999], [1.68690744E12, 81538.38], [1.68690714E12, 113664.84], [1.68690708E12, 131943.63], [1.6869078E12, 98953.76], [1.6869075E12, 150317.6]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6869072E12, 59504.5], [1.68690702E12, 67443.0], [1.68690786E12, 21146.0], [1.68690756E12, 73944.0], [1.68690726E12, 100418.0], [1.68690696E12, 48655.0], [1.68690792E12, 34481.5], [1.68690762E12, 31722.0], [1.68690732E12, 106014.5], [1.6869069E12, 9571.5], [1.68690798E12, 18628.0], [1.68690768E12, 99147.5], [1.68690738E12, 76273.0], [1.68690774E12, 47622.0], [1.68690744E12, 39117.0], [1.68690714E12, 55466.0], [1.68690708E12, 65081.5], [1.6869078E12, 72749.5], [1.6869075E12, 110350.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.6869072E12, 99729.25], [1.68690702E12, 114541.0], [1.68690786E12, 42023.5], [1.68690756E12, 128343.0], [1.68690726E12, 116561.6], [1.68690696E12, 58647.45], [1.68690792E12, 118978.25], [1.68690762E12, 63942.35], [1.68690732E12, 134014.25], [1.6869069E12, 35175.0], [1.68690798E12, 51219.0], [1.68690768E12, 120989.2], [1.68690738E12, 84210.7], [1.68690774E12, 120132.0], [1.68690744E12, 81507.6], [1.68690714E12, 109643.2], [1.68690708E12, 126490.45], [1.6869078E12, 95698.45], [1.6869075E12, 129411.4]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68690798E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 973020.0, "series": [{"data": [[2.0, 2176.0], [3.0, 4337.0], [4.0, 2292.5], [5.0, 38804.0], [6.0, 234.5], [7.0, 1193.0], [8.0, 1208.5], [9.0, 1216.0], [10.0, 2574.0], [11.0, 2193.5], [12.0, 106752.5], [13.0, 7231.0], [14.0, 1307.0], [15.0, 241.5], [16.0, 7278.5], [17.0, 6960.5], [18.0, 3252.0], [19.0, 990.0], [21.0, 110466.0], [23.0, 692.0], [24.0, 3217.0], [26.0, 45767.0], [27.0, 1238.0], [29.0, 1198.0], [30.0, 3208.0], [32.0, 57915.5], [35.0, 1255.5], [34.0, 3220.0], [36.0, 41890.0], [37.0, 61682.0], [38.0, 1860.0], [39.0, 216.0], [40.0, 6779.5], [41.0, 116082.0], [42.0, 3304.5], [45.0, 76903.5], [44.0, 46789.5], [46.0, 52124.5], [49.0, 86612.0], [50.0, 286.5], [51.0, 32551.0], [53.0, 58243.0], [56.0, 26170.5], [58.0, 3193.0], [59.0, 120780.0], [60.0, 1247.5], [61.0, 114976.0], [63.0, 64330.5], [62.0, 51176.0], [67.0, 3209.0], [65.0, 11063.0], [68.0, 673.0], [70.0, 99115.0], [73.0, 1799.0], [72.0, 2001.0], [74.0, 89883.0], [76.0, 9789.0], [78.0, 56632.0], [83.0, 109099.5], [81.0, 46934.0], [80.0, 6428.5], [84.0, 78243.5], [85.0, 63502.0], [88.0, 19268.0], [90.0, 83653.5], [91.0, 3236.0], [96.0, 21715.0], [97.0, 105968.0], [99.0, 34369.0], [103.0, 115609.5], [102.0, 37368.0], [104.0, 119600.0], [119.0, 841.0], [118.0, 1324.0], [116.0, 38391.5], [121.0, 1221.0], [127.0, 1234.0], [130.0, 4174.0], [128.0, 62504.0], [137.0, 106062.0], [141.0, 50111.0], [150.0, 114508.5], [151.0, 30083.0], [144.0, 782.0], [152.0, 120608.5], [157.0, 72153.0], [154.0, 37416.0], [166.0, 15890.0], [181.0, 324.0], [177.0, 122766.0], [176.0, 52069.5], [199.0, 67210.0], [193.0, 129176.0], [202.0, 2093.0], [212.0, 2902.5], [214.0, 2672.5], [219.0, 40526.0], [227.0, 1321.0], [226.0, 98990.0], [255.0, 637.0], [262.0, 1430.5], [257.0, 129675.0], [275.0, 77007.0], [273.0, 59880.0], [289.0, 2063.0], [290.0, 49865.0], [295.0, 116225.0], [315.0, 106183.0], [318.0, 119688.5], [330.0, 120088.0], [362.0, 109736.0], [363.0, 90333.0], [361.0, 116563.0], [383.0, 116397.0], [394.0, 118809.5], [407.0, 109436.0], [479.0, 58551.0], [484.0, 48649.0], [560.0, 97745.0], [630.0, 75384.0], [642.0, 92471.0], [734.0, 80101.0], [1.0, 3231.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 1121.5], [560.0, 22874.0], [36.0, 14518.0], [734.0, 172.5], [3.0, 2215.0], [63.0, 480.5], [67.0, 1.0], [73.0, 21213.0], [72.0, 0.0], [5.0, 4523.0], [96.0, 569.0], [121.0, 1.0], [128.0, 8593.0], [130.0, 76144.0], [166.0, 0.0], [10.0, 0.5], [199.0, 32858.5], [212.0, 1.0], [14.0, 5676.0], [15.0, 973020.0], [16.0, 2101.0], [1.0, 75551.0], [275.0, 25392.0], [18.0, 0.0], [290.0, 1.0], [24.0, 21046.0], [26.0, 1187.0], [27.0, 0.0], [479.0, 6480.0], [484.0, 1286.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 734.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 120690.0, "series": [{"data": [[2.0, 2176.0], [3.0, 4337.0], [4.0, 2292.5], [5.0, 20785.0], [6.0, 234.5], [7.0, 1193.0], [8.0, 1208.5], [9.0, 1216.0], [10.0, 2574.0], [11.0, 2193.5], [12.0, 100546.5], [13.0, 7231.0], [14.0, 1307.0], [15.0, 241.5], [16.0, 6111.5], [17.0, 6960.5], [18.0, 3252.0], [19.0, 990.0], [21.0, 60552.0], [23.0, 692.0], [24.0, 3217.0], [26.0, 35491.0], [27.0, 1238.0], [29.0, 1198.0], [30.0, 3208.0], [32.0, 55845.0], [35.0, 1255.5], [34.0, 3220.0], [36.0, 27805.5], [37.0, 61682.0], [38.0, 1860.0], [39.0, 216.0], [40.0, 6779.5], [41.0, 115629.0], [42.0, 3304.5], [45.0, 76903.5], [44.0, 30546.0], [46.0, 48622.5], [49.0, 82203.0], [50.0, 286.5], [51.0, 32551.0], [53.0, 52391.0], [56.0, 26170.5], [58.0, 3193.0], [59.0, 120690.0], [60.0, 1247.5], [61.0, 91504.0], [63.0, 61639.0], [62.0, 46543.5], [67.0, 3209.0], [65.0, 11063.0], [68.0, 673.0], [70.0, 99105.0], [73.0, 1799.0], [72.0, 2001.0], [74.0, 52749.0], [76.0, 5976.5], [78.0, 53152.5], [83.0, 72871.5], [81.0, 46934.0], [80.0, 6428.5], [84.0, 76494.0], [85.0, 63502.0], [88.0, 19268.0], [90.0, 83033.0], [91.0, 3236.0], [96.0, 18021.0], [97.0, 105934.0], [99.0, 28016.0], [103.0, 77796.0], [102.0, 34066.0], [104.0, 64128.5], [119.0, 841.0], [118.0, 1324.0], [116.0, 34475.5], [121.0, 1221.0], [127.0, 1234.0], [130.0, 4174.0], [128.0, 53205.5], [137.0, 102008.0], [141.0, 50111.0], [150.0, 114508.5], [151.0, 30083.0], [144.0, 782.0], [152.0, 82242.0], [157.0, 72153.0], [154.0, 31987.5], [166.0, 12370.0], [181.0, 324.0], [177.0, 89049.0], [176.0, 50659.5], [199.0, 66016.0], [193.0, 115874.0], [202.0, 2093.0], [212.0, 2902.5], [214.0, 2672.5], [219.0, 36652.0], [227.0, 1321.0], [226.0, 93366.0], [255.0, 637.0], [262.0, 1430.5], [257.0, 110389.0], [275.0, 53026.5], [273.0, 57467.0], [289.0, 2063.0], [290.0, 46622.0], [295.0, 78744.0], [315.0, 106023.0], [318.0, 75492.0], [330.0, 111943.0], [362.0, 61452.5], [363.0, 58297.0], [361.0, 80758.0], [383.0, 65883.0], [394.0, 98282.0], [407.0, 105684.0], [479.0, 58551.0], [484.0, 48649.0], [560.0, 97745.0], [630.0, 74981.5], [642.0, 92471.0], [734.0, 80101.0], [1.0, 3231.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [560.0, 0.0], [36.0, 0.0], [734.0, 0.0], [3.0, 0.0], [63.0, 0.0], [67.0, 0.0], [73.0, 0.0], [72.0, 0.0], [5.0, 0.0], [96.0, 0.0], [121.0, 0.0], [128.0, 0.0], [130.0, 0.0], [166.0, 0.0], [10.0, 0.0], [199.0, 0.0], [212.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [1.0, 0.0], [275.0, 0.0], [18.0, 0.0], [290.0, 0.0], [24.0, 0.0], [26.0, 0.0], [27.0, 0.0], [479.0, 0.0], [484.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 734.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.6869069E12, "maxY": 33.46666666666667, "series": [{"data": [[1.6869072E12, 30.55], [1.68690702E12, 17.45], [1.68690786E12, 0.31666666666666665], [1.68690756E12, 26.8], [1.68690726E12, 1.85], [1.68690696E12, 21.633333333333333], [1.68690792E12, 24.266666666666666], [1.68690762E12, 3.066666666666667], [1.68690732E12, 32.06666666666667], [1.6869069E12, 33.46666666666667], [1.68690798E12, 4.25], [1.68690768E12, 30.233333333333334], [1.68690738E12, 24.883333333333333], [1.68690774E12, 2.816666666666667], [1.68690744E12, 4.583333333333333], [1.68690714E12, 24.1], [1.68690708E12, 17.933333333333334], [1.6869078E12, 25.833333333333332], [1.6869075E12, 31.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68690798E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6869069E12, "maxY": 29.566666666666666, "series": [{"data": [[1.6869072E12, 16.0], [1.68690702E12, 13.1], [1.68690786E12, 0.5666666666666667], [1.68690756E12, 13.466666666666667], [1.68690726E12, 1.85], [1.68690696E12, 6.6], [1.68690792E12, 29.566666666666666], [1.68690762E12, 2.0833333333333335], [1.68690732E12, 26.45], [1.6869069E12, 6.9], [1.68690798E12, 5.966666666666667], [1.68690768E12, 24.7], [1.68690738E12, 10.366666666666667], [1.68690774E12, 2.3333333333333335], [1.68690744E12, 2.9], [1.68690714E12, 15.533333333333333], [1.68690708E12, 16.233333333333334], [1.6869078E12, 16.866666666666667], [1.6869075E12, 26.25]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6869072E12, 13.566666666666666], [1.68690702E12, 4.216666666666667], [1.68690756E12, 13.583333333333334], [1.68690696E12, 13.566666666666666], [1.68690792E12, 5.5], [1.68690762E12, 0.85], [1.68690732E12, 5.616666666666666], [1.6869069E12, 5.266666666666667], [1.68690798E12, 1.35], [1.68690768E12, 6.6], [1.68690738E12, 13.716666666666667], [1.68690774E12, 0.85], [1.68690744E12, 1.45], [1.68690714E12, 8.05], [1.68690708E12, 1.7], [1.6869078E12, 12.233333333333333], [1.6869075E12, 5.0]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.68690762E12, 0.4], [1.6869069E12, 0.4]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.6869072E12, 0.6166666666666667], [1.68690738E12, 0.3], [1.68690696E12, 0.4166666666666667], [1.6869069E12, 0.6]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.6869072E12, 0.38333333333333336], [1.68690702E12, 0.13333333333333333], [1.68690738E12, 0.5333333333333333], [1.68690786E12, 0.03333333333333333], [1.68690696E12, 1.05], [1.68690744E12, 0.23333333333333334], [1.68690714E12, 0.5166666666666667], [1.6869081E12, 0.25], [1.6869078E12, 0.23333333333333334], [1.6869069E12, 0.3], [1.6869075E12, 0.2]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869081E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6869069E12, "maxY": 35.06666666666667, "series": [{"data": [[1.6869072E12, 29.566666666666666], [1.68690702E12, 17.316666666666666], [1.68690786E12, 0.5666666666666667], [1.68690756E12, 27.05], [1.68690726E12, 1.85], [1.68690696E12, 20.166666666666668], [1.68690792E12, 35.06666666666667], [1.68690762E12, 2.933333333333333], [1.68690732E12, 32.06666666666667], [1.6869069E12, 12.166666666666666], [1.68690798E12, 7.316666666666666], [1.68690768E12, 31.3], [1.68690738E12, 24.083333333333332], [1.68690774E12, 3.183333333333333], [1.68690744E12, 4.35], [1.68690714E12, 23.583333333333332], [1.68690708E12, 17.933333333333334], [1.6869078E12, 29.1], [1.6869075E12, 31.25]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6869072E12, 1.0], [1.68690702E12, 0.13333333333333333], [1.68690738E12, 0.8333333333333334], [1.68690786E12, 0.03333333333333333], [1.68690696E12, 1.4666666666666666], [1.68690744E12, 0.23333333333333334], [1.68690714E12, 0.5166666666666667], [1.68690762E12, 0.4], [1.6869081E12, 0.25], [1.6869078E12, 0.23333333333333334], [1.6869069E12, 1.3], [1.6869075E12, 0.2]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869081E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6869069E12, "maxY": 35.06666666666667, "series": [{"data": [[1.6869072E12, 29.566666666666666], [1.68690702E12, 17.316666666666666], [1.68690786E12, 0.5666666666666667], [1.68690756E12, 27.05], [1.68690726E12, 1.85], [1.68690696E12, 20.166666666666668], [1.68690792E12, 35.06666666666667], [1.68690762E12, 2.933333333333333], [1.68690732E12, 32.06666666666667], [1.6869069E12, 12.166666666666666], [1.68690798E12, 7.316666666666666], [1.68690768E12, 31.3], [1.68690738E12, 24.083333333333332], [1.68690774E12, 3.183333333333333], [1.68690744E12, 4.35], [1.68690714E12, 23.583333333333332], [1.68690708E12, 17.933333333333334], [1.6869078E12, 29.1], [1.6869075E12, 31.25]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6869072E12, 1.0], [1.68690702E12, 0.13333333333333333], [1.68690738E12, 0.8333333333333334], [1.68690786E12, 0.03333333333333333], [1.68690696E12, 1.4666666666666666], [1.68690744E12, 0.23333333333333334], [1.68690714E12, 0.5166666666666667], [1.68690762E12, 0.4], [1.6869081E12, 0.25], [1.6869078E12, 0.23333333333333334], [1.6869069E12, 1.3], [1.6869075E12, 0.2]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869081E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

