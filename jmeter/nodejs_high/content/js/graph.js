/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 66.0, "minX": 0.0, "maxY": 265991.0, "series": [{"data": [[0.0, 66.0], [0.1, 67.0], [0.2, 67.0], [0.3, 67.0], [0.4, 68.0], [0.5, 68.0], [0.6, 68.0], [0.7, 68.0], [0.8, 68.0], [0.9, 68.0], [1.0, 68.0], [1.1, 68.0], [1.2, 68.0], [1.3, 68.0], [1.4, 68.0], [1.5, 68.0], [1.6, 68.0], [1.7, 69.0], [1.8, 69.0], [1.9, 69.0], [2.0, 69.0], [2.1, 69.0], [2.2, 69.0], [2.3, 69.0], [2.4, 69.0], [2.5, 69.0], [2.6, 69.0], [2.7, 69.0], [2.8, 69.0], [2.9, 69.0], [3.0, 69.0], [3.1, 69.0], [3.2, 69.0], [3.3, 69.0], [3.4, 69.0], [3.5, 69.0], [3.6, 69.0], [3.7, 69.0], [3.8, 69.0], [3.9, 69.0], [4.0, 69.0], [4.1, 69.0], [4.2, 69.0], [4.3, 69.0], [4.4, 69.0], [4.5, 69.0], [4.6, 69.0], [4.7, 69.0], [4.8, 69.0], [4.9, 69.0], [5.0, 69.0], [5.1, 70.0], [5.2, 70.0], [5.3, 70.0], [5.4, 70.0], [5.5, 70.0], [5.6, 70.0], [5.7, 70.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 70.0], [6.2, 70.0], [6.3, 70.0], [6.4, 70.0], [6.5, 70.0], [6.6, 70.0], [6.7, 70.0], [6.8, 70.0], [6.9, 70.0], [7.0, 70.0], [7.1, 70.0], [7.2, 70.0], [7.3, 70.0], [7.4, 70.0], [7.5, 70.0], [7.6, 70.0], [7.7, 70.0], [7.8, 70.0], [7.9, 70.0], [8.0, 70.0], [8.1, 70.0], [8.2, 70.0], [8.3, 70.0], [8.4, 70.0], [8.5, 70.0], [8.6, 70.0], [8.7, 70.0], [8.8, 70.0], [8.9, 70.0], [9.0, 70.0], [9.1, 70.0], [9.2, 70.0], [9.3, 70.0], [9.4, 70.0], [9.5, 70.0], [9.6, 71.0], [9.7, 71.0], [9.8, 71.0], [9.9, 71.0], [10.0, 71.0], [10.1, 71.0], [10.2, 71.0], [10.3, 71.0], [10.4, 71.0], [10.5, 71.0], [10.6, 71.0], [10.7, 71.0], [10.8, 71.0], [10.9, 71.0], [11.0, 71.0], [11.1, 71.0], [11.2, 71.0], [11.3, 71.0], [11.4, 71.0], [11.5, 71.0], [11.6, 71.0], [11.7, 71.0], [11.8, 71.0], [11.9, 71.0], [12.0, 71.0], [12.1, 71.0], [12.2, 71.0], [12.3, 71.0], [12.4, 71.0], [12.5, 71.0], [12.6, 71.0], [12.7, 71.0], [12.8, 71.0], [12.9, 71.0], [13.0, 71.0], [13.1, 71.0], [13.2, 71.0], [13.3, 71.0], [13.4, 71.0], [13.5, 72.0], [13.6, 72.0], [13.7, 72.0], [13.8, 72.0], [13.9, 72.0], [14.0, 72.0], [14.1, 72.0], [14.2, 72.0], [14.3, 72.0], [14.4, 72.0], [14.5, 72.0], [14.6, 72.0], [14.7, 72.0], [14.8, 72.0], [14.9, 72.0], [15.0, 72.0], [15.1, 72.0], [15.2, 72.0], [15.3, 72.0], [15.4, 72.0], [15.5, 72.0], [15.6, 72.0], [15.7, 72.0], [15.8, 72.0], [15.9, 72.0], [16.0, 72.0], [16.1, 72.0], [16.2, 72.0], [16.3, 72.0], [16.4, 73.0], [16.5, 73.0], [16.6, 73.0], [16.7, 73.0], [16.8, 73.0], [16.9, 73.0], [17.0, 73.0], [17.1, 73.0], [17.2, 73.0], [17.3, 73.0], [17.4, 73.0], [17.5, 73.0], [17.6, 73.0], [17.7, 73.0], [17.8, 73.0], [17.9, 73.0], [18.0, 73.0], [18.1, 73.0], [18.2, 73.0], [18.3, 74.0], [18.4, 74.0], [18.5, 74.0], [18.6, 74.0], [18.7, 74.0], [18.8, 74.0], [18.9, 74.0], [19.0, 74.0], [19.1, 74.0], [19.2, 74.0], [19.3, 74.0], [19.4, 74.0], [19.5, 74.0], [19.6, 74.0], [19.7, 74.0], [19.8, 74.0], [19.9, 74.0], [20.0, 74.0], [20.1, 75.0], [20.2, 75.0], [20.3, 75.0], [20.4, 75.0], [20.5, 75.0], [20.6, 75.0], [20.7, 75.0], [20.8, 75.0], [20.9, 75.0], [21.0, 75.0], [21.1, 75.0], [21.2, 75.0], [21.3, 75.0], [21.4, 75.0], [21.5, 75.0], [21.6, 75.0], [21.7, 75.0], [21.8, 75.0], [21.9, 75.0], [22.0, 75.0], [22.1, 76.0], [22.2, 76.0], [22.3, 76.0], [22.4, 76.0], [22.5, 76.0], [22.6, 76.0], [22.7, 76.0], [22.8, 76.0], [22.9, 76.0], [23.0, 76.0], [23.1, 76.0], [23.2, 76.0], [23.3, 76.0], [23.4, 76.0], [23.5, 76.0], [23.6, 76.0], [23.7, 77.0], [23.8, 77.0], [23.9, 77.0], [24.0, 77.0], [24.1, 77.0], [24.2, 77.0], [24.3, 77.0], [24.4, 77.0], [24.5, 77.0], [24.6, 77.0], [24.7, 77.0], [24.8, 77.0], [24.9, 77.0], [25.0, 77.0], [25.1, 78.0], [25.2, 78.0], [25.3, 78.0], [25.4, 78.0], [25.5, 78.0], [25.6, 78.0], [25.7, 78.0], [25.8, 78.0], [25.9, 78.0], [26.0, 79.0], [26.1, 79.0], [26.2, 79.0], [26.3, 79.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 80.0], [26.9, 80.0], [27.0, 80.0], [27.1, 80.0], [27.2, 80.0], [27.3, 80.0], [27.4, 81.0], [27.5, 81.0], [27.6, 81.0], [27.7, 81.0], [27.8, 81.0], [27.9, 82.0], [28.0, 82.0], [28.1, 82.0], [28.2, 82.0], [28.3, 82.0], [28.4, 83.0], [28.5, 83.0], [28.6, 83.0], [28.7, 83.0], [28.8, 84.0], [28.9, 84.0], [29.0, 84.0], [29.1, 84.0], [29.2, 85.0], [29.3, 85.0], [29.4, 85.0], [29.5, 85.0], [29.6, 86.0], [29.7, 86.0], [29.8, 86.0], [29.9, 87.0], [30.0, 87.0], [30.1, 88.0], [30.2, 88.0], [30.3, 89.0], [30.4, 89.0], [30.5, 90.0], [30.6, 90.0], [30.7, 91.0], [30.8, 91.0], [30.9, 92.0], [31.0, 93.0], [31.1, 93.0], [31.2, 94.0], [31.3, 95.0], [31.4, 96.0], [31.5, 96.0], [31.6, 98.0], [31.7, 99.0], [31.8, 100.0], [31.9, 101.0], [32.0, 103.0], [32.1, 105.0], [32.2, 108.0], [32.3, 112.0], [32.4, 117.0], [32.5, 122.0], [32.6, 128.0], [32.7, 134.0], [32.8, 136.0], [32.9, 141.0], [33.0, 156.0], [33.1, 167.0], [33.2, 314.0], [33.3, 406.0], [33.4, 815.0], [33.5, 995.0], [33.6, 1064.0], [33.7, 1162.0], [33.8, 1196.0], [33.9, 1251.0], [34.0, 1314.0], [34.1, 1439.0], [34.2, 1517.0], [34.3, 1557.0], [34.4, 1640.0], [34.5, 1696.0], [34.6, 1749.0], [34.7, 1802.0], [34.8, 1836.0], [34.9, 1854.0], [35.0, 1866.0], [35.1, 1881.0], [35.2, 1901.0], [35.3, 1964.0], [35.4, 2002.0], [35.5, 2128.0], [35.6, 2233.0], [35.7, 2315.0], [35.8, 2384.0], [35.9, 2507.0], [36.0, 2527.0], [36.1, 2575.0], [36.2, 2620.0], [36.3, 2639.0], [36.4, 2676.0], [36.5, 3136.0], [36.6, 3701.0], [36.7, 4813.0], [36.8, 4990.0], [36.9, 5139.0], [37.0, 5149.0], [37.1, 5179.0], [37.2, 5323.0], [37.3, 5342.0], [37.4, 5616.0], [37.5, 5623.0], [37.6, 5756.0], [37.7, 5894.0], [37.8, 5895.0], [37.9, 5910.0], [38.0, 5958.0], [38.1, 5984.0], [38.2, 6183.0], [38.3, 6339.0], [38.4, 6474.0], [38.5, 6517.0], [38.6, 6527.0], [38.7, 6630.0], [38.8, 6655.0], [38.9, 6709.0], [39.0, 6882.0], [39.1, 6994.0], [39.2, 7057.0], [39.3, 7115.0], [39.4, 7177.0], [39.5, 7190.0], [39.6, 7216.0], [39.7, 7249.0], [39.8, 7341.0], [39.9, 7359.0], [40.0, 7441.0], [40.1, 7457.0], [40.2, 7520.0], [40.3, 7547.0], [40.4, 7572.0], [40.5, 7629.0], [40.6, 7700.0], [40.7, 7759.0], [40.8, 7862.0], [40.9, 7926.0], [41.0, 8015.0], [41.1, 8130.0], [41.2, 8234.0], [41.3, 8417.0], [41.4, 8588.0], [41.5, 8682.0], [41.6, 8721.0], [41.7, 8772.0], [41.8, 8833.0], [41.9, 8885.0], [42.0, 8944.0], [42.1, 9007.0], [42.2, 9037.0], [42.3, 9070.0], [42.4, 9095.0], [42.5, 9110.0], [42.6, 9137.0], [42.7, 9157.0], [42.8, 9182.0], [42.9, 9190.0], [43.0, 9243.0], [43.1, 9280.0], [43.2, 9495.0], [43.3, 9726.0], [43.4, 9808.0], [43.5, 9845.0], [43.6, 9875.0], [43.7, 9920.0], [43.8, 9953.0], [43.9, 10015.0], [44.0, 10078.0], [44.1, 10136.0], [44.2, 10170.0], [44.3, 10197.0], [44.4, 10397.0], [44.5, 10472.0], [44.6, 10554.0], [44.7, 10615.0], [44.8, 10648.0], [44.9, 10689.0], [45.0, 10722.0], [45.1, 10825.0], [45.2, 10895.0], [45.3, 11024.0], [45.4, 11105.0], [45.5, 11149.0], [45.6, 11239.0], [45.7, 11308.0], [45.8, 11333.0], [45.9, 11375.0], [46.0, 11421.0], [46.1, 11439.0], [46.2, 11493.0], [46.3, 11546.0], [46.4, 11615.0], [46.5, 11638.0], [46.6, 11655.0], [46.7, 11661.0], [46.8, 11677.0], [46.9, 11721.0], [47.0, 11791.0], [47.1, 11805.0], [47.2, 11878.0], [47.3, 11961.0], [47.4, 12005.0], [47.5, 12023.0], [47.6, 12028.0], [47.7, 12037.0], [47.8, 12111.0], [47.9, 12236.0], [48.0, 12329.0], [48.1, 12376.0], [48.2, 12484.0], [48.3, 12503.0], [48.4, 12546.0], [48.5, 12596.0], [48.6, 12608.0], [48.7, 12638.0], [48.8, 12682.0], [48.9, 12768.0], [49.0, 12858.0], [49.1, 12961.0], [49.2, 12998.0], [49.3, 13070.0], [49.4, 13255.0], [49.5, 13428.0], [49.6, 13516.0], [49.7, 13672.0], [49.8, 13794.0], [49.9, 13899.0], [50.0, 13982.0], [50.1, 14073.0], [50.2, 14181.0], [50.3, 14237.0], [50.4, 14254.0], [50.5, 14329.0], [50.6, 14639.0], [50.7, 14717.0], [50.8, 14744.0], [50.9, 14755.0], [51.0, 14767.0], [51.1, 14778.0], [51.2, 14809.0], [51.3, 14825.0], [51.4, 14863.0], [51.5, 14931.0], [51.6, 15000.0], [51.7, 15079.0], [51.8, 15369.0], [51.9, 15471.0], [52.0, 15521.0], [52.1, 15711.0], [52.2, 15894.0], [52.3, 16008.0], [52.4, 16032.0], [52.5, 16134.0], [52.6, 16204.0], [52.7, 16219.0], [52.8, 16425.0], [52.9, 16537.0], [53.0, 16629.0], [53.1, 16661.0], [53.2, 16720.0], [53.3, 16780.0], [53.4, 16818.0], [53.5, 16939.0], [53.6, 17012.0], [53.7, 17038.0], [53.8, 17070.0], [53.9, 17205.0], [54.0, 17407.0], [54.1, 17481.0], [54.2, 17562.0], [54.3, 17636.0], [54.4, 17706.0], [54.5, 17970.0], [54.6, 18257.0], [54.7, 18410.0], [54.8, 18465.0], [54.9, 18512.0], [55.0, 18561.0], [55.1, 18586.0], [55.2, 18597.0], [55.3, 18611.0], [55.4, 18635.0], [55.5, 18676.0], [55.6, 18699.0], [55.7, 18733.0], [55.8, 18767.0], [55.9, 18778.0], [56.0, 18799.0], [56.1, 18970.0], [56.2, 19050.0], [56.3, 19088.0], [56.4, 19158.0], [56.5, 19460.0], [56.6, 19515.0], [56.7, 19561.0], [56.8, 19609.0], [56.9, 19701.0], [57.0, 19950.0], [57.1, 20081.0], [57.2, 20535.0], [57.3, 20569.0], [57.4, 20896.0], [57.5, 21053.0], [57.6, 21264.0], [57.7, 21534.0], [57.8, 21671.0], [57.9, 21726.0], [58.0, 21979.0], [58.1, 22145.0], [58.2, 22255.0], [58.3, 22329.0], [58.4, 22587.0], [58.5, 22890.0], [58.6, 22933.0], [58.7, 23168.0], [58.8, 23270.0], [58.9, 23538.0], [59.0, 23803.0], [59.1, 24166.0], [59.2, 24367.0], [59.3, 25364.0], [59.4, 25718.0], [59.5, 26041.0], [59.6, 26123.0], [59.7, 26430.0], [59.8, 26563.0], [59.9, 27126.0], [60.0, 27248.0], [60.1, 27341.0], [60.2, 28074.0], [60.3, 28932.0], [60.4, 29264.0], [60.5, 29559.0], [60.6, 29645.0], [60.7, 30273.0], [60.8, 31003.0], [60.9, 31238.0], [61.0, 31782.0], [61.1, 32086.0], [61.2, 32244.0], [61.3, 32544.0], [61.4, 33079.0], [61.5, 33498.0], [61.6, 33726.0], [61.7, 34187.0], [61.8, 34751.0], [61.9, 35328.0], [62.0, 35416.0], [62.1, 35764.0], [62.2, 36116.0], [62.3, 36332.0], [62.4, 36514.0], [62.5, 36679.0], [62.6, 36753.0], [62.7, 36874.0], [62.8, 37037.0], [62.9, 37166.0], [63.0, 37270.0], [63.1, 37824.0], [63.2, 38019.0], [63.3, 38173.0], [63.4, 38241.0], [63.5, 38570.0], [63.6, 38792.0], [63.7, 39396.0], [63.8, 40432.0], [63.9, 40554.0], [64.0, 40648.0], [64.1, 41190.0], [64.2, 41351.0], [64.3, 41485.0], [64.4, 41568.0], [64.5, 41710.0], [64.6, 42235.0], [64.7, 42435.0], [64.8, 42632.0], [64.9, 42695.0], [65.0, 43273.0], [65.1, 43529.0], [65.2, 43664.0], [65.3, 43729.0], [65.4, 43812.0], [65.5, 44043.0], [65.6, 44149.0], [65.7, 44227.0], [65.8, 44578.0], [65.9, 45106.0], [66.0, 45202.0], [66.1, 45245.0], [66.2, 45296.0], [66.3, 45533.0], [66.4, 45554.0], [66.5, 45776.0], [66.6, 46246.0], [66.7, 46833.0], [66.8, 47103.0], [66.9, 47290.0], [67.0, 47526.0], [67.1, 47690.0], [67.2, 47775.0], [67.3, 48252.0], [67.4, 48349.0], [67.5, 48465.0], [67.6, 48764.0], [67.7, 50150.0], [67.8, 50250.0], [67.9, 50566.0], [68.0, 50718.0], [68.1, 50887.0], [68.2, 50999.0], [68.3, 51304.0], [68.4, 51442.0], [68.5, 51738.0], [68.6, 52073.0], [68.7, 52333.0], [68.8, 52608.0], [68.9, 52972.0], [69.0, 53116.0], [69.1, 53487.0], [69.2, 53608.0], [69.3, 53734.0], [69.4, 54056.0], [69.5, 54370.0], [69.6, 54493.0], [69.7, 54552.0], [69.8, 54643.0], [69.9, 54942.0], [70.0, 55136.0], [70.1, 55206.0], [70.2, 55471.0], [70.3, 55813.0], [70.4, 55924.0], [70.5, 55963.0], [70.6, 56100.0], [70.7, 56484.0], [70.8, 56697.0], [70.9, 57061.0], [71.0, 57726.0], [71.1, 58037.0], [71.2, 58184.0], [71.3, 58254.0], [71.4, 58681.0], [71.5, 58975.0], [71.6, 59274.0], [71.7, 59722.0], [71.8, 60127.0], [71.9, 60197.0], [72.0, 60356.0], [72.1, 60496.0], [72.2, 60727.0], [72.3, 60926.0], [72.4, 61244.0], [72.5, 62169.0], [72.6, 62880.0], [72.7, 63431.0], [72.8, 63869.0], [72.9, 64193.0], [73.0, 65292.0], [73.1, 65516.0], [73.2, 65619.0], [73.3, 65924.0], [73.4, 66129.0], [73.5, 66314.0], [73.6, 66557.0], [73.7, 66688.0], [73.8, 67535.0], [73.9, 67755.0], [74.0, 68114.0], [74.1, 69483.0], [74.2, 70020.0], [74.3, 70478.0], [74.4, 70718.0], [74.5, 71496.0], [74.6, 71952.0], [74.7, 72125.0], [74.8, 72169.0], [74.9, 73044.0], [75.0, 73325.0], [75.1, 73405.0], [75.2, 73455.0], [75.3, 73799.0], [75.4, 74268.0], [75.5, 74546.0], [75.6, 74996.0], [75.7, 75234.0], [75.8, 75384.0], [75.9, 75486.0], [76.0, 75722.0], [76.1, 76121.0], [76.2, 76271.0], [76.3, 76521.0], [76.4, 77001.0], [76.5, 77070.0], [76.6, 77204.0], [76.7, 77376.0], [76.8, 77516.0], [76.9, 78036.0], [77.0, 79183.0], [77.1, 79649.0], [77.2, 80283.0], [77.3, 80471.0], [77.4, 80770.0], [77.5, 80863.0], [77.6, 81277.0], [77.7, 82730.0], [77.8, 85670.0], [77.9, 86625.0], [78.0, 91817.0], [78.1, 97045.0], [78.2, 98090.0], [78.3, 99706.0], [78.4, 99831.0], [78.5, 103300.0], [78.6, 105176.0], [78.7, 105398.0], [78.8, 107114.0], [78.9, 107356.0], [79.0, 107660.0], [79.1, 108164.0], [79.2, 109336.0], [79.3, 109515.0], [79.4, 109629.0], [79.5, 110663.0], [79.6, 111223.0], [79.7, 111387.0], [79.8, 111857.0], [79.9, 112381.0], [80.0, 112531.0], [80.1, 112627.0], [80.2, 113048.0], [80.3, 113314.0], [80.4, 114018.0], [80.5, 114234.0], [80.6, 114473.0], [80.7, 114590.0], [80.8, 115171.0], [80.9, 115354.0], [81.0, 115604.0], [81.1, 115917.0], [81.2, 116118.0], [81.3, 116875.0], [81.4, 117346.0], [81.5, 117597.0], [81.6, 117799.0], [81.7, 117842.0], [81.8, 117926.0], [81.9, 118063.0], [82.0, 118225.0], [82.1, 118403.0], [82.2, 118632.0], [82.3, 119474.0], [82.4, 119736.0], [82.5, 120118.0], [82.6, 120397.0], [82.7, 122166.0], [82.8, 122669.0], [82.9, 123095.0], [83.0, 123338.0], [83.1, 123583.0], [83.2, 123725.0], [83.3, 124106.0], [83.4, 124288.0], [83.5, 124372.0], [83.6, 124462.0], [83.7, 124791.0], [83.8, 125048.0], [83.9, 125173.0], [84.0, 125236.0], [84.1, 125513.0], [84.2, 125695.0], [84.3, 126037.0], [84.4, 126673.0], [84.5, 126874.0], [84.6, 127509.0], [84.7, 127775.0], [84.8, 128094.0], [84.9, 129058.0], [85.0, 129653.0], [85.1, 134055.0], [85.2, 143043.0], [85.3, 144808.0], [85.4, 147297.0], [85.5, 147585.0], [85.6, 148948.0], [85.7, 149432.0], [85.8, 150440.0], [85.9, 151208.0], [86.0, 152168.0], [86.1, 153041.0], [86.2, 153519.0], [86.3, 153754.0], [86.4, 153927.0], [86.5, 154299.0], [86.6, 154752.0], [86.7, 155539.0], [86.8, 155813.0], [86.9, 156260.0], [87.0, 156797.0], [87.1, 157056.0], [87.2, 157316.0], [87.3, 158102.0], [87.4, 158450.0], [87.5, 158551.0], [87.6, 158697.0], [87.7, 158846.0], [87.8, 158935.0], [87.9, 159067.0], [88.0, 159579.0], [88.1, 159668.0], [88.2, 159836.0], [88.3, 160025.0], [88.4, 160236.0], [88.5, 160399.0], [88.6, 160633.0], [88.7, 160968.0], [88.8, 161168.0], [88.9, 161583.0], [89.0, 162028.0], [89.1, 162541.0], [89.2, 163350.0], [89.3, 163780.0], [89.4, 164426.0], [89.5, 164755.0], [89.6, 165216.0], [89.7, 165957.0], [89.8, 166515.0], [89.9, 168144.0], [90.0, 168933.0], [90.1, 169542.0], [90.2, 171197.0], [90.3, 173942.0], [90.4, 175027.0], [90.5, 176080.0], [90.6, 178906.0], [90.7, 179905.0], [90.8, 180157.0], [90.9, 180753.0], [91.0, 181620.0], [91.1, 182218.0], [91.2, 184129.0], [91.3, 185859.0], [91.4, 186478.0], [91.5, 189254.0], [91.6, 190746.0], [91.7, 191173.0], [91.8, 191727.0], [91.9, 192664.0], [92.0, 193443.0], [92.1, 194884.0], [92.2, 195728.0], [92.3, 196204.0], [92.4, 197138.0], [92.5, 197377.0], [92.6, 198095.0], [92.7, 199065.0], [92.8, 199480.0], [92.9, 200055.0], [93.0, 200779.0], [93.1, 201012.0], [93.2, 201716.0], [93.3, 202372.0], [93.4, 203758.0], [93.5, 204189.0], [93.6, 204437.0], [93.7, 205050.0], [93.8, 205149.0], [93.9, 205606.0], [94.0, 205828.0], [94.1, 206030.0], [94.2, 206857.0], [94.3, 207252.0], [94.4, 207420.0], [94.5, 207700.0], [94.6, 208068.0], [94.7, 208353.0], [94.8, 208629.0], [94.9, 209090.0], [95.0, 209732.0], [95.1, 210232.0], [95.2, 210418.0], [95.3, 210872.0], [95.4, 211325.0], [95.5, 211483.0], [95.6, 211687.0], [95.7, 211901.0], [95.8, 212415.0], [95.9, 213234.0], [96.0, 213770.0], [96.1, 213981.0], [96.2, 214434.0], [96.3, 214887.0], [96.4, 215038.0], [96.5, 215272.0], [96.6, 215466.0], [96.7, 215680.0], [96.8, 216339.0], [96.9, 216850.0], [97.0, 217292.0], [97.1, 217943.0], [97.2, 218412.0], [97.3, 218422.0], [97.4, 219240.0], [97.5, 219906.0], [97.6, 220582.0], [97.7, 221545.0], [97.8, 222033.0], [97.9, 225137.0], [98.0, 226776.0], [98.1, 228172.0], [98.2, 232713.0], [98.3, 234171.0], [98.4, 235447.0], [98.5, 237340.0], [98.6, 239187.0], [98.7, 239915.0], [98.8, 241274.0], [98.9, 241830.0], [99.0, 242691.0], [99.1, 243990.0], [99.2, 246152.0], [99.3, 246470.0], [99.4, 247155.0], [99.5, 247338.0], [99.6, 248659.0], [99.7, 251788.0], [99.8, 255481.0], [99.9, 260333.0], [100.0, 265991.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 6858.0, "series": [{"data": [[0.0, 6858.0], [160800.0, 9.0], [186400.0, 3.0], [199200.0, 7.0], [212000.0, 6.0], [237600.0, 1.0], [152100.0, 10.0], [164900.0, 2.0], [190500.0, 2.0], [216100.0, 5.0], [241700.0, 2.0], [69900.0, 2.0], [76300.0, 10.0], [82700.0, 9.0], [114700.0, 5.0], [127500.0, 14.0], [156200.0, 5.0], [169000.0, 4.0], [181800.0, 2.0], [207400.0, 9.0], [100.0, 308.0], [32900.0, 1.0], [36100.0, 7.0], [147500.0, 8.0], [39300.0, 7.0], [160300.0, 21.0], [42500.0, 13.0], [45700.0, 7.0], [198700.0, 6.0], [200.0, 5.0], [52100.0, 6.0], [211500.0, 7.0], [55300.0, 8.0], [58500.0, 1.0], [237100.0, 1.0], [65800.0, 5.0], [72200.0, 8.0], [300.0, 21.0], [78600.0, 2.0], [91400.0, 1.0], [400.0, 9.0], [104200.0, 1.0], [110600.0, 6.0], [117000.0, 3.0], [123400.0, 8.0], [500.0, 6.0], [600.0, 3.0], [164400.0, 9.0], [700.0, 3.0], [202800.0, 5.0], [800.0, 11.0], [215600.0, 8.0], [900.0, 14.0], [241200.0, 7.0], [1000.0, 29.0], [1100.0, 37.0], [1200.0, 35.0], [1300.0, 22.0], [1400.0, 21.0], [1500.0, 41.0], [1600.0, 31.0], [1700.0, 40.0], [1800.0, 106.0], [1900.0, 42.0], [2000.0, 25.0], [2200.0, 27.0], [2400.0, 20.0], [155700.0, 11.0], [2600.0, 63.0], [2800.0, 6.0], [181300.0, 2.0], [3000.0, 6.0], [194100.0, 1.0], [3200.0, 14.0], [206900.0, 2.0], [3600.0, 3.0], [4000.0, 3.0], [68100.0, 8.0], [4800.0, 6.0], [74500.0, 13.0], [80900.0, 6.0], [5200.0, 10.0], [5600.0, 36.0], [6000.0, 2.0], [100100.0, 2.0], [6400.0, 21.0], [6800.0, 9.0], [112900.0, 2.0], [7200.0, 49.0], [7600.0, 28.0], [119300.0, 1.0], [125700.0, 2.0], [8000.0, 20.0], [134200.0, 1.0], [8800.0, 46.0], [9600.0, 14.0], [159800.0, 15.0], [10400.0, 28.0], [11200.0, 23.0], [12000.0, 90.0], [198200.0, 1.0], [12800.0, 21.0], [211000.0, 5.0], [13600.0, 25.0], [223800.0, 4.0], [14400.0, 6.0], [15200.0, 5.0], [16000.0, 32.0], [17600.0, 29.0], [19200.0, 2.0], [20800.0, 4.0], [22400.0, 7.0], [24000.0, 3.0], [25600.0, 9.0], [27200.0, 29.0], [28800.0, 2.0], [30400.0, 2.0], [32000.0, 11.0], [35200.0, 12.0], [38400.0, 3.0], [151100.0, 7.0], [41600.0, 11.0], [163900.0, 1.0], [44800.0, 5.0], [189500.0, 1.0], [48000.0, 3.0], [202300.0, 3.0], [51200.0, 2.0], [54400.0, 24.0], [215100.0, 9.0], [60800.0, 15.0], [70400.0, 17.0], [76800.0, 2.0], [96000.0, 1.0], [108800.0, 1.0], [115200.0, 8.0], [128000.0, 10.0], [153600.0, 11.0], [166400.0, 6.0], [192000.0, 1.0], [204800.0, 6.0], [217600.0, 4.0], [230400.0, 3.0], [243200.0, 3.0], [157700.0, 2.0], [183300.0, 2.0], [196100.0, 5.0], [208900.0, 5.0], [221700.0, 1.0], [234500.0, 3.0], [247300.0, 6.0], [67100.0, 2.0], [73500.0, 2.0], [86300.0, 1.0], [105500.0, 2.0], [111900.0, 7.0], [118300.0, 9.0], [124700.0, 4.0], [149000.0, 13.0], [161800.0, 3.0], [187400.0, 1.0], [34700.0, 9.0], [37900.0, 13.0], [153100.0, 7.0], [41100.0, 5.0], [165900.0, 8.0], [44300.0, 1.0], [47500.0, 6.0], [191500.0, 3.0], [50700.0, 24.0], [204300.0, 8.0], [53900.0, 4.0], [217100.0, 9.0], [57100.0, 1.0], [60300.0, 5.0], [242700.0, 2.0], [63500.0, 2.0], [255500.0, 3.0], [69400.0, 2.0], [75800.0, 2.0], [107800.0, 3.0], [114200.0, 7.0], [157200.0, 3.0], [195600.0, 1.0], [208400.0, 7.0], [221200.0, 7.0], [234000.0, 2.0], [161300.0, 7.0], [174100.0, 1.0], [199700.0, 4.0], [212500.0, 4.0], [238100.0, 6.0], [71700.0, 1.0], [78100.0, 2.0], [103700.0, 1.0], [116500.0, 4.0], [122900.0, 1.0], [129300.0, 8.0], [152600.0, 1.0], [191000.0, 3.0], [203800.0, 7.0], [216600.0, 2.0], [229400.0, 1.0], [242200.0, 1.0], [16900.0, 28.0], [18500.0, 77.0], [20100.0, 3.0], [21700.0, 35.0], [23300.0, 12.0], [24900.0, 1.0], [26500.0, 27.0], [28100.0, 4.0], [29700.0, 4.0], [31300.0, 7.0], [33800.0, 2.0], [143900.0, 1.0], [37000.0, 21.0], [40200.0, 2.0], [156700.0, 5.0], [169500.0, 1.0], [43400.0, 9.0], [46600.0, 8.0], [182300.0, 3.0], [53000.0, 8.0], [207900.0, 16.0], [56200.0, 1.0], [59400.0, 4.0], [246300.0, 8.0], [67600.0, 10.0], [262200.0, 1.0], [74000.0, 2.0], [80400.0, 5.0], [86800.0, 2.0], [99600.0, 12.0], [112400.0, 14.0], [118800.0, 3.0], [125200.0, 22.0], [149600.0, 7.0], [162400.0, 1.0], [175200.0, 1.0], [188000.0, 1.0], [200800.0, 10.0], [213600.0, 2.0], [226400.0, 1.0], [239200.0, 3.0], [153700.0, 10.0], [166500.0, 3.0], [192100.0, 4.0], [204900.0, 8.0], [217700.0, 1.0], [230500.0, 3.0], [243300.0, 2.0], [70700.0, 9.0], [77100.0, 15.0], [109100.0, 10.0], [115500.0, 12.0], [128300.0, 4.0], [157800.0, 2.0], [196200.0, 10.0], [209000.0, 7.0], [221800.0, 3.0], [234600.0, 2.0], [247400.0, 3.0], [33300.0, 9.0], [36500.0, 9.0], [149100.0, 2.0], [39700.0, 1.0], [161900.0, 4.0], [46100.0, 6.0], [187500.0, 2.0], [49300.0, 2.0], [200300.0, 4.0], [52500.0, 7.0], [213100.0, 3.0], [55700.0, 6.0], [225900.0, 1.0], [58900.0, 2.0], [62100.0, 13.0], [65300.0, 15.0], [66600.0, 11.0], [73000.0, 5.0], [79400.0, 10.0], [105000.0, 2.0], [111400.0, 4.0], [117800.0, 38.0], [124200.0, 19.0], [153200.0, 4.0], [166000.0, 4.0], [178800.0, 2.0], [191600.0, 1.0], [204400.0, 2.0], [217200.0, 4.0], [242800.0, 1.0], [255600.0, 2.0], [144500.0, 3.0], [157300.0, 5.0], [170100.0, 1.0], [195700.0, 2.0], [208500.0, 6.0], [221300.0, 3.0], [234100.0, 5.0], [246900.0, 3.0], [68900.0, 4.0], [75300.0, 19.0], [88100.0, 1.0], [107300.0, 5.0], [120100.0, 7.0], [126500.0, 2.0], [8900.0, 27.0], [9700.0, 20.0], [161400.0, 5.0], [10500.0, 27.0], [11300.0, 52.0], [187000.0, 2.0], [12100.0, 20.0], [199800.0, 3.0], [12900.0, 34.0], [212600.0, 4.0], [13700.0, 13.0], [14500.0, 6.0], [15300.0, 8.0], [16100.0, 32.0], [17800.0, 7.0], [19400.0, 19.0], [21000.0, 26.0], [22600.0, 6.0], [24200.0, 10.0], [25800.0, 1.0], [27400.0, 14.0], [29000.0, 6.0], [30600.0, 2.0], [32200.0, 15.0], [139900.0, 2.0], [38800.0, 5.0], [152700.0, 1.0], [42000.0, 2.0], [165500.0, 1.0], [45200.0, 44.0], [48400.0, 16.0], [191100.0, 11.0], [203900.0, 6.0], [51600.0, 11.0], [216700.0, 3.0], [58000.0, 17.0], [61200.0, 6.0], [71200.0, 4.0], [77600.0, 1.0], [84000.0, 1.0], [90400.0, 1.0], [96800.0, 1.0], [109600.0, 16.0], [116000.0, 13.0], [122400.0, 3.0], [155200.0, 3.0], [180800.0, 3.0], [193600.0, 3.0], [206400.0, 1.0], [219200.0, 2.0], [159300.0, 4.0], [197700.0, 6.0], [210500.0, 7.0], [248900.0, 4.0], [67900.0, 4.0], [74300.0, 3.0], [80700.0, 5.0], [87100.0, 1.0], [99900.0, 5.0], [112700.0, 6.0], [119100.0, 2.0], [125500.0, 7.0], [150600.0, 1.0], [163400.0, 1.0], [201800.0, 3.0], [214600.0, 2.0], [35100.0, 4.0], [38300.0, 12.0], [154700.0, 7.0], [41500.0, 28.0], [44700.0, 10.0], [180300.0, 1.0], [47900.0, 7.0], [193100.0, 4.0], [51100.0, 1.0], [205900.0, 3.0], [54300.0, 7.0], [218700.0, 4.0], [60700.0, 9.0], [244300.0, 5.0], [63900.0, 5.0], [70200.0, 2.0], [76600.0, 3.0], [95800.0, 1.0], [108600.0, 1.0], [115000.0, 3.0], [121400.0, 3.0], [127800.0, 2.0], [146000.0, 5.0], [158800.0, 14.0], [197200.0, 9.0], [210000.0, 2.0], [235600.0, 2.0], [248400.0, 1.0], [175700.0, 1.0], [214100.0, 3.0], [226900.0, 2.0], [239700.0, 4.0], [66100.0, 11.0], [72500.0, 1.0], [78900.0, 1.0], [98100.0, 2.0], [117300.0, 4.0], [123700.0, 7.0], [141400.0, 2.0], [154200.0, 3.0], [179800.0, 2.0], [192600.0, 1.0], [205400.0, 5.0], [218200.0, 8.0], [243800.0, 1.0], [17100.0, 13.0], [18700.0, 87.0], [21900.0, 3.0], [23500.0, 9.0], [25100.0, 2.0], [26700.0, 5.0], [29900.0, 1.0], [34200.0, 4.0], [37400.0, 7.0], [40600.0, 15.0], [158300.0, 6.0], [171100.0, 14.0], [43800.0, 18.0], [47000.0, 10.0], [50200.0, 21.0], [209500.0, 2.0], [53400.0, 22.0], [56600.0, 10.0], [222300.0, 1.0], [59800.0, 5.0], [63000.0, 10.0], [74800.0, 2.0], [81200.0, 4.0], [100400.0, 2.0], [106800.0, 2.0], [113200.0, 1.0], [119600.0, 10.0], [126000.0, 5.0], [151200.0, 6.0], [164000.0, 3.0], [215200.0, 9.0], [263500.0, 3.0], [142500.0, 1.0], [155300.0, 5.0], [168100.0, 10.0], [180900.0, 2.0], [193700.0, 2.0], [206500.0, 2.0], [219300.0, 8.0], [232100.0, 1.0], [71500.0, 5.0], [77900.0, 4.0], [97100.0, 10.0], [122700.0, 5.0], [133800.0, 1.0], [159400.0, 1.0], [172200.0, 1.0], [197800.0, 1.0], [236200.0, 2.0], [249000.0, 1.0], [33700.0, 12.0], [36900.0, 11.0], [150700.0, 3.0], [163500.0, 1.0], [43300.0, 5.0], [46500.0, 6.0], [189100.0, 1.0], [201900.0, 2.0], [52900.0, 22.0], [214700.0, 4.0], [56100.0, 9.0], [227500.0, 2.0], [59300.0, 10.0], [67400.0, 2.0], [73800.0, 3.0], [80200.0, 16.0], [86600.0, 10.0], [112200.0, 2.0], [118600.0, 9.0], [125000.0, 17.0], [154800.0, 1.0], [193200.0, 5.0], [206000.0, 13.0], [218800.0, 1.0], [244400.0, 4.0], [257200.0, 4.0], [146100.0, 3.0], [158900.0, 20.0], [171700.0, 3.0], [184500.0, 2.0], [197300.0, 5.0], [210100.0, 2.0], [235700.0, 1.0], [248500.0, 3.0], [4100.0, 6.0], [69700.0, 5.0], [76100.0, 14.0], [4900.0, 20.0], [82500.0, 2.0], [5300.0, 32.0], [5700.0, 22.0], [6100.0, 20.0], [6500.0, 40.0], [6900.0, 24.0], [108100.0, 8.0], [114500.0, 17.0], [7300.0, 44.0], [7700.0, 34.0], [8100.0, 17.0], [8200.0, 17.0], [9000.0, 78.0], [150200.0, 1.0], [9800.0, 63.0], [163000.0, 6.0], [10600.0, 58.0], [175800.0, 3.0], [11400.0, 62.0], [12200.0, 24.0], [13000.0, 28.0], [13800.0, 22.0], [214200.0, 2.0], [227000.0, 1.0], [14600.0, 16.0], [239800.0, 3.0], [15400.0, 21.0], [16200.0, 43.0], [16400.0, 12.0], [18000.0, 11.0], [19600.0, 24.0], [21200.0, 8.0], [22800.0, 9.0], [24400.0, 6.0], [26000.0, 16.0], [29200.0, 9.0], [30800.0, 7.0], [154300.0, 4.0], [39200.0, 7.0], [42400.0, 9.0], [179900.0, 1.0], [45600.0, 2.0], [48800.0, 2.0], [192700.0, 1.0], [52000.0, 19.0], [205500.0, 2.0], [55200.0, 13.0], [218300.0, 3.0], [243900.0, 3.0], [61600.0, 2.0], [64800.0, 5.0], [65600.0, 12.0], [72000.0, 6.0], [91200.0, 1.0], [110400.0, 1.0], [116800.0, 8.0], [123200.0, 6.0], [129600.0, 1.0], [144000.0, 1.0], [156800.0, 4.0], [169600.0, 1.0], [182400.0, 5.0], [195200.0, 3.0], [208000.0, 11.0], [220800.0, 2.0], [246400.0, 7.0], [160900.0, 7.0], [186500.0, 1.0], [199300.0, 5.0], [212100.0, 4.0], [75100.0, 14.0], [107100.0, 14.0], [113500.0, 2.0], [119900.0, 2.0], [126300.0, 5.0], [152200.0, 5.0], [165000.0, 3.0], [190600.0, 3.0], [241800.0, 3.0], [35500.0, 13.0], [38700.0, 12.0], [156300.0, 5.0], [45100.0, 23.0], [181900.0, 3.0], [48300.0, 19.0], [194700.0, 3.0], [51500.0, 4.0], [207500.0, 10.0], [54700.0, 12.0], [57900.0, 6.0], [61100.0, 5.0], [77400.0, 14.0], [103000.0, 2.0], [109400.0, 10.0], [115800.0, 10.0], [128600.0, 2.0], [147600.0, 5.0], [160400.0, 16.0], [173200.0, 2.0], [186000.0, 2.0], [211600.0, 15.0], [250000.0, 1.0], [151700.0, 1.0], [164500.0, 6.0], [177300.0, 1.0], [202900.0, 1.0], [215700.0, 4.0], [241300.0, 8.0], [66900.0, 1.0], [73300.0, 21.0], [79700.0, 3.0], [105300.0, 10.0], [111700.0, 8.0], [118100.0, 8.0], [124500.0, 6.0], [130900.0, 1.0], [143000.0, 2.0], [155800.0, 6.0], [168600.0, 2.0], [194200.0, 1.0], [207000.0, 8.0], [219800.0, 4.0], [17300.0, 10.0], [18900.0, 11.0], [20500.0, 45.0], [22100.0, 8.0], [23700.0, 11.0], [25300.0, 1.0], [28500.0, 1.0], [30100.0, 2.0], [31700.0, 12.0], [34600.0, 2.0], [147100.0, 2.0], [37800.0, 3.0], [159900.0, 10.0], [41000.0, 1.0], [44200.0, 17.0], [172700.0, 1.0], [47400.0, 9.0], [50600.0, 8.0], [198300.0, 5.0], [211100.0, 2.0], [53800.0, 9.0], [57000.0, 14.0], [236700.0, 1.0], [60200.0, 19.0], [63400.0, 4.0], [75600.0, 9.0], [107600.0, 7.0], [114000.0, 12.0], [120400.0, 1.0], [126800.0, 8.0], [165600.0, 6.0], [178400.0, 1.0], [191200.0, 3.0], [204000.0, 1.0], [216800.0, 6.0], [242400.0, 1.0], [144100.0, 1.0], [156900.0, 7.0], [182500.0, 3.0], [195300.0, 3.0], [208100.0, 6.0], [246500.0, 2.0], [65900.0, 14.0], [262600.0, 4.0], [72300.0, 4.0], [78700.0, 2.0], [97900.0, 1.0], [110700.0, 7.0], [117100.0, 6.0], [123500.0, 15.0], [129900.0, 2.0], [161000.0, 7.0], [173800.0, 2.0], [199400.0, 4.0], [212200.0, 2.0], [34100.0, 4.0], [152300.0, 1.0], [37300.0, 8.0], [40500.0, 21.0], [165100.0, 5.0], [43700.0, 29.0], [46900.0, 5.0], [190700.0, 7.0], [50100.0, 15.0], [216300.0, 8.0], [56500.0, 10.0], [59700.0, 4.0], [241900.0, 2.0], [62900.0, 6.0], [254700.0, 1.0], [68200.0, 3.0], [81000.0, 1.0], [106600.0, 6.0], [113000.0, 6.0], [119400.0, 3.0], [125800.0, 9.0], [156400.0, 6.0], [169200.0, 1.0], [182000.0, 3.0], [194800.0, 6.0], [207600.0, 3.0], [220400.0, 7.0], [160500.0, 3.0], [186100.0, 7.0], [198900.0, 2.0], [211700.0, 10.0], [224500.0, 2.0], [237300.0, 4.0], [70500.0, 7.0], [76900.0, 4.0], [83300.0, 2.0], [108900.0, 1.0], [115300.0, 17.0], [128100.0, 5.0], [8300.0, 12.0], [9100.0, 104.0], [151800.0, 1.0], [9900.0, 45.0], [10700.0, 32.0], [164600.0, 7.0], [177400.0, 4.0], [11500.0, 34.0], [190200.0, 1.0], [12300.0, 28.0], [203000.0, 5.0], [13100.0, 4.0], [13900.0, 27.0], [14700.0, 111.0], [241400.0, 6.0], [15500.0, 31.0], [16300.0, 2.0], [16600.0, 47.0], [18200.0, 2.0], [19800.0, 11.0], [21400.0, 17.0], [23000.0, 2.0], [26200.0, 8.0], [29400.0, 5.0], [31000.0, 10.0], [32600.0, 5.0], [33200.0, 4.0], [36400.0, 11.0], [155900.0, 6.0], [42800.0, 3.0], [168700.0, 5.0], [46000.0, 7.0], [181500.0, 4.0], [207100.0, 5.0], [52400.0, 6.0], [219900.0, 8.0], [55600.0, 2.0], [58800.0, 16.0], [232700.0, 4.0], [65200.0, 8.0], [66400.0, 3.0], [79200.0, 4.0], [85600.0, 1.0], [98400.0, 1.0], [104800.0, 1.0], [111200.0, 11.0], [117600.0, 12.0], [124000.0, 10.0], [130400.0, 2.0], [158400.0, 21.0], [171200.0, 3.0], [196800.0, 2.0], [209600.0, 5.0], [235200.0, 1.0], [248000.0, 2.0], [149700.0, 2.0], [162500.0, 8.0], [175300.0, 2.0], [188100.0, 2.0], [200900.0, 8.0], [213700.0, 7.0], [226500.0, 2.0], [239300.0, 2.0], [69500.0, 4.0], [75900.0, 1.0], [82300.0, 1.0], [107900.0, 2.0], [114300.0, 6.0], [127100.0, 1.0], [153800.0, 14.0], [166600.0, 2.0], [179400.0, 1.0], [192200.0, 1.0], [205000.0, 12.0], [230600.0, 1.0], [243400.0, 6.0], [35900.0, 9.0], [157900.0, 3.0], [42300.0, 10.0], [170700.0, 1.0], [45500.0, 40.0], [183500.0, 2.0], [48700.0, 5.0], [196300.0, 4.0], [209100.0, 3.0], [51900.0, 3.0], [55100.0, 26.0], [221900.0, 2.0], [58300.0, 6.0], [234700.0, 1.0], [61500.0, 1.0], [247500.0, 4.0], [64700.0, 1.0], [260300.0, 1.0], [78200.0, 5.0], [103800.0, 1.0], [110200.0, 3.0], [116600.0, 3.0], [123000.0, 7.0], [149200.0, 1.0], [162000.0, 12.0], [200400.0, 6.0], [213200.0, 8.0], [140500.0, 1.0], [153300.0, 2.0], [166100.0, 6.0], [178900.0, 14.0], [191700.0, 3.0], [204500.0, 1.0], [242900.0, 1.0], [67700.0, 7.0], [74100.0, 1.0], [80500.0, 8.0], [99700.0, 17.0], [112500.0, 25.0], [125300.0, 5.0], [144600.0, 4.0], [195800.0, 3.0], [208600.0, 7.0], [221400.0, 4.0], [234200.0, 1.0], [247000.0, 9.0], [263600.0, 2.0], [17500.0, 27.0], [19100.0, 28.0], [22300.0, 24.0], [23900.0, 3.0], [25500.0, 2.0], [27100.0, 12.0], [28700.0, 5.0], [31900.0, 4.0], [35000.0, 2.0], [38200.0, 17.0], [161500.0, 10.0], [41400.0, 21.0], [44600.0, 1.0], [187100.0, 1.0], [51000.0, 15.0], [199900.0, 4.0], [212700.0, 1.0], [54200.0, 2.0], [225500.0, 1.0], [57400.0, 3.0], [60600.0, 9.0], [251100.0, 1.0], [63800.0, 6.0], [70000.0, 9.0], [76400.0, 9.0], [82800.0, 3.0], [114800.0, 1.0], [127600.0, 1.0], [154400.0, 8.0], [180000.0, 7.0], [205600.0, 4.0], [218400.0, 33.0], [244000.0, 1.0], [145700.0, 1.0], [158500.0, 22.0], [171300.0, 1.0], [184100.0, 1.0], [209700.0, 8.0], [222500.0, 2.0], [235300.0, 3.0], [248100.0, 2.0], [66700.0, 2.0], [73100.0, 12.0], [79500.0, 1.0], [105100.0, 8.0], [111500.0, 3.0], [117900.0, 14.0], [124300.0, 25.0], [130700.0, 1.0], [162600.0, 5.0], [175400.0, 2.0], [188200.0, 1.0], [201000.0, 9.0], [213800.0, 14.0], [226600.0, 2.0], [239400.0, 3.0], [34500.0, 4.0], [153900.0, 9.0], [40900.0, 1.0], [166700.0, 3.0], [44100.0, 23.0], [47300.0, 11.0], [192300.0, 8.0], [50500.0, 6.0], [205100.0, 16.0], [53700.0, 8.0], [217900.0, 3.0], [56900.0, 8.0], [230700.0, 4.0], [60100.0, 26.0], [243500.0, 1.0], [75400.0, 16.0], [107400.0, 5.0], [113800.0, 8.0], [120200.0, 11.0], [126600.0, 3.0], [158000.0, 8.0], [209200.0, 3.0], [222000.0, 18.0], [234800.0, 1.0], [2100.0, 16.0], [2300.0, 23.0], [149300.0, 2.0], [2500.0, 53.0], [162100.0, 2.0], [2700.0, 1.0], [174900.0, 6.0], [2900.0, 1.0], [187700.0, 1.0], [3100.0, 4.0], [3500.0, 1.0], [3700.0, 4.0], [238900.0, 1.0], [251700.0, 10.0], [71300.0, 4.0], [77700.0, 1.0], [5000.0, 13.0], [5400.0, 6.0], [5800.0, 41.0], [90500.0, 1.0], [96900.0, 9.0], [6200.0, 15.0], [6600.0, 53.0], [103300.0, 2.0], [109700.0, 4.0], [7000.0, 35.0], [7400.0, 43.0], [116100.0, 6.0], [122500.0, 2.0], [7800.0, 21.0], [8400.0, 10.0], [9200.0, 45.0], [153400.0, 2.0], [10000.0, 34.0], [166200.0, 1.0], [10800.0, 29.0], [179000.0, 6.0], [11600.0, 111.0], [191800.0, 1.0], [12400.0, 38.0], [13200.0, 15.0], [217400.0, 10.0], [14000.0, 23.0], [14800.0, 61.0], [230200.0, 1.0], [15600.0, 6.0], [16800.0, 19.0], [18400.0, 41.0], [20000.0, 19.0], [21600.0, 19.0], [23200.0, 20.0], [26400.0, 7.0], [28000.0, 4.0], [29600.0, 24.0], [31200.0, 5.0], [33600.0, 11.0], [36800.0, 16.0], [144700.0, 1.0], [40000.0, 1.0], [43200.0, 13.0], [46400.0, 2.0], [195900.0, 5.0], [49600.0, 1.0], [52800.0, 1.0], [208700.0, 3.0], [56000.0, 13.0], [221500.0, 6.0], [59200.0, 3.0], [234300.0, 2.0], [62400.0, 1.0], [247100.0, 9.0], [73600.0, 2.0], [80000.0, 3.0], [86400.0, 2.0], [112000.0, 3.0], [118400.0, 19.0], [124800.0, 6.0], [134400.0, 1.0], [147200.0, 3.0], [160000.0, 7.0], [185600.0, 3.0], [211200.0, 6.0], [189700.0, 1.0], [202500.0, 1.0], [215300.0, 12.0], [228100.0, 2.0], [240900.0, 2.0], [70300.0, 3.0], [76700.0, 8.0], [89500.0, 2.0], [95900.0, 2.0], [108700.0, 1.0], [115100.0, 4.0], [121500.0, 3.0], [127900.0, 4.0], [155400.0, 7.0], [168200.0, 1.0], [219400.0, 5.0], [245000.0, 1.0], [33100.0, 3.0], [133900.0, 5.0], [36300.0, 14.0], [159500.0, 9.0], [42700.0, 6.0], [172300.0, 1.0], [45900.0, 1.0], [197900.0, 1.0], [52300.0, 11.0], [223500.0, 1.0], [55500.0, 5.0], [58700.0, 4.0], [236300.0, 9.0], [61900.0, 3.0], [249100.0, 1.0], [65100.0, 2.0], [66200.0, 12.0], [79000.0, 1.0], [85400.0, 2.0], [91800.0, 1.0], [98200.0, 1.0], [104600.0, 2.0], [111000.0, 4.0], [117400.0, 9.0], [123800.0, 4.0], [150800.0, 1.0], [163600.0, 6.0], [189200.0, 7.0], [202000.0, 8.0], [214800.0, 6.0], [227600.0, 5.0], [262700.0, 3.0], [154900.0, 1.0], [167700.0, 1.0], [193300.0, 6.0], [206100.0, 2.0], [218900.0, 1.0], [244500.0, 1.0], [257300.0, 2.0], [74900.0, 10.0], [81300.0, 6.0], [106900.0, 2.0], [113300.0, 3.0], [119700.0, 14.0], [126100.0, 6.0], [146200.0, 2.0], [159000.0, 15.0], [197400.0, 5.0], [210200.0, 7.0], [248600.0, 4.0], [17700.0, 2.0], [19300.0, 6.0], [20900.0, 4.0], [22500.0, 4.0], [24100.0, 11.0], [25700.0, 20.0], [27300.0, 11.0], [28900.0, 6.0], [30500.0, 2.0], [32100.0, 13.0], [35400.0, 12.0], [38600.0, 5.0], [150300.0, 1.0], [163100.0, 4.0], [41800.0, 2.0], [45000.0, 3.0], [175900.0, 3.0], [48200.0, 21.0], [188700.0, 1.0], [201500.0, 3.0], [51400.0, 11.0], [54600.0, 17.0], [214300.0, 2.0], [227100.0, 1.0], [57800.0, 5.0], [61000.0, 10.0], [239900.0, 1.0], [64200.0, 2.0], [70800.0, 5.0], [77200.0, 13.0], [109200.0, 1.0], [115600.0, 2.0], [128400.0, 3.0], [156000.0, 3.0], [168800.0, 1.0], [181600.0, 5.0], [194400.0, 1.0], [207200.0, 9.0], [220000.0, 2.0], [232800.0, 9.0], [134500.0, 1.0], [147300.0, 7.0], [160100.0, 12.0], [185700.0, 3.0], [211300.0, 9.0], [67500.0, 8.0], [73900.0, 11.0], [80300.0, 10.0], [86700.0, 1.0], [99500.0, 1.0], [105900.0, 1.0], [112300.0, 5.0], [118700.0, 3.0], [125100.0, 18.0], [215400.0, 11.0], [241000.0, 5.0], [142700.0, 3.0], [38100.0, 20.0], [155500.0, 6.0], [41300.0, 8.0], [44500.0, 8.0], [181100.0, 3.0], [47700.0, 20.0], [193900.0, 2.0], [50900.0, 21.0], [206700.0, 6.0], [54100.0, 10.0], [57300.0, 8.0], [60500.0, 8.0], [245100.0, 1.0], [63700.0, 6.0], [69800.0, 1.0], [76200.0, 11.0], [82600.0, 3.0], [108200.0, 2.0], [114600.0, 3.0], [127400.0, 7.0], [134000.0, 11.0], [159600.0, 19.0], [198000.0, 2.0], [210800.0, 3.0], [150900.0, 2.0], [163700.0, 9.0], [189300.0, 3.0], [202100.0, 2.0], [214900.0, 14.0], [227700.0, 4.0], [65700.0, 3.0], [72100.0, 31.0], [78500.0, 3.0], [91300.0, 1.0], [97700.0, 1.0], [104100.0, 2.0], [110500.0, 1.0], [116900.0, 6.0], [123300.0, 4.0], [8500.0, 18.0], [9300.0, 11.0], [10100.0, 58.0], [167800.0, 3.0], [10900.0, 13.0], [11700.0, 37.0], [180600.0, 1.0], [193400.0, 5.0], [12500.0, 54.0], [13300.0, 16.0], [206200.0, 4.0], [219000.0, 1.0], [14100.0, 25.0], [231800.0, 2.0], [14900.0, 31.0], [15700.0, 8.0], [17000.0, 55.0], [18600.0, 82.0], [23400.0, 1.0], [25000.0, 2.0], [26600.0, 1.0], [29800.0, 1.0], [31400.0, 4.0], [34000.0, 8.0], [37200.0, 12.0], [40400.0, 18.0], [159100.0, 4.0], [43600.0, 19.0], [46800.0, 6.0], [184700.0, 3.0], [197500.0, 2.0], [210300.0, 7.0], [56400.0, 13.0], [59600.0, 1.0], [62800.0, 15.0], [261500.0, 1.0], [68000.0, 11.0], [74400.0, 2.0], [80800.0, 33.0], [100000.0, 2.0], [112800.0, 3.0], [119200.0, 2.0], [125600.0, 17.0], [161600.0, 4.0], [200000.0, 4.0], [212800.0, 1.0], [225600.0, 1.0], [251200.0, 6.0], [140100.0, 2.0], [165700.0, 7.0], [191300.0, 2.0], [204100.0, 7.0], [216900.0, 2.0], [242500.0, 1.0], [77500.0, 3.0], [96700.0, 1.0], [103100.0, 1.0], [109500.0, 15.0], [115900.0, 12.0], [122300.0, 6.0], [128700.0, 3.0], [144200.0, 5.0], [157000.0, 22.0], [169800.0, 3.0], [195400.0, 2.0], [208200.0, 7.0], [221000.0, 2.0], [233800.0, 1.0], [246600.0, 1.0], [259400.0, 1.0], [33500.0, 5.0], [36700.0, 27.0], [148300.0, 11.0], [161100.0, 16.0], [43100.0, 1.0], [173900.0, 5.0], [46300.0, 1.0], [49500.0, 5.0], [199500.0, 3.0], [52700.0, 2.0], [55900.0, 33.0], [225100.0, 3.0], [59100.0, 14.0], [237900.0, 1.0], [65500.0, 21.0], [67000.0, 2.0], [73400.0, 33.0], [79800.0, 4.0], [86200.0, 1.0], [105400.0, 3.0], [111800.0, 8.0], [118200.0, 12.0], [124600.0, 6.0], [152400.0, 3.0], [165200.0, 1.0], [190800.0, 7.0], [203600.0, 2.0], [216400.0, 7.0], [242000.0, 2.0], [254800.0, 4.0], [265900.0, 7.0], [156500.0, 3.0], [169300.0, 7.0], [182100.0, 5.0], [194900.0, 6.0], [207700.0, 3.0], [220500.0, 5.0], [246100.0, 4.0], [258900.0, 3.0], [69300.0, 1.0], [75700.0, 16.0], [107700.0, 2.0], [114100.0, 7.0], [126900.0, 5.0], [160600.0, 4.0], [186200.0, 6.0], [199000.0, 4.0], [211800.0, 10.0], [224600.0, 1.0], [237400.0, 1.0], [17900.0, 18.0], [19500.0, 44.0], [21100.0, 6.0], [22700.0, 9.0], [24300.0, 11.0], [25900.0, 6.0], [29100.0, 3.0], [30700.0, 1.0], [32300.0, 1.0], [35800.0, 12.0], [151900.0, 3.0], [39000.0, 1.0], [42200.0, 10.0], [164700.0, 9.0], [45400.0, 5.0], [48600.0, 11.0], [203100.0, 2.0], [51800.0, 1.0], [55000.0, 13.0], [215900.0, 2.0], [58200.0, 23.0], [241500.0, 3.0], [78000.0, 3.0], [97200.0, 3.0], [122800.0, 2.0], [129200.0, 1.0], [144800.0, 1.0], [157600.0, 1.0], [196000.0, 5.0], [208800.0, 5.0], [234400.0, 2.0], [247200.0, 13.0], [148900.0, 4.0], [187300.0, 1.0], [200100.0, 2.0], [251300.0, 2.0], [74700.0, 5.0], [100300.0, 2.0], [106700.0, 1.0], [113100.0, 15.0], [119500.0, 3.0], [125900.0, 8.0], [140200.0, 1.0], [153000.0, 8.0], [165800.0, 3.0], [178600.0, 1.0], [191400.0, 4.0], [204200.0, 10.0], [217000.0, 3.0], [242600.0, 5.0], [255400.0, 6.0], [131500.0, 1.0], [35300.0, 20.0], [144300.0, 4.0], [38500.0, 10.0], [157100.0, 3.0], [41700.0, 6.0], [44900.0, 1.0], [182700.0, 2.0], [48100.0, 3.0], [51300.0, 15.0], [208300.0, 6.0], [54500.0, 28.0], [57700.0, 4.0], [60900.0, 7.0], [246700.0, 1.0], [64100.0, 18.0], [70600.0, 11.0], [77000.0, 28.0], [83400.0, 5.0], [109000.0, 2.0], [115400.0, 4.0], [148400.0, 2.0], [161200.0, 1.0], [174000.0, 5.0], [186800.0, 1.0], [199600.0, 3.0], [212400.0, 4.0], [225200.0, 4.0], [238000.0, 3.0], [152500.0, 6.0], [190900.0, 6.0], [203700.0, 5.0], [216500.0, 4.0], [242100.0, 7.0], [254900.0, 1.0], [4300.0, 2.0], [66500.0, 22.0], [4700.0, 6.0], [5100.0, 54.0], [79300.0, 4.0], [5500.0, 5.0], [5900.0, 60.0], [6300.0, 20.0], [6700.0, 14.0], [7100.0, 51.0], [111300.0, 15.0], [117700.0, 9.0], [7500.0, 70.0], [7900.0, 29.0], [124100.0, 5.0], [8600.0, 25.0], [9400.0, 8.0], [10200.0, 14.0], [156600.0, 4.0], [169400.0, 2.0], [11000.0, 23.0], [182200.0, 6.0], [11800.0, 35.0], [195000.0, 2.0], [12600.0, 57.0], [13400.0, 16.0], [220600.0, 2.0], [14200.0, 45.0], [15000.0, 26.0], [15800.0, 22.0], [246200.0, 5.0], [17200.0, 9.0], [18800.0, 18.0], [20400.0, 3.0], [22000.0, 19.0], [23600.0, 5.0], [25200.0, 2.0], [26800.0, 1.0], [28400.0, 1.0], [31600.0, 1.0], [34400.0, 1.0], [160700.0, 5.0], [40800.0, 2.0], [44000.0, 19.0], [186300.0, 4.0], [47200.0, 8.0], [50400.0, 2.0], [199100.0, 5.0], [211900.0, 9.0], [53600.0, 21.0], [56800.0, 1.0], [224700.0, 1.0], [237500.0, 3.0], [60000.0, 7.0], [68800.0, 4.0], [75200.0, 16.0], [88000.0, 1.0], [107200.0, 7.0], [113600.0, 1.0], [120000.0, 3.0], [150400.0, 3.0], [163200.0, 1.0], [176000.0, 6.0], [214400.0, 6.0], [240000.0, 1.0], [154500.0, 1.0], [180100.0, 19.0], [192900.0, 1.0], [205700.0, 16.0], [218500.0, 1.0], [231300.0, 1.0], [71900.0, 27.0], [78300.0, 1.0], [91100.0, 3.0], [103900.0, 3.0], [110300.0, 3.0], [116700.0, 1.0], [123100.0, 12.0], [129500.0, 3.0], [145800.0, 3.0], [158600.0, 11.0], [184200.0, 2.0], [197000.0, 2.0], [209800.0, 4.0], [235400.0, 2.0], [248200.0, 1.0], [33900.0, 1.0], [37100.0, 23.0], [40300.0, 4.0], [43500.0, 13.0], [175500.0, 1.0], [46700.0, 2.0], [201100.0, 5.0], [49900.0, 1.0], [53100.0, 3.0], [213900.0, 8.0], [56300.0, 1.0], [226700.0, 6.0], [59500.0, 4.0], [62700.0, 1.0], [67800.0, 4.0], [74200.0, 13.0], [80600.0, 8.0], [99800.0, 12.0], [112600.0, 13.0], [119000.0, 1.0], [125400.0, 8.0], [154000.0, 6.0], [166800.0, 6.0], [192400.0, 1.0], [205200.0, 6.0], [218000.0, 3.0], [256400.0, 1.0], [158100.0, 6.0], [209300.0, 5.0], [234900.0, 1.0], [70100.0, 1.0], [76500.0, 5.0], [114900.0, 5.0], [127700.0, 17.0], [149400.0, 3.0], [162200.0, 4.0], [175000.0, 12.0], [187800.0, 1.0], [200600.0, 3.0], [213400.0, 1.0], [226200.0, 2.0], [239000.0, 1.0], [251800.0, 8.0], [16500.0, 19.0], [18100.0, 4.0], [19700.0, 9.0], [22900.0, 30.0], [24500.0, 4.0], [26100.0, 17.0], [29300.0, 8.0], [30900.0, 4.0], [32500.0, 25.0], [33000.0, 4.0], [36200.0, 10.0], [153500.0, 5.0], [39400.0, 6.0], [42600.0, 31.0], [49000.0, 1.0], [204700.0, 3.0], [52200.0, 5.0], [217500.0, 4.0], [55400.0, 4.0], [58600.0, 8.0], [243100.0, 3.0], [61800.0, 2.0], [65000.0, 2.0], [66000.0, 8.0], [98000.0, 3.0], [110800.0, 1.0], [117200.0, 3.0], [123600.0, 16.0], [159200.0, 6.0], [184800.0, 3.0], [197600.0, 4.0], [210400.0, 21.0], [163300.0, 15.0], [176100.0, 6.0], [201700.0, 3.0], [214500.0, 4.0], [240100.0, 4.0], [75500.0, 9.0], [107500.0, 11.0], [113900.0, 6.0], [120300.0, 5.0], [126700.0, 14.0], [154600.0, 3.0], [180200.0, 11.0], [193000.0, 1.0], [205800.0, 10.0], [218600.0, 4.0], [244200.0, 6.0], [133100.0, 1.0], [35700.0, 2.0], [145900.0, 3.0], [158700.0, 18.0], [42100.0, 8.0], [45300.0, 12.0], [184300.0, 4.0], [48500.0, 4.0], [197100.0, 14.0], [51700.0, 10.0], [209900.0, 5.0], [54900.0, 4.0], [58100.0, 18.0], [235500.0, 2.0], [248300.0, 1.0], [71400.0, 1.0], [77800.0, 13.0], [90600.0, 1.0], [97000.0, 10.0], [103400.0, 2.0], [116200.0, 3.0], [122600.0, 10.0], [129000.0, 13.0], [188400.0, 1.0], [201200.0, 7.0], [214000.0, 13.0], [226800.0, 2.0], [239600.0, 6.0], [154100.0, 9.0], [192500.0, 3.0], [205300.0, 5.0], [218100.0, 4.0], [230900.0, 2.0], [67300.0, 7.0], [73700.0, 7.0], [80100.0, 2.0], [86500.0, 12.0], [112100.0, 2.0], [118500.0, 3.0], [124900.0, 8.0], [8700.0, 43.0], [9500.0, 1.0], [10300.0, 9.0], [171000.0, 3.0], [11100.0, 42.0], [11900.0, 33.0], [12700.0, 31.0], [209400.0, 1.0], [13500.0, 12.0], [14300.0, 14.0], [15100.0, 11.0], [15900.0, 13.0], [17400.0, 33.0], [19000.0, 40.0], [20600.0, 9.0], [22200.0, 24.0], [23800.0, 9.0], [25400.0, 3.0], [28600.0, 6.0], [30200.0, 3.0], [31800.0, 4.0], [38000.0, 16.0], [149500.0, 7.0], [162300.0, 2.0], [41200.0, 14.0], [44400.0, 2.0], [47600.0, 18.0], [50800.0, 11.0], [200700.0, 6.0], [54000.0, 12.0], [213500.0, 10.0], [57200.0, 2.0], [60400.0, 18.0], [239100.0, 2.0], [251900.0, 1.0], [63600.0, 5.0], [69600.0, 2.0], [76000.0, 2.0], [95200.0, 1.0], [108000.0, 4.0], [114400.0, 20.0], [120800.0, 7.0], [127200.0, 3.0], [152000.0, 5.0], [164800.0, 4.0], [177600.0, 1.0], [203200.0, 3.0], [216000.0, 3.0], [241600.0, 1.0], [156100.0, 5.0], [168900.0, 13.0], [181700.0, 4.0], [194500.0, 1.0], [207300.0, 16.0], [220100.0, 2.0], [232900.0, 5.0], [66300.0, 10.0], [79100.0, 3.0], [98300.0, 1.0], [111100.0, 3.0], [117500.0, 11.0], [123900.0, 2.0], [147400.0, 9.0], [160200.0, 8.0], [173000.0, 2.0], [185800.0, 1.0], [198600.0, 2.0], [211400.0, 15.0], [237000.0, 1.0], [34300.0, 1.0], [37500.0, 1.0], [40700.0, 11.0], [164300.0, 7.0], [43900.0, 5.0], [47100.0, 18.0], [50300.0, 5.0], [53500.0, 14.0], [215500.0, 11.0], [56700.0, 5.0], [59900.0, 3.0], [241100.0, 3.0], [63100.0, 3.0], [75000.0, 1.0], [81400.0, 6.0], [107000.0, 1.0], [113400.0, 1.0], [119800.0, 9.0], [126200.0, 3.0], [155600.0, 6.0], [206800.0, 3.0], [219600.0, 2.0], [134100.0, 1.0], [159700.0, 12.0], [172500.0, 3.0], [198100.0, 4.0], [210900.0, 7.0], [223700.0, 1.0], [77300.0, 17.0], [109300.0, 11.0], [115700.0, 5.0], [122100.0, 16.0], [151000.0, 3.0], [163800.0, 2.0], [189400.0, 2.0], [202200.0, 1.0], [215000.0, 15.0], [227800.0, 3.0], [16700.0, 45.0], [18300.0, 16.0], [19900.0, 7.0], [21500.0, 12.0], [23100.0, 15.0], [26300.0, 3.0], [29500.0, 18.0], [31100.0, 9.0], [33400.0, 6.0], [36600.0, 17.0], [43000.0, 1.0], [167900.0, 1.0], [46200.0, 6.0], [180700.0, 9.0], [193500.0, 4.0], [49400.0, 2.0], [52600.0, 12.0], [206300.0, 3.0], [219100.0, 1.0], [55800.0, 25.0], [59000.0, 6.0], [231900.0, 1.0], [62200.0, 3.0], [65400.0, 4.0], [66800.0, 4.0], [73200.0, 7.0], [79600.0, 4.0], [105200.0, 9.0], [111600.0, 1.0], [118000.0, 25.0], [124400.0, 24.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 265900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 181.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12620.0, "series": [{"data": [[0.0, 7201.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 181.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 12620.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1598.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 238.51705756929627, "minX": 1.68694272E12, "maxY": 1200.0, "series": [{"data": [[1.68694338E12, 1135.4573643410852], [1.68694272E12, 1200.0], [1.68694368E12, 238.51705756929627], [1.68694278E12, 1200.0], [1.68694308E12, 1200.0], [1.68694314E12, 1194.6857142857134], [1.68694344E12, 1089.4767441860477], [1.6869435E12, 1001.9755351681961], [1.68694284E12, 1200.0], [1.6869429E12, 1200.0], [1.6869432E12, 1180.1553610503258], [1.68694326E12, 1171.071345029239], [1.68694356E12, 847.3594909862148], [1.68694362E12, 600.7331288343556], [1.68694296E12, 1200.0], [1.68694302E12, 1200.0], [1.68694332E12, 1146.5253207292346]], "isOverall": false, "label": "RestApi", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68694368E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 67.0, "minX": 1.0, "maxY": 229910.54545454547, "series": [{"data": [[2.0, 80.0], [3.0, 73.0], [4.0, 60676.5], [5.0, 76.0], [6.0, 75.0], [7.0, 116.0], [8.0, 75.0], [9.0, 69.0], [10.0, 73.0], [11.0, 104.0], [12.0, 40420.5], [13.0, 69.0], [14.0, 78.0], [16.0, 72.5], [17.0, 75.0], [18.0, 74.0], [19.0, 53900.0], [20.0, 72.0], [21.0, 77446.0], [22.0, 132.0], [23.0, 120.0], [24.0, 128.0], [25.0, 116.0], [27.0, 124.5], [28.0, 138.0], [30.0, 140.0], [31.0, 88294.61538461539], [33.0, 53812.4], [35.0, 70.0], [34.0, 93435.25], [37.0, 40327.0], [36.0, 69.0], [39.0, 40323.0], [38.0, 52092.66666666667], [41.0, 40307.5], [40.0, 68.0], [43.0, 70.0], [42.0, 68.0], [45.0, 49156.5], [44.0, 69.0], [47.0, 78715.0], [46.0, 69.0], [49.0, 75.0], [48.0, 56059.5], [51.0, 53765.0], [50.0, 62677.33333333333], [53.0, 40272.5], [52.0, 69.0], [55.0, 66965.0], [54.0, 74.0], [57.0, 69.0], [56.0, 73908.0], [59.0, 52635.0], [58.0, 69.0], [61.0, 71.0], [60.0, 49110.0], [63.0, 40253.0], [62.0, 75.0], [67.0, 69.0], [66.0, 77685.5], [65.0, 72.0], [64.0, 60191.0], [71.0, 68.0], [70.0, 87166.75], [69.0, 72.0], [68.0, 69.0], [75.0, 68.0], [74.0, 75929.0], [73.0, 71.0], [72.0, 69.0], [79.0, 68.0], [78.0, 70.0], [77.0, 90897.75], [76.0, 69.0], [83.0, 84660.0], [82.0, 55979.5], [81.0, 72.0], [80.0, 91622.6], [87.0, 79917.25], [86.0, 81619.75], [85.0, 74.0], [84.0, 72337.66666666666], [91.0, 75.0], [90.0, 73.0], [89.0, 68434.33333333334], [88.0, 74.0], [95.0, 70.0], [94.0, 57044.0], [93.0, 69.0], [92.0, 53654.0], [99.0, 68.0], [98.0, 74.0], [97.0, 37677.0], [96.0, 91438.5], [103.0, 75.0], [102.0, 69.0], [101.0, 69.0], [100.0, 76.0], [107.0, 71480.66666666666], [106.0, 25133.0], [104.0, 68.0], [111.0, 60073.0], [110.0, 97414.0], [109.0, 74.0], [108.0, 69.0], [115.0, 70.0], [114.0, 53601.5], [113.0, 94341.8], [112.0, 90747.25], [119.0, 96583.4], [118.0, 76473.33333333334], [117.0, 70.0], [116.0, 89029.75], [123.0, 70.0], [122.0, 56975.0], [121.0, 75.0], [120.0, 70.0], [127.0, 109481.83333333334], [126.0, 62235.0], [125.0, 75.0], [124.0, 71.0], [135.0, 74.0], [134.0, 71.0], [133.0, 91802.0], [132.0, 78.0], [131.0, 63898.66666666667], [130.0, 77155.33333333334], [129.0, 71.0], [128.0, 69.0], [143.0, 78.0], [142.0, 73.0], [141.0, 81591.0], [140.0, 73.0], [139.0, 72.0], [138.0, 72.0], [137.0, 74.0], [136.0, 103467.0], [151.0, 91253.0], [150.0, 74.5], [148.0, 55770.0], [147.0, 1075.0], [146.0, 72.0], [145.0, 90260.2], [144.0, 73.0], [159.0, 90710.33333333334], [158.0, 82.0], [157.0, 77061.33333333334], [156.0, 96416.33333333334], [155.0, 77018.0], [154.0, 94133.25], [153.0, 62149.0], [152.0, 105922.0], [167.0, 56778.0], [166.0, 76.0], [165.0, 131162.66666666666], [164.0, 80.0], [163.0, 1080.0], [162.0, 84.0], [161.0, 56829.0], [160.0, 76.0], [175.0, 91120.0], [174.0, 75.0], [173.0, 74.0], [172.0, 79.0], [171.0, 83.0], [170.0, 74.0], [169.0, 139158.0], [168.0, 76.0], [183.0, 107344.5], [182.0, 121895.5], [181.0, 74.0], [180.0, 74.0], [179.0, 72.0], [178.0, 91107.0], [177.0, 80.0], [176.0, 80796.75], [191.0, 72.0], [190.0, 75.0], [189.0, 74.0], [188.0, 73.0], [187.0, 98775.83333333333], [186.0, 76.0], [185.0, 98481.66666666666], [184.0, 72.0], [199.0, 72.0], [198.0, 101943.66666666666], [197.0, 111.0], [196.0, 74.0], [195.0, 81342.0], [194.0, 73.0], [193.0, 81350.5], [192.0, 77.0], [207.0, 78.5], [205.0, 72.0], [204.0, 76.0], [203.0, 78694.5], [202.0, 132015.0], [201.0, 124104.2], [200.0, 74.0], [214.0, 112698.5], [213.0, 78659.5], [212.0, 73.0], [211.0, 72.0], [210.0, 72.0], [209.0, 71.0], [208.0, 90969.5], [223.0, 80.0], [222.0, 80.0], [221.0, 67733.75], [219.0, 104905.0], [218.0, 76.0], [217.0, 76.0], [216.0, 121459.42857142858], [231.0, 81.0], [230.0, 141927.3333333333], [229.0, 118036.25], [228.0, 79.0], [227.0, 75.0], [226.0, 72.0], [225.0, 75.0], [224.0, 74.0], [239.0, 128.0], [238.0, 73.0], [237.0, 81133.0], [236.0, 112303.0], [235.0, 76.0], [234.0, 127151.0], [233.0, 90847.5], [232.0, 76.0], [247.0, 77.5], [245.0, 5089.0], [244.0, 56471.5], [243.0, 71.0], [242.0, 95750.5], [241.0, 111146.25], [240.0, 70.0], [255.0, 123763.33333333334], [254.0, 131030.0], [253.0, 94.0], [252.0, 118767.75], [251.0, 82.0], [250.0, 83.0], [249.0, 133665.6666666667], [248.0, 39666.0], [270.0, 95417.0], [271.0, 147536.5], [269.0, 104527.0], [268.0, 116.0], [267.0, 105.0], [266.0, 154797.14285714287], [265.0, 95619.0], [264.0, 170.0], [263.0, 177.0], [257.0, 96.0], [256.0, 162849.66666666666], [259.0, 102.0], [258.0, 90724.5], [262.0, 172791.0], [261.0, 36959.5], [260.0, 81017.5], [285.0, 71.0], [286.0, 72.0], [284.0, 77.0], [275.0, 104.0], [274.0, 161300.5], [273.0, 85.0], [272.0, 81.0], [283.0, 74.0], [282.0, 70.0], [281.0, 69.0], [280.0, 88128.5], [279.0, 74.0], [278.0, 70.0], [277.0, 69.0], [276.0, 93091.0], [302.0, 142154.0], [303.0, 92483.0], [301.0, 87929.5], [300.0, 87947.5], [299.0, 126600.33333333334], [298.0, 120610.33333333334], [297.0, 102005.5], [296.0, 117329.33333333334], [295.0, 126710.66666666666], [289.0, 117439.66666666666], [288.0, 70.5], [291.0, 160998.63636363635], [290.0, 93088.5], [294.0, 128.0], [293.0, 144.0], [292.0, 120.0], [318.0, 69.0], [319.0, 71.0], [317.0, 72.0], [316.0, 157221.2], [315.0, 103074.5], [314.0, 124788.0], [312.0, 92206.0], [311.0, 68.0], [305.0, 104540.0], [304.0, 73.0], [307.0, 104522.5], [306.0, 71.0], [310.0, 69.0], [309.0, 71.0], [308.0, 138395.0], [334.0, 67.0], [335.0, 70.0], [333.0, 73.0], [332.0, 71.0], [331.0, 70.0], [330.0, 133331.6666666667], [329.0, 70.0], [328.0, 91041.5], [327.0, 182350.33333333334], [321.0, 81.0], [320.0, 77.0], [323.0, 148480.6666666667], [322.0, 92102.0], [326.0, 85.0], [325.0, 155109.5], [324.0, 80.0], [350.0, 149057.6], [351.0, 96794.5], [349.0, 99801.0], [348.0, 173846.8333333333], [347.0, 137.0], [346.0, 90810.0], [345.0, 69.0], [344.0, 70.0], [343.0, 75.0], [337.0, 90906.5], [336.0, 127226.0], [339.0, 68.0], [338.0, 145348.25], [342.0, 90848.5], [341.0, 90833.5], [340.0, 121124.33333333334], [366.0, 110833.0], [367.0, 86.0], [365.0, 78.0], [364.0, 76.0], [363.0, 82.0], [362.0, 76.0], [361.0, 98034.5], [360.0, 129792.0], [359.0, 70.0], [353.0, 96760.0], [352.0, 69.0], [355.0, 96757.0], [354.0, 70.0], [358.0, 155243.0], [357.0, 68.0], [356.0, 76.0], [382.0, 109199.5], [383.0, 76.0], [381.0, 77.0], [380.0, 152985.0], [379.0, 71.0], [378.0, 71.0], [377.0, 69.0], [376.0, 93916.0], [375.0, 93964.5], [369.0, 83.0], [368.0, 84.0], [371.0, 110811.0], [370.0, 168387.25], [374.0, 175917.40000000002], [373.0, 79.0], [372.0, 83.0], [398.0, 124213.66666666666], [399.0, 69.0], [397.0, 149065.2], [396.0, 76.0], [395.0, 77.0], [394.0, 93222.0], [393.0, 77.0], [392.0, 70.0], [391.0, 124305.33333333334], [385.0, 106060.5], [384.0, 76.0], [387.0, 70.0], [386.0, 153056.57142857142], [390.0, 93275.5], [389.0, 76.0], [388.0, 93286.5], [414.0, 154333.25], [415.0, 70.0], [413.0, 102934.0], [412.0, 75.0], [411.0, 75.0], [410.0, 102967.0], [409.0, 74.0], [408.0, 96568.0], [407.0, 159971.0], [401.0, 72.0], [400.0, 70.0], [403.0, 71.0], [402.0, 74.0], [406.0, 86.0], [405.0, 105950.0], [404.0, 159606.42857142858], [430.0, 69.0], [431.0, 71.0], [429.0, 76.0], [428.0, 115422.50000000001], [426.0, 159029.25], [425.0, 139091.6666666667], [424.0, 90.0], [423.0, 105940.0], [416.0, 73.0], [419.0, 78.0], [418.0, 68614.0], [422.0, 86.0], [421.0, 143710.6666666667], [420.0, 165917.0], [446.0, 186514.0], [447.0, 199493.58333333334], [445.0, 71.0], [444.0, 70.0], [443.0, 76.0], [442.0, 71.0], [441.0, 78.0], [440.0, 69.0], [439.0, 74.0], [433.0, 115335.5], [432.0, 68.0], [435.0, 70.0], [434.0, 72.0], [438.0, 70.0], [437.0, 102999.0], [436.0, 107905.5], [462.0, 70.0], [463.0, 134078.6666666667], [461.0, 100599.5], [460.0, 69.0], [459.0, 71.0], [458.0, 100608.0], [457.0, 71.0], [456.0, 100629.5], [455.0, 69.0], [449.0, 84.0], [448.0, 86.0], [451.0, 91270.0], [450.0, 165264.5], [454.0, 314.0], [453.0, 70.0], [452.0, 100666.0], [478.0, 114125.5], [479.0, 74.0], [477.0, 72.0], [476.0, 71.0], [475.0, 114132.0], [474.0, 146732.6666666667], [473.0, 110090.0], [472.0, 70.0], [470.0, 110119.0], [465.0, 80.0], [464.0, 171442.57142857142], [467.0, 80.0], [466.0, 80.0], [469.0, 71.0], [468.0, 167432.6666666667], [494.0, 80.0], [495.0, 78.0], [493.0, 81.0], [492.0, 81.0], [490.0, 85.0], [489.0, 85.0], [488.0, 86.0], [487.0, 86.0], [481.0, 92.0], [480.0, 184291.42857142858], [483.0, 87.0], [482.0, 91.0], [486.0, 87.0], [485.0, 87.0], [484.0, 87.0], [510.0, 72.0], [511.0, 104987.5], [509.0, 72.0], [508.0, 79493.76000000001], [507.0, 86.0], [506.0, 90.0], [505.0, 89.0], [504.0, 88.0], [503.0, 85.0], [496.0, 83.0], [499.0, 74.0], [498.0, 6821.65], [502.0, 129308.33333333334], [501.0, 131842.3333333333], [500.0, 71.0], [540.0, 69.0], [543.0, 95879.5], [529.0, 100411.0], [528.0, 70.0], [531.0, 74.0], [530.0, 68.0], [533.0, 77.0], [532.0, 139786.3333333333], [542.0, 3707.5], [541.0, 157678.0], [539.0, 112806.5], [538.0, 96519.0], [537.0, 131708.0], [536.0, 81.0], [527.0, 104880.5], [513.0, 72.0], [512.0, 104979.5], [515.0, 104961.0], [514.0, 70.0], [517.0, 75.0], [516.0, 69.0], [519.0, 100475.5], [518.0, 133949.3333333333], [526.0, 112398.0], [525.0, 129951.66666666666], [524.0, 100435.5], [523.0, 134916.3333333333], [522.0, 70.0], [521.0, 134928.0], [520.0, 75.0], [535.0, 178542.6666666667], [534.0, 164780.6], [572.0, 73.0], [575.0, 78.0], [561.0, 103878.5], [560.0, 139544.0], [563.0, 79.0], [562.0, 117186.5], [565.0, 175654.0], [564.0, 73.0], [574.0, 76.0], [573.0, 81.0], [571.0, 68.0], [570.0, 69.0], [569.0, 137917.3333333333], [568.0, 72.0], [559.0, 160855.25], [545.0, 104341.0], [544.0, 75.0], [547.0, 69.0], [546.0, 107760.5], [549.0, 107700.5], [548.0, 141305.3333333333], [551.0, 104224.5], [550.0, 69.0], [558.0, 101948.5], [557.0, 77.0], [556.0, 129753.5], [555.0, 72.0], [554.0, 73.0], [553.0, 140355.2], [552.0, 104217.75], [567.0, 85703.55555555556], [566.0, 76.5], [601.0, 133034.0], [606.0, 76.0], [607.0, 76.0], [593.0, 229910.54545454547], [592.0, 78.0], [595.0, 69.0], [594.0, 71.0], [597.0, 184631.5], [596.0, 72.0], [605.0, 78.0], [604.0, 80.0], [603.0, 81.0], [600.0, 76.5], [583.0, 120826.0], [582.0, 100258.5], [581.0, 85401.4090909091], [580.0, 73.0], [579.0, 70.0], [578.0, 68967.0], [576.0, 76.0], [591.0, 78.0], [590.0, 85.0], [589.0, 76.0], [588.0, 77.0], [587.0, 76.0], [586.0, 77.0], [585.0, 77.5], [584.0, 117877.0], [599.0, 116119.5], [598.0, 76.33333333333333], [636.0, 119923.0], [639.0, 119898.0], [625.0, 71.0], [624.0, 73.0], [627.0, 163023.6666666667], [626.0, 74.0], [629.0, 156260.0], [628.0, 83.0], [638.0, 75.0], [637.0, 82838.0], [635.0, 74.0], [634.0, 70.0], [633.0, 123202.5], [632.0, 72.0], [623.0, 84811.76190476191], [609.0, 75.0], [608.0, 76.0], [611.0, 73.0], [610.0, 74.0], [613.0, 71.0], [612.0, 72.0], [615.0, 69.0], [614.0, 85760.04999999999], [622.0, 74.5], [621.0, 70.0], [620.0, 71.0], [619.0, 183909.5], [618.0, 70.0], [617.0, 69.0], [616.0, 70.0], [631.0, 71.0], [630.0, 145941.2], [668.0, 117899.0], [671.0, 152567.6666666667], [657.0, 69.0], [656.0, 73.0], [659.0, 69.0], [658.0, 120978.5], [661.0, 167913.0], [660.0, 125963.0], [670.0, 69.0], [669.0, 70.0], [667.0, 224636.89999999997], [666.0, 77324.33333333334], [665.0, 74.5], [664.0, 224123.79999999996], [655.0, 84002.66666666666], [641.0, 73.5], [640.0, 119890.5], [643.0, 75.0], [642.0, 85237.33333333334], [645.0, 207961.5], [644.0, 70.0], [647.0, 71.0], [646.0, 113048.60869565218], [654.0, 125988.0], [653.0, 70.0], [652.0, 76.0], [651.0, 76.0], [650.0, 71.0], [649.0, 72.5], [648.0, 70.0], [663.0, 69.0], [662.0, 72.0], [700.0, 71.0], [703.0, 67.0], [689.0, 120842.5], [688.0, 199964.4], [691.0, 75.0], [690.0, 75.0], [693.0, 77674.33333333334], [692.0, 72.0], [702.0, 119115.0], [701.0, 70.0], [699.0, 71.0], [698.0, 69.0], [697.0, 70.0], [696.0, 71.5], [687.0, 197072.0], [673.0, 70.0], [672.0, 133.0], [675.0, 117796.0], [674.0, 82.0], [677.0, 75.0], [676.0, 167572.6666666667], [679.0, 68.0], [678.0, 119918.25], [686.0, 151729.875], [685.0, 70.0], [684.0, 200994.0], [683.0, 125660.0], [682.0, 125666.5], [681.0, 71.0], [680.0, 69.25], [695.0, 73.0], [694.0, 69.33333333333333], [732.0, 198520.0], [735.0, 68.0], [721.0, 160147.0], [720.0, 69.0], [723.0, 70.0], [722.0, 68.0], [725.0, 97888.2], [724.0, 68.0], [734.0, 74.5], [733.0, 72.5], [731.0, 165409.3333333333], [730.0, 185884.5], [729.0, 75.0], [728.0, 74.0], [719.0, 119100.5], [705.0, 165060.0], [704.0, 197065.2], [707.0, 119096.0], [706.0, 178614.0], [709.0, 174445.14285714287], [708.0, 123264.5], [711.0, 71.0], [710.0, 165743.6666666667], [718.0, 69.0], [717.0, 123810.0], [716.0, 130485.5], [715.0, 77.0], [714.0, 142196.2], [713.0, 94855.4], [727.0, 162423.8333333333], [726.0, 123694.0], [762.0, 80.0], [766.0, 83564.9756097561], [767.0, 123718.5], [753.0, 69.0], [752.0, 69.0], [755.0, 77.0], [754.0, 68.0], [757.0, 194858.2], [756.0, 196234.6], [765.0, 84.0], [764.0, 183854.75], [763.0, 78.0], [761.0, 82179.0], [743.0, 122241.50000000001], [742.0, 120991.5], [740.0, 71.0], [739.0, 119739.5], [738.0, 121011.00000000001], [737.0, 119756.0], [736.0, 122292.0], [751.0, 119678.0], [750.0, 122208.5], [749.0, 82222.0], [748.0, 71.0], [747.0, 74.0], [746.0, 74.0], [745.0, 183301.5], [744.0, 123322.0], [759.0, 174631.14285714284], [758.0, 69.0], [796.0, 90.0], [799.0, 73.0], [785.0, 184228.75], [784.0, 121881.25], [787.0, 74.0], [786.0, 60542.5], [789.0, 71.0], [788.0, 71.0], [798.0, 69348.26315789473], [797.0, 163003.1666666667], [795.0, 161257.6666666667], [794.0, 185476.5], [793.0, 202664.16666666666], [792.0, 71.0], [783.0, 121073.5], [769.0, 78.0], [768.0, 72.0], [771.0, 72.0], [770.0, 60918.5], [773.0, 195085.8], [772.0, 71.5], [775.0, 70.0], [774.0, 123589.0], [782.0, 70.0], [781.0, 68.0], [780.0, 160852.3333333333], [779.0, 163846.0], [778.0, 70.5], [777.0, 104366.28571428571], [776.0, 215459.625], [791.0, 69.0], [790.0, 72.0], [828.0, 144933.8], [831.0, 121381.5], [817.0, 77.0], [816.0, 147181.2], [819.0, 145559.2], [818.0, 185384.25], [821.0, 59467.50000000001], [820.0, 32701.521739130432], [830.0, 72.0], [829.0, 71.0], [827.0, 69.0], [826.0, 76.0], [825.0, 71.0], [824.0, 179475.75], [815.0, 202502.83333333334], [801.0, 70.0], [800.0, 121320.00000000001], [803.0, 144262.2], [802.0, 69.0], [805.0, 123719.5], [804.0, 69.0], [807.0, 73.0], [806.0, 161017.6666666667], [814.0, 122048.66666666667], [813.0, 82482.0], [812.0, 70.0], [811.0, 68.0], [810.0, 72.5], [809.0, 120772.5], [808.0, 122730.75], [823.0, 121507.0], [822.0, 119694.0], [860.0, 137543.41176470587], [863.0, 87.0], [849.0, 156392.6666666667], [848.0, 104323.77777777778], [851.0, 117265.5], [850.0, 117285.0], [853.0, 69.33333333333333], [852.0, 65662.25641025642], [862.0, 80.0], [861.0, 79.33333333333333], [859.0, 134020.7142857143], [858.0, 77694.0], [857.0, 70.0], [856.0, 68.0], [847.0, 78442.59090909091], [833.0, 121285.5], [832.0, 202204.3333333333], [835.0, 179126.25], [834.0, 58571.0], [837.0, 70.0], [836.0, 68.0], [839.0, 71.0], [838.0, 70.0], [846.0, 120552.5], [845.0, 70.5], [844.0, 144721.19999999998], [843.0, 204575.14285714287], [842.0, 147.0], [841.0, 80497.33333333334], [840.0, 69.0], [855.0, 68.0], [854.0, 116519.0], [892.0, 108561.75000000001], [895.0, 70924.66666666666], [881.0, 110964.0], [880.0, 164829.75], [883.0, 90.0], [882.0, 93.0], [885.0, 53544.88888888889], [884.0, 87.0], [894.0, 70.0], [893.0, 117840.75000000001], [891.0, 113871.57894736846], [890.0, 69.5], [889.0, 143415.5], [888.0, 35913.166666666664], [879.0, 62993.99999999999], [864.0, 87.0], [866.0, 82.0], [865.0, 83.0], [869.0, 98941.40909090909], [868.0, 81.0], [871.0, 101739.54166666667], [870.0, 72.0], [878.0, 131999.8], [877.0, 318.0], [876.0, 85025.5], [875.0, 80.0], [874.0, 132048.91666666666], [873.0, 96839.28571428571], [872.0, 75722.33333333334], [887.0, 107606.5], [886.0, 70724.66666666666], [921.0, 133.0], [920.0, 129.0], [901.0, 187475.11111111112], [900.0, 69.0], [899.0, 69.0], [898.0, 52384.74999999999], [897.0, 71.8], [896.0, 127594.4], [918.0, 130.33333333333334], [917.0, 140.0], [914.0, 139.0], [913.0, 140.0], [912.0, 106278.5], [910.0, 212418.0], [907.0, 136.0], [956.0, 69.0], [959.0, 73.0], [944.0, 80.0], [946.0, 155546.49999999997], [945.0, 51896.74999999999], [949.0, 165848.0], [947.0, 78.0], [958.0, 86079.83333333333], [957.0, 96905.5], [955.0, 143423.28571428574], [954.0, 67000.0], [953.0, 133951.0], [952.0, 50280.25], [943.0, 103429.9], [928.0, 136.0], [931.0, 136.0], [930.0, 127.0], [934.0, 35520.0], [932.0, 136.0], [942.0, 83026.2], [941.0, 68.0], [940.0, 77860.375], [939.0, 69228.66666666667], [938.0, 75.0], [937.0, 74.0], [936.0, 13665.09090909091], [951.0, 69.0], [950.0, 47767.59183673469], [988.0, 47819.0], [991.0, 115953.35714285714], [977.0, 80.0], [976.0, 102590.5], [979.0, 94488.85714285716], [978.0, 82623.40000000001], [981.0, 118043.0], [980.0, 77905.8], [990.0, 69.0], [989.0, 66471.66666666666], [987.0, 147565.16666666666], [986.0, 76.0], [985.0, 67777.0], [984.0, 50860.25], [975.0, 165121.22222222225], [961.0, 102604.5], [960.0, 149745.875], [963.0, 106616.0], [962.0, 102560.0], [965.0, 95626.5], [964.0, 70.0], [967.0, 108969.77777777778], [966.0, 110877.22222222222], [974.0, 79.0], [973.0, 80.0], [972.0, 80.0], [971.0, 86.4], [970.0, 84.0], [969.0, 89.0], [968.0, 86.0], [983.0, 97567.75], [982.0, 54540.5357142857], [1020.0, 132579.5], [1023.0, 73.5], [1009.0, 71.0], [1008.0, 78.33333333333333], [1011.0, 95962.77777777778], [1010.0, 81744.85714285714], [1013.0, 75.0], [1012.0, 132588.84615384616], [1022.0, 77.0], [1021.0, 126040.53333333335], [1019.0, 178533.1111111111], [1018.0, 68.5], [1017.0, 73.5], [1016.0, 70.66666666666667], [1007.0, 101325.12499999999], [993.0, 66423.33333333334], [992.0, 85.0], [995.0, 84.5], [994.0, 83.6], [997.0, 80118.48387096776], [996.0, 82.0], [999.0, 128167.66666666666], [998.0, 71.0], [1006.0, 119332.8], [1005.0, 70.0], [1004.0, 124386.58333333334], [1003.0, 49128.75], [1002.0, 76918.8], [1001.0, 68.0], [1000.0, 77.0], [1015.0, 69.0], [1014.0, 75.0], [1084.0, 72.0], [1064.0, 102565.0], [1056.0, 129613.63636363637], [1058.0, 91607.54545454544], [1060.0, 61082.46666666666], [1062.0, 71.5], [1066.0, 77.0], [1068.0, 75.0], [1070.0, 160036.75], [1086.0, 47688.0], [1082.0, 74.0], [1080.0, 74.5], [1078.0, 77.0], [1076.0, 80.5], [1074.0, 81.0], [1072.0, 102540.0], [1024.0, 80484.48387096774], [1026.0, 107523.0], [1028.0, 69.0], [1030.0, 155992.0], [1032.0, 107377.0], [1034.0, 129944.375], [1036.0, 104484.5], [1038.0, 128922.6], [1054.0, 165756.4], [1052.0, 49013.75], [1050.0, 85558.2], [1048.0, 76.0], [1046.0, 51387.0], [1044.0, 77.0], [1042.0, 78.0], [1040.0, 68.0], [1142.0, 69217.56521739131], [1138.0, 93021.18562874253], [1146.0, 104.0], [1120.0, 108815.4], [1122.0, 53693.75], [1124.0, 71465.0], [1126.0, 42387.00000000001], [1128.0, 101.0], [1130.0, 115105.88888888889], [1132.0, 91556.0], [1134.0, 115745.66666666667], [1148.0, 101.0], [1144.0, 86449.38611713673], [1140.0, 81894.2], [1136.0, 82.5], [1088.0, 50894.666666666664], [1090.0, 77545.69811320753], [1092.0, 102246.0], [1094.0, 72.0], [1096.0, 108342.78378378376], [1098.0, 137347.64285714287], [1102.0, 81.0], [1118.0, 108238.62222222226], [1116.0, 86376.4], [1114.0, 99657.203125], [1112.0, 122.66666666666667], [1110.0, 54064.4230769231], [1108.0, 76.0], [1106.0, 79.5], [1104.0, 81.0], [1160.0, 64461.060402684576], [1200.0, 34033.7998537478], [1152.0, 95.0], [1156.0, 92.75], [1158.0, 89.0], [1162.0, 95.5], [1164.0, 92912.95], [1166.0, 95502.5], [1182.0, 91.0], [1180.0, 78.75], [1178.0, 71.0], [1176.0, 54818.45731707317], [1174.0, 69198.96551724136], [1172.0, 65479.71244635192], [1170.0, 95088.76851851854], [1168.0, 74264.55913978493], [1184.0, 90.0], [1186.0, 77900.5], [1188.0, 84.0], [1198.0, 70.0], [1194.0, 77.0], [1192.0, 79.0], [1190.0, 84.0], [1085.0, 54862.172413793094], [1087.0, 83.0], [1057.0, 71205.73913043478], [1059.0, 33602.333333333336], [1061.0, 68438.33333333334], [1063.0, 97687.4736842105], [1065.0, 100502.5], [1067.0, 74.0], [1069.0, 145052.6666666667], [1071.0, 86.0], [1083.0, 74.0], [1081.0, 72.0], [1055.0, 70.33333333333333], [1025.0, 72.0], [1027.0, 78542.09999999999], [1029.0, 71.0], [1031.0, 161618.0], [1033.0, 54289.871794871804], [1035.0, 62759.849056603765], [1037.0, 78649.5], [1039.0, 139273.7777777778], [1053.0, 93473.90909090909], [1051.0, 134708.875], [1049.0, 133851.91666666666], [1047.0, 68476.33333333334], [1045.0, 102728.75], [1043.0, 126216.73333333334], [1041.0, 72.0], [1149.0, 101.0], [1151.0, 100.5], [1121.0, 151731.5], [1123.0, 68250.09999999999], [1125.0, 94564.22222222222], [1127.0, 172445.8], [1129.0, 127809.0], [1131.0, 71.0], [1133.0, 69.0], [1135.0, 113183.59999999999], [1145.0, 105155.60283687944], [1143.0, 85749.51923076926], [1141.0, 52671.06060606061], [1139.0, 27847.958333333336], [1137.0, 103450.26666666663], [1119.0, 43262.8], [1089.0, 171042.16666666666], [1091.0, 70.0], [1093.0, 51143.24999999999], [1095.0, 105354.34782608693], [1097.0, 20496.2], [1099.0, 102170.0], [1101.0, 79.0], [1117.0, 73808.66666666666], [1115.0, 30109.857142857138], [1113.0, 89410.82142857145], [1111.0, 90903.33333333334], [1109.0, 75.0], [1107.0, 77.0], [1159.0, 88.0], [1191.0, 80.33333333333333], [1195.0, 74.0], [1183.0, 91.0], [1153.0, 95.0], [1157.0, 90.0], [1161.0, 63008.22499999999], [1163.0, 93.5], [1165.0, 76345.96052631579], [1167.0, 80903.04761904762], [1181.0, 62304.95952380953], [1179.0, 60242.963855421694], [1177.0, 24119.0], [1175.0, 87936.85714285714], [1173.0, 69361.01333333329], [1171.0, 72.0], [1169.0, 72132.0], [1185.0, 94.0], [1187.0, 92.0], [1199.0, 62307.56000000001], [1197.0, 41263.351063829796], [1193.0, 79.0], [1189.0, 38990.5], [1.0, 40555.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1107.852129629633, 50060.60486111119]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1455.4833333333333, "minX": 1.68694272E12, "maxY": 1.338932455E7, "series": [{"data": [[1.68694338E12, 3991207.2], [1.68694272E12, 4666383.033333333], [1.68694368E12, 1.338932455E7], [1.68694278E12, 7985226.766666667], [1.68694308E12, 1.0144039483333332E7], [1.68694314E12, 4207628.566666666], [1.68694344E12, 7024731.05], [1.6869435E12, 6529618.966666667], [1.68694284E12, 5332970.466666667], [1.6869429E12, 1.0494429366666667E7], [1.6869432E12, 6231133.666666667], [1.68694326E12, 7278509.666666667], [1.68694356E12, 9141488.316666666], [1.68694362E12, 7015392.35], [1.68694296E12, 4502249.45], [1.68694302E12, 7123458.283333333], [1.68694332E12, 1.0399414883333333E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68694338E12, 1455.4833333333333], [1.68694272E12, 18922.366666666665], [1.68694368E12, 2454.45], [1.68694278E12, 12266.183333333332], [1.68694308E12, 8409.8], [1.68694314E12, 2311.233333333333], [1.68694344E12, 2956.0333333333333], [1.6869435E12, 2620.85], [1.68694284E12, 4529.516666666666], [1.6869429E12, 8560.8], [1.6869432E12, 4008.383333333333], [1.68694326E12, 3438.733333333333], [1.68694356E12, 3323.25], [1.68694362E12, 2086.8], [1.68694296E12, 4514.2], [1.68694302E12, 4726.716666666666], [1.68694332E12, 6797.483333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68694368E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9516.733106189668, "minX": 1.68694272E12, "maxY": 94118.90184049071, "series": [{"data": [[1.68694338E12, 84270.80620155031], [1.68694272E12, 9516.733106189668], [1.68694368E12, 80655.53198294241], [1.68694278E12, 28360.202722590155], [1.68694308E12, 56984.863956639674], [1.68694314E12, 54746.35462184874], [1.68694344E12, 81146.01679586567], [1.6869435E12, 85886.36697247718], [1.68694284E12, 35784.41104294486], [1.6869429E12, 49496.172809956915], [1.6869432E12, 59430.63785557988], [1.68694326E12, 71662.89707602338], [1.68694356E12, 90279.1442205727], [1.68694362E12, 94118.90184049071], [1.68694296E12, 36098.91804979251], [1.68694302E12, 50453.490248226924], [1.68694332E12, 72737.34233625932]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68694368E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8798.051959114135, "minX": 1.68694272E12, "maxY": 80837.24846625762, "series": [{"data": [[1.68694338E12, 74711.03617571061], [1.68694272E12, 8798.051959114135], [1.68694368E12, 64416.743070362434], [1.68694278E12, 25464.59381898455], [1.68694308E12, 49666.06233062331], [1.68694314E12, 48813.66386554617], [1.68694344E12, 71067.66020671843], [1.6869435E12, 73729.71406727821], [1.68694284E12, 31345.787905346224], [1.6869429E12, 41176.864528482554], [1.6869432E12, 52992.073304157595], [1.68694326E12, 60218.930994152106], [1.68694356E12, 75325.93955461298], [1.68694362E12, 80837.24846625762], [1.68694296E12, 30773.17531120331], [1.68694302E12, 42474.27748226941], [1.68694332E12, 63692.15867656979]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68694368E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 20.708588957055216, "minX": 1.68694272E12, "maxY": 578.2072685973874, "series": [{"data": [[1.68694338E12, 22.501291989664107], [1.68694272E12, 578.2072685973874], [1.68694368E12, 23.023454157782524], [1.68694278E12, 22.951066961000706], [1.68694308E12, 28.56422764227637], [1.68694314E12, 23.031932773109244], [1.68694344E12, 24.160206718346245], [1.6869435E12, 30.961773700305827], [1.68694284E12, 28.023663453111283], [1.6869429E12, 28.369076112972724], [1.6869432E12, 25.148796498905927], [1.68694326E12, 23.366081871345045], [1.68694356E12, 24.38812301166487], [1.68694362E12, 20.708588957055216], [1.68694296E12, 25.420124481327807], [1.68694302E12, 24.483156028368803], [1.68694332E12, 28.246455097906818]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68694368E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 66.0, "minX": 1.68694272E12, "maxY": 265991.0, "series": [{"data": [[1.68694338E12, 218293.0], [1.68694272E12, 48491.0], [1.68694368E12, 246189.0], [1.68694278E12, 82595.0], [1.68694308E12, 172705.0], [1.68694314E12, 167853.0], [1.68694344E12, 226271.0], [1.6869435E12, 236314.0], [1.68694284E12, 91817.0], [1.6869429E12, 134436.0], [1.6869432E12, 183544.0], [1.68694326E12, 191176.0], [1.68694356E12, 254729.0], [1.68694362E12, 265991.0], [1.68694296E12, 134522.0], [1.68694302E12, 131510.0], [1.68694332E12, 222040.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68694338E12, 67.0], [1.68694272E12, 67.0], [1.68694368E12, 67.0], [1.68694278E12, 67.0], [1.68694308E12, 66.0], [1.68694314E12, 67.0], [1.68694344E12, 67.0], [1.6869435E12, 67.0], [1.68694284E12, 66.0], [1.6869429E12, 67.0], [1.6869432E12, 67.0], [1.68694326E12, 67.0], [1.68694356E12, 67.0], [1.68694362E12, 67.0], [1.68694296E12, 67.0], [1.68694302E12, 67.0], [1.68694332E12, 67.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68694338E12, 211172.6], [1.68694272E12, 25665.4], [1.68694368E12, 206083.2], [1.68694278E12, 71959.0], [1.68694308E12, 160469.4], [1.68694314E12, 155252.8], [1.68694344E12, 217137.3], [1.6869435E12, 211901.4], [1.68694284E12, 80276.2], [1.6869429E12, 125092.0], [1.6869432E12, 161484.9], [1.68694326E12, 180212.6], [1.68694356E12, 244244.2], [1.68694362E12, 251797.4], [1.68694296E12, 117857.2], [1.68694302E12, 118651.2], [1.68694332E12, 215117.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68694338E12, 218203.02], [1.68694272E12, 43781.49999999999], [1.68694368E12, 230702.06], [1.68694278E12, 79312.56], [1.68694308E12, 171161.24], [1.68694314E12, 165943.64], [1.68694344E12, 225238.96], [1.6869435E12, 236305.0], [1.68694284E12, 86627.55999999994], [1.6869429E12, 128747.88], [1.6869432E12, 175314.34], [1.68694326E12, 191094.78999999998], [1.68694356E12, 248690.17999999996], [1.68694362E12, 265955.94], [1.68694296E12, 124097.34000000005], [1.68694302E12, 128133.74], [1.68694332E12, 222031.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68694338E12, 22356.0], [1.68694272E12, 7146.0], [1.68694368E12, 10097.0], [1.68694278E12, 17375.0], [1.68694308E12, 31782.0], [1.68694314E12, 19696.0], [1.68694344E12, 47444.5], [1.6869435E12, 56059.0], [1.68694284E12, 38184.0], [1.6869429E12, 32161.0], [1.6869432E12, 40638.5], [1.68694326E12, 60695.5], [1.68694356E12, 50786.0], [1.68694362E12, 29638.5], [1.68694296E12, 12961.0], [1.68694302E12, 43808.0], [1.68694332E12, 21183.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68694338E12, 215458.0], [1.68694272E12, 36685.299999999996], [1.68694368E12, 215656.2], [1.68694278E12, 74798.8], [1.68694308E12, 163700.19999999998], [1.68694314E12, 159201.4], [1.68694344E12, 218698.75], [1.6869435E12, 218280.8], [1.68694284E12, 80901.6], [1.6869429E12, 126676.2], [1.6869432E12, 165831.2], [1.68694326E12, 187373.90000000002], [1.68694356E12, 247171.3], [1.68694362E12, 257232.1], [1.68694296E12, 119698.7], [1.68694302E12, 123093.0], [1.68694332E12, 218411.25]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68694368E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 73.0, "minX": 1.0, "maxY": 180048.0, "series": [{"data": [[2.0, 74.0], [3.0, 73414.0], [4.0, 19497.0], [5.0, 73.0], [6.0, 35525.0], [7.0, 40715.5], [8.0, 78.5], [9.0, 9967.0], [10.0, 81483.0], [11.0, 107111.0], [12.0, 54486.0], [13.0, 12293.0], [14.0, 105655.5], [15.0, 106.0], [16.0, 23286.5], [17.0, 53334.5], [18.0, 78.0], [19.0, 84.0], [20.0, 17967.0], [21.0, 77.0], [22.0, 80.0], [23.0, 23301.0], [24.0, 16035.0], [25.0, 96.5], [26.0, 7488.0], [27.0, 9004.0], [28.0, 40525.5], [29.0, 112612.0], [30.0, 13646.0], [31.0, 65398.0], [32.0, 19274.5], [33.0, 31372.0], [35.0, 4330.0], [34.0, 88.5], [36.0, 37179.0], [37.0, 16543.5], [39.0, 17637.5], [38.0, 21071.0], [40.0, 46034.0], [41.0, 29696.5], [42.0, 17692.5], [43.0, 21047.0], [44.0, 36748.0], [45.0, 14283.0], [47.0, 28692.0], [46.0, 46445.0], [48.0, 83.0], [51.0, 9348.5], [50.0, 53715.5], [52.0, 45385.0], [53.0, 23048.5], [55.0, 19469.0], [54.0, 17710.0], [57.0, 17870.0], [56.0, 52763.0], [58.0, 110256.0], [59.0, 150208.0], [60.0, 30815.0], [61.0, 128066.0], [63.0, 43693.0], [62.0, 45542.0], [64.0, 13651.5], [66.0, 98622.5], [65.0, 43413.5], [71.0, 6477.0], [68.0, 16988.0], [70.0, 13463.0], [69.0, 57912.5], [75.0, 26044.0], [74.0, 51398.5], [73.0, 180048.0], [76.0, 15523.5], [77.0, 40427.0], [79.0, 43227.0], [78.0, 47103.0], [80.0, 127.0], [82.0, 62035.5], [86.0, 21726.5], [85.0, 32630.0], [90.0, 27271.0], [88.0, 53704.0], [89.0, 18527.0], [91.0, 70687.0], [94.0, 5735.0], [93.0, 46600.0], [92.0, 153473.0], [98.0, 12337.0], [99.0, 43835.5], [103.0, 18694.0], [101.0, 41448.0], [100.0, 57156.0], [102.0, 106841.0], [104.0, 11972.5], [107.0, 41279.0], [109.0, 18658.5], [111.0, 81.0], [113.0, 50779.0], [112.0, 136.0], [116.0, 19596.5], [119.0, 14007.0], [122.0, 44171.0], [124.0, 45142.5], [128.0, 5004.5], [133.0, 7521.0], [129.0, 40517.0], [132.0, 49835.5], [134.0, 54664.0], [141.0, 60820.0], [151.0, 14641.0], [150.0, 56468.5], [145.0, 29236.0], [159.0, 12029.0], [155.0, 44100.0], [167.0, 29080.0], [163.0, 16621.0], [161.0, 117377.0], [178.0, 54335.5], [184.0, 11422.5], [194.0, 35355.0], [203.0, 65507.0], [200.0, 37171.5], [207.0, 42529.0], [204.0, 42276.0], [221.0, 14725.0], [245.0, 32204.0], [275.0, 9786.0], [294.0, 2225.0], [293.0, 145.0], [340.0, 1502.0], [1.0, 76.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 8929.0], [6.0, 27125.5], [7.0, 2657.0], [8.0, 5496.5], [10.0, 7341.0], [12.0, 7909.0], [15.0, 8613.0], [16.0, 6498.5], [17.0, 8889.0], [18.0, 5894.0], [19.0, 17568.0], [20.0, 11203.5], [21.0, 11114.5], [23.0, 11432.0], [24.0, 9348.0], [25.0, 8735.0], [29.0, 8575.0], [30.0, 5895.0], [31.0, 22587.0], [32.0, 9152.0], [34.0, 6909.0], [36.0, 7564.5], [37.0, 9499.0], [39.0, 15048.0], [41.0, 13202.5], [43.0, 7849.0], [47.0, 11625.0], [48.0, 9182.0], [52.0, 10543.5], [53.0, 7571.0], [55.0, 9235.0], [54.0, 7313.5], [56.0, 10757.0], [57.0, 6520.0], [59.0, 9249.5], [60.0, 5621.0], [61.0, 11476.5], [63.0, 16668.0], [62.0, 7048.0], [65.0, 14705.0], [71.0, 7246.5], [70.0, 17126.0], [68.0, 7188.0], [74.0, 14299.0], [80.0, 11348.0], [82.0, 12279.5], [86.0, 5326.0], [85.0, 13470.0], [90.0, 7178.5], [91.0, 22729.5], [88.0, 16559.0], [92.0, 14053.0], [99.0, 8975.0], [100.0, 8838.0], [107.0, 7711.5], [111.0, 10609.0], [113.0, 16185.0], [112.0, 5149.0], [122.0, 14847.0], [133.0, 5778.0], [132.0, 13938.0], [134.0, 13644.0], [141.0, 10169.0], [150.0, 10045.5], [167.0, 8708.0], [178.0, 8164.0], [203.0, 9136.0], [1.0, 14931.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 340.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 145055.0, "series": [{"data": [[2.0, 74.0], [3.0, 67405.5], [4.0, 19497.0], [5.0, 73.0], [6.0, 35525.0], [7.0, 40715.5], [8.0, 78.5], [9.0, 9967.0], [10.0, 70770.0], [11.0, 74562.0], [12.0, 54486.0], [13.0, 12293.0], [14.0, 93764.0], [15.0, 106.0], [16.0, 23286.5], [17.0, 53334.5], [18.0, 78.0], [19.0, 84.0], [20.0, 17967.0], [21.0, 77.0], [22.0, 80.0], [23.0, 23301.0], [24.0, 15496.5], [25.0, 96.5], [26.0, 6600.0], [27.0, 9004.0], [28.0, 40525.5], [29.0, 94733.0], [30.0, 13646.0], [31.0, 65398.0], [32.0, 19274.5], [33.0, 31372.0], [35.0, 3462.0], [34.0, 88.5], [36.0, 32116.0], [37.0, 16543.5], [39.0, 17599.0], [38.0, 21071.0], [40.0, 46034.0], [41.0, 29696.5], [42.0, 17692.5], [43.0, 21047.0], [44.0, 31546.5], [45.0, 14283.0], [47.0, 28692.0], [46.0, 46445.0], [48.0, 83.0], [51.0, 9348.5], [50.0, 53715.5], [52.0, 45385.0], [53.0, 23048.5], [55.0, 19469.0], [54.0, 17710.0], [57.0, 17870.0], [56.0, 52763.0], [58.0, 85932.5], [59.0, 112887.0], [60.0, 30815.0], [61.0, 104559.0], [63.0, 32174.0], [62.0, 45542.0], [64.0, 13651.5], [66.0, 87777.0], [65.0, 43413.5], [71.0, 5478.0], [68.0, 16988.0], [70.0, 13463.0], [69.0, 57912.5], [75.0, 21577.5], [74.0, 51398.5], [73.0, 145055.0], [76.0, 15523.5], [77.0, 40427.0], [79.0, 43227.0], [78.0, 47103.0], [80.0, 127.0], [82.0, 62035.5], [86.0, 18623.5], [85.0, 32630.0], [90.0, 24591.5], [88.0, 53704.0], [89.0, 18527.0], [91.0, 70687.0], [94.0, 4850.0], [93.0, 46600.0], [92.0, 113858.5], [98.0, 12337.0], [99.0, 43835.0], [103.0, 18694.0], [101.0, 41448.0], [100.0, 46937.5], [102.0, 84449.0], [104.0, 11972.5], [107.0, 41279.0], [109.0, 18658.5], [111.0, 81.0], [113.0, 50779.0], [112.0, 135.0], [116.0, 19596.5], [119.0, 14007.0], [122.0, 44171.0], [124.0, 45142.5], [128.0, 3853.0], [133.0, 7521.0], [129.0, 40517.0], [132.0, 35904.0], [134.0, 54664.0], [141.0, 45382.0], [151.0, 13165.0], [150.0, 52670.0], [145.0, 29236.0], [159.0, 12029.0], [155.0, 44100.0], [167.0, 21085.5], [163.0, 16621.0], [161.0, 79177.0], [178.0, 54335.5], [184.0, 11422.5], [194.0, 35355.0], [203.0, 38751.0], [200.0, 37171.5], [207.0, 42529.0], [204.0, 41237.5], [221.0, 14725.0], [245.0, 32204.0], [275.0, 7603.0], [294.0, 2225.0], [293.0, 145.0], [340.0, 1502.0], [1.0, 76.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 8929.0], [6.0, 27125.5], [7.0, 2657.0], [8.0, 5496.5], [10.0, 0.0], [12.0, 7909.0], [15.0, 8613.0], [16.0, 6498.5], [17.0, 8889.0], [18.0, 0.0], [19.0, 17568.0], [20.0, 11203.5], [21.0, 11114.5], [23.0, 11432.0], [24.0, 9348.0], [25.0, 7101.0], [29.0, 8575.0], [30.0, 0.0], [31.0, 22587.0], [32.0, 9152.0], [34.0, 0.0], [36.0, 7564.5], [37.0, 9499.0], [39.0, 15048.0], [41.0, 13202.5], [43.0, 0.0], [47.0, 11625.0], [48.0, 0.0], [52.0, 10543.5], [53.0, 0.0], [55.0, 9235.0], [54.0, 7313.5], [56.0, 10757.0], [57.0, 0.0], [59.0, 9249.5], [60.0, 0.0], [61.0, 11476.5], [63.0, 16668.0], [62.0, 6183.0], [65.0, 14705.0], [71.0, 7246.5], [70.0, 17126.0], [68.0, 0.0], [74.0, 14299.0], [80.0, 11348.0], [82.0, 12279.5], [86.0, 0.0], [85.0, 13470.0], [90.0, 7178.5], [91.0, 22729.5], [88.0, 16559.0], [92.0, 14053.0], [99.0, 8975.0], [100.0, 8838.0], [107.0, 7711.5], [111.0, 10609.0], [113.0, 16185.0], [112.0, 0.0], [122.0, 14847.0], [133.0, 5778.0], [132.0, 13938.0], [134.0, 13644.0], [141.0, 10169.0], [150.0, 10045.5], [167.0, 8708.0], [178.0, 8164.0], [203.0, 9136.0], [1.0, 14931.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 340.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.15, "minX": 1.68694272E12, "maxY": 78.7, "series": [{"data": [[1.68694338E12, 6.15], [1.68694272E12, 78.7], [1.68694368E12, 7.833333333333333], [1.68694278E12, 45.3], [1.68694308E12, 30.75], [1.68694314E12, 9.6], [1.68694344E12, 11.6], [1.6869435E12, 9.35], [1.68694284E12, 19.016666666666666], [1.6869429E12, 34.81666666666667], [1.6869432E12, 15.15], [1.68694326E12, 14.05], [1.68694356E12, 11.816666666666666], [1.68694362E12, 6.733333333333333], [1.68694296E12, 16.066666666666666], [1.68694302E12, 18.8], [1.68694332E12, 24.266666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68694368E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68694272E12, "maxY": 57.95, "series": [{"data": [[1.68694338E12, 6.083333333333333], [1.68694272E12, 57.95], [1.68694368E12, 15.616666666666667], [1.68694278E12, 43.05], [1.68694308E12, 27.85], [1.68694314E12, 8.783333333333333], [1.68694344E12, 11.466666666666667], [1.6869435E12, 9.916666666666666], [1.68694284E12, 17.283333333333335], [1.6869429E12, 32.18333333333333], [1.6869432E12, 13.333333333333334], [1.68694326E12, 12.2], [1.68694356E12, 13.883333333333333], [1.68694362E12, 10.033333333333333], [1.68694296E12, 14.416666666666666], [1.68694302E12, 17.083333333333332], [1.68694332E12, 22.233333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68694338E12, 0.36666666666666664], [1.68694272E12, 0.75], [1.68694278E12, 2.25], [1.68694308E12, 2.183333333333333], [1.68694314E12, 0.6666666666666666], [1.68694344E12, 0.9833333333333333], [1.6869435E12, 0.9833333333333333], [1.68694284E12, 1.5666666666666667], [1.6869429E12, 2.5166666666666666], [1.6869432E12, 1.55], [1.68694326E12, 2.0166666666666666], [1.68694356E12, 1.0333333333333334], [1.68694362E12, 0.3], [1.68694296E12, 1.15], [1.68694302E12, 1.7166666666666666], [1.68694332E12, 2.066666666666667]], "isOverall": false, "label": "400", "isController": false}, {"data": [[1.6869429E12, 0.11666666666666667], [1.6869432E12, 0.35], [1.68694368E12, 0.016666666666666666], [1.68694326E12, 0.03333333333333333], [1.68694308E12, 0.7166666666666667], [1.68694356E12, 0.8], [1.68694314E12, 0.4666666666666667], [1.68694362E12, 0.5333333333333333], [1.68694296E12, 0.5], [1.68694344E12, 0.45], [1.68694284E12, 0.16666666666666666], [1.68694332E12, 0.38333333333333336]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68694368E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68694272E12, "maxY": 57.95, "series": [{"data": [[1.68694338E12, 6.083333333333333], [1.68694272E12, 57.95], [1.68694368E12, 15.616666666666667], [1.68694278E12, 43.05], [1.68694308E12, 27.85], [1.68694314E12, 8.783333333333333], [1.68694344E12, 11.466666666666667], [1.6869435E12, 9.916666666666666], [1.68694284E12, 17.283333333333335], [1.6869429E12, 32.18333333333333], [1.6869432E12, 13.333333333333334], [1.68694326E12, 12.2], [1.68694356E12, 13.883333333333333], [1.68694362E12, 10.033333333333333], [1.68694296E12, 14.416666666666666], [1.68694302E12, 17.083333333333332], [1.68694332E12, 22.233333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68694338E12, 0.36666666666666664], [1.68694272E12, 0.75], [1.68694368E12, 0.016666666666666666], [1.68694278E12, 2.25], [1.68694308E12, 2.9], [1.68694314E12, 1.1333333333333333], [1.68694344E12, 1.4333333333333333], [1.6869435E12, 0.9833333333333333], [1.68694284E12, 1.7333333333333334], [1.6869429E12, 2.6333333333333333], [1.6869432E12, 1.9], [1.68694326E12, 2.05], [1.68694356E12, 1.8333333333333333], [1.68694362E12, 0.8333333333333334], [1.68694296E12, 1.65], [1.68694302E12, 1.7166666666666666], [1.68694332E12, 2.45]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68694368E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68694272E12, "maxY": 57.95, "series": [{"data": [[1.68694338E12, 6.083333333333333], [1.68694272E12, 57.95], [1.68694368E12, 15.616666666666667], [1.68694278E12, 43.05], [1.68694308E12, 27.85], [1.68694314E12, 8.783333333333333], [1.68694344E12, 11.466666666666667], [1.6869435E12, 9.916666666666666], [1.68694284E12, 17.283333333333335], [1.6869429E12, 32.18333333333333], [1.6869432E12, 13.333333333333334], [1.68694326E12, 12.2], [1.68694356E12, 13.883333333333333], [1.68694362E12, 10.033333333333333], [1.68694296E12, 14.416666666666666], [1.68694302E12, 17.083333333333332], [1.68694332E12, 22.233333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68694338E12, 0.36666666666666664], [1.68694272E12, 0.75], [1.68694368E12, 0.016666666666666666], [1.68694278E12, 2.25], [1.68694308E12, 2.9], [1.68694314E12, 1.1333333333333333], [1.68694344E12, 1.4333333333333333], [1.6869435E12, 0.9833333333333333], [1.68694284E12, 1.7333333333333334], [1.6869429E12, 2.6333333333333333], [1.6869432E12, 1.9], [1.68694326E12, 2.05], [1.68694356E12, 1.8333333333333333], [1.68694362E12, 0.8333333333333334], [1.68694296E12, 1.65], [1.68694302E12, 1.7166666666666666], [1.68694332E12, 2.45]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68694368E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

